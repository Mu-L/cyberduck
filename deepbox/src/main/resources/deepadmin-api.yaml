openapi: 3.0.3
info:
  title: DeepAdmin API
  version: 1.0.0
  description: General API for DeepCloud Admin / Subscription Service
  contact:
    name: Arcanite / Deepcloud
    email: support@deepcloud.swiss
paths:
  /api/v1/abaclock/code:
    post:
      operationId: abaclock_code_create
      description: Mixin to add helper for JWTTokenHasScope permission support
      tags:
      - abaclock
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterClockCode'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RegisterClockCode'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RegisterClockCode'
        required: true
      security:
      - JWTTokenAuthentication:
        - abaclock.register
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterClockCode'
          description: ''
  /api/v1/abaclock/code/{clock_id}:
    get:
      operationId: abaclock_code_retrieve
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: clock_id
        schema:
          type: string
        required: true
      tags:
      - abaclock
      security:
      - JWTTokenAuthentication:
        - abaclock.register
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollClock'
          description: ''
  /api/v1/abaclock/persons:
    post:
      operationId: abaclock_persons_create
      description: Mixin to add helper for JWTTokenHasScope permission support
      tags:
      - abaclock
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterPerson'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RegisterPerson'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RegisterPerson'
        required: true
      security:
      - JWTTokenAuthentication:
        - abaclock.register
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterPerson'
          description: ''
  /api/v1/abaclock/persons/{person_ref_id}:
    get:
      operationId: abaclock_persons_retrieve
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: person_ref_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - abaclock
      security:
      - JWTTokenAuthentication:
        - abaclock.register
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterPerson'
          description: ''
    delete:
      operationId: abaclock_persons_destroy
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: person_ref_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - abaclock
      security:
      - JWTTokenAuthentication:
        - abaclock.register
      responses:
        '204':
          description: No response body
  /api/v1/abaclock/persons/{person_ref_id}/info:
    get:
      operationId: abaclock_persons_info_retrieve
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: person_ref_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - abaclock
      security:
      - JWTTokenAuthentication:
        - abaclock.register
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Info'
          description: The detailed info about the person. Directly from DeepID
  /api/v1/deepbox/deepa-trial/{organization_uid}/:
    get:
      operationId: deepbox_deepa_trial_retrieve
      description: Get the status of the DeepA trial for a given company.
      parameters:
      - in: path
        name: organization_uid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - deepbox
      security:
      - JWTTokenAuthentication:
        - subscription.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepATrial'
          description: ''
        '404':
          description: The subscription for the given organization wasn't found.
  /api/v1/deepbox/deepa-trial/{organization_uid}/activate/:
    post:
      operationId: deepbox_deepa_trial_activate_create
      description: Activate the DeepA trial for a given company.
      parameters:
      - in: path
        name: organization_uid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - deepbox
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeepATrial'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeepATrial'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeepATrial'
      security:
      - JWTTokenAuthentication:
        - subscription.write
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepATrial'
          description: The DeepA trial was activated.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepATrial'
          description: The DeepA trial is already in use or consumed.
        '404':
          description: The subscription for the given organization wasn't found.
  /api/v1/deepbox/mobile-payments/webhook:
    post:
      operationId: deepbox_mobile_payments_webhook_create
      description: |-
        Endpoint for payments webhooks from the mobile payment service.
        Authenticated by the mobile payment service
      tags:
      - deepbox
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MobilePaymentWebhookEvent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MobilePaymentWebhookEvent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MobilePaymentWebhookEvent'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/deepbox/partner-access/:
    get:
      operationId: deepbox_partner_access_list
      description: List all Partner Accesses.
      parameters:
      - in: query
        name: client_id_pattern
        schema:
          type: string
        description: Pattern to filter the client ids on.
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - deepbox
      security:
      - JWTTokenAuthentication:
        - support-tool.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPartnerAccessBaseResponseList'
          description: ''
    post:
      operationId: deepbox_partner_access_create
      description: Create a new Partner Access.
      tags:
      - deepbox
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerAccessCreate'
            examples:
              PublicClient(dev):
                value:
                  customer_name: bidoum
                  client_facing_name: DeepSign Integration for Sharepoint
                  client_id: partner-bidoum-dev
                  client_type: on-premise
                  client_authorization_method: null
                  client_credential_retrieval_method: copy-paste
                  create_service_users_as_admins: false
                summary: public client (dev)
              ClientSecretAuthWithCallbackUrl(demo):
                value:
                  customer_name: bidoum
                  client_facing_name: DeepSign Integration for Sharepoint
                  client_id: partner-bidoum-demo
                  client_type: web-based-solution
                  client_authorization_method: client-secret
                  client_credential_retrieval_method: callback-url
                  client_callback_urls:
                  - http://abc.ch/callback/
                  create_service_users_as_admins: false
                summary: client secret auth with callback url (demo)
              JwksAuthWithJwksUrl(int):
                value:
                  customer_name: bidoum
                  client_facing_name: DeepSign Integration for Sharepoint
                  client_id: partner-bidoum-int
                  client_type: web-based-solution
                  client_authorization_method: client-jwt
                  client_credential_retrieval_method: copy-paste
                  client_jwks_url: http://abc.ch/certs/
                  create_service_users_as_admins: false
                summary: jwks auth with jwks url (int)
              JwksAuthWithJwks(prod):
                value:
                  customer_name: bidoum
                  client_facing_name: DeepSign Integration for Sharepoint
                  client_id: partner-bidoum
                  client_type: web-based-solution
                  client_authorization_method: client-jwt
                  client_credential_retrieval_method: copy-paste
                  client_jwks:
                    keys:
                    - kty: RSA
                      e: AQAB
                      use: sig
                      kid: XoEY770LK2sehQs-c3GZ5nhOkeHuKZMEnEsSwToUAM0
                      alg: RS256
                      n: kOWXpWXMUBOyNpIIoByBog4A3D-[..etc..]78IPuVTZwVx8TK3iT99ZyulFd8XN8Q
                  create_service_users_as_admins: false
                summary: jwks auth with jwks (prod)
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PartnerAccessCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PartnerAccessCreate'
        required: true
      security:
      - JWTTokenAuthentication:
        - support-tool.write
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerAccessResponse'
          description: ''
  /api/v1/deepbox/partner-access/{client_id}/:
    get:
      operationId: deepbox_partner_access_retrieve
      description: Get Partner Access details.
      parameters:
      - in: path
        name: client_id
        schema:
          type: string
        required: true
      tags:
      - deepbox
      security:
      - JWTTokenAuthentication:
        - support-tool.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerAccessDetailResponse'
          description: ''
    patch:
      operationId: deepbox_partner_access_partial_update
      description: Update Partner Access.
      parameters:
      - in: path
        name: client_id
        schema:
          type: string
        required: true
      tags:
      - deepbox
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPartnerAccessUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPartnerAccessUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPartnerAccessUpdate'
      security:
      - JWTTokenAuthentication:
        - support-tool.write
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerAccessResponse'
          description: ''
    delete:
      operationId: deepbox_partner_access_destroy
      description: Delete Partner Access.
      parameters:
      - in: path
        name: client_id
        schema:
          type: string
        required: true
      tags:
      - deepbox
      security:
      - JWTTokenAuthentication:
        - support-tool.write
      responses:
        '204':
          description: No response body
  /api/v1/deepbox/partner-access/{client_id}/add-scopes/:
    post:
      operationId: deepbox_partner_access_add_scopes_create
      description: Add default client scopes to a Partner Access.
      parameters:
      - in: path
        name: client_id
        schema:
          type: string
        required: true
      tags:
      - deepbox
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerAccessScope'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PartnerAccessScope'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PartnerAccessScope'
      security:
      - JWTTokenAuthentication:
        - support-tool.write
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerAccessResponse'
          description: ''
  /api/v1/deepbox/partner-access/{client_id}/remove-scopes/:
    post:
      operationId: deepbox_partner_access_remove_scopes_create
      description: Remove client scopes from a Partner Access.
      parameters:
      - in: path
        name: client_id
        schema:
          type: string
        required: true
      tags:
      - deepbox
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerAccessScope'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PartnerAccessScope'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PartnerAccessScope'
      security:
      - JWTTokenAuthentication:
        - support-tool.write
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerAccessResponse'
          description: ''
  /api/v1/deepbox/partner-access/{client_id}/users/:
    get:
      operationId: deepbox_partner_access_users_list
      description: List users (and their associated companies) used by a Partner Access.
      parameters:
      - in: path
        name: client_id
        schema:
          type: string
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - deepbox
      security:
      - JWTTokenAuthentication:
        - support-tool.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPartnerAccessUsersList'
          description: ''
  /api/v1/deepid/notify/:
    post:
      operationId: deepid_notify_create
      description: |-
        Send an email to the given `email`, using the given `template_name`.
        See the detailed schema of `template_name` for possible values.

        The `parameters` field content depends on the `template_name` used.
      tags:
      - deepid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeepIDNotify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeepIDNotify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeepIDNotify'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeepIDNotify'
          description: ''
  /api/v1/deepid/signed-documents/{document_id}/validate-claim:
    post:
      operationId: deepid_signed_documents_validate_claim_create
      description: This API is limited to 10 calls by minute for the user account.
      parameters:
      - in: path
        name: document_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - deepid
      responses:
        '200':
          description: No response body
  /api/v1/deepid/statistics/:
    get:
      operationId: deepid_statistics_retrieve
      description: Mixin to add helper for JWTTokenHasScope permission support
      tags:
      - deepid
      security:
      - JWTTokenAuthentication:
        - support-tool.read
      responses:
        '200':
          description: No response body
  /api/v1/deepid/statistics/devices/:
    get:
      operationId: deepid_statistics_devices_retrieve
      description: Mixin to add helper for JWTTokenHasScope permission support
      tags:
      - deepid
      security:
      - JWTTokenAuthentication:
        - support-tool.read
      responses:
        '200':
          description: No response body
  /api/v1/deepid/teleport/company/{company_id}:
    post:
      operationId: deepid_teleport_company_create
      description: |-
        Teleport a given company from Yapeal to DeepID
        Returns 404 if the company is not yapeal verified
        Only callable through deepsupport
      parameters:
      - in: path
        name: company_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - deepid
      security:
      - JWTTokenAuthentication:
        - support-tool.write
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeleportResult'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeleportResult'
          description: ''
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeleportResult'
          description: ''
  /api/v1/deepid/teleport/user/{user_id}:
    post:
      operationId: deepid_teleport_user_create
      description: |-
        Teleport a given user from YAPEAL to DeepID
        Returns 404 if the user is not yapeal verified
        Only callable through deepsupport
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - deepid
      security:
      - JWTTokenAuthentication:
        - support-tool.write
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeleportResult'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeleportResult'
          description: ''
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeleportResult'
          description: ''
  /api/v1/deepid/validate-pdf:
    post:
      operationId: deepid_validate_pdf_create
      description: This API is limited to 10 calls by minute for the user account.
      tags:
      - deepid
      responses:
        '200':
          description: No response body
  /api/v1/deeppay/ebanking/partnership/:
    get:
      operationId: deeppay_ebanking_partnership_retrieve
      description: Get the company registration details
      tags:
      - deeppay
      security:
      - JWTTokenAuthentication:
        - deep.pay.yapeal
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partnership'
          description: ''
  /api/v1/deeppay/ebanking/partnership/deepbox/{deepbox_id}/box/{box_id}:
    get:
      operationId: deeppay_ebanking_partnership_deepbox_box_retrieve
      description: Get the company registration details
      parameters:
      - in: path
        name: box_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: deepbox_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - deeppay
      security:
      - JWTTokenAuthentication:
        - deep.pay.yapeal
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partnership'
          description: ''
  /api/v1/deeppay/ebanking/partnership/register:
    post:
      operationId: deeppay_ebanking_partnership_register_create
      description: |-
        Register an Abacus mandant with the company linked to the Abacus service user.
        Forwards the call to deeppay too.
      tags:
      - deeppay
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnershipRegister'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PartnershipRegister'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PartnershipRegister'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnershipRegister'
          description: ''
  /api/v1/doc/openapi-3/:
    get:
      operationId: doc_openapi_3_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - de-ch
          - en
          - fr-ch
          - it
      tags:
      - doc
      security:
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/v1/eula/:
    get:
      operationId: eula_retrieve
      description: |-
        This view returns directly the latest valid EULA in file form.

        Note: This endpoint is rate limited to 20 queries by minute by IP.
      tags:
      - eula
      security:
      - {}
      responses:
        '200':
          content:
            application/pdf:
              schema:
                type: string
                format: binary
          description: ''
  /api/v1/eula/{language}:
    get:
      operationId: api_v1_eula_language_retrieve
      description: |-
        This view returns directly the latest valid EULA in file form.

        Note: This endpoint is rate limited to 20 queries by minute by IP.
      parameters:
      - in: path
        name: language
        schema:
          type: string
        required: true
      tags:
      - eula
      security:
      - {}
      responses:
        '200':
          content:
            application/pdf:
              schema:
                type: string
                format: binary
          description: ''
  /api/v1/eula/{language}/info:
    get:
      operationId: api_v1_eula_language_info_retrieve
      description: |-
        Returns useful info about the latest valid EULA in file form.
        Can be used to check (using identifier) if the EULA has changed since last use of the API.

        Note: This endpoint is rate limited to 20 queries by minute by IP.
      parameters:
      - in: path
        name: language
        schema:
          type: string
        required: true
      tags:
      - eula
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EULA'
          description: ''
  /api/v1/eula/info:
    get:
      operationId: eula_info_retrieve
      description: |-
        Returns useful info about the latest valid EULA in file form.
        Can be used to check (using identifier) if the EULA has changed since last use of the API.

        Note: This endpoint is rate limited to 20 queries by minute by IP.
      tags:
      - eula
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EULA'
          description: ''
  /api/v1/files/{uuid}/:
    get:
      operationId: files_retrieve
      description: |-
        Get the current info of a file instance. This will actively check its status with the antivirus scanner if it is not yet known.

        Try not to check with a too small of a refresh rate as this API calls another server through its APIs and will be dependent of the network speed and current use of services.
        This API is using a pretty restrictive throttling threshold that can trigger if overused.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      tags:
      - files
      security:
      - JWTTokenAuthentication:
        - frontend
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
              examples:
                FileInProcessing:
                  value:
                    created_at: '2022-09-08T08:39:15.093Z'
                    uuid: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    safety_status: submitted
                  summary: file in processing
                FileThatHasBeenRecognizedAsSafe:
                  value:
                    created_at: '2022-09-08T08:39:15.093Z'
                    uuid: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    safety_status: safe
                  summary: file that has been recognized as safe
                FileThatHasBeenRecognizedAsAThreat:
                  value:
                    created_at: '2022-09-08T08:39:15.093Z'
                    uuid: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    safety_status: danger
                  summary: file that has been recognized as a threat
          description: Returns the searched file instance on the server.
        '403':
          description: You do not have the rights to access this API.
        '404':
          description: The file instance requested is not known or does not exist.
  /api/v1/files/upload/:
    post:
      operationId: files_upload_create
      description: |-
        Upload a new file to the general purpose File API. This will automatically trigger an antivirus scan of the file.
        You will have to check the status of the file using the `/files/<uuid>` API to know when the scan will be finished.
        When the file is marked as safe, you will be able to use it in other APIs using its `uuid` value.

        Takes as input a `multipart/form-data` with a single `file` attribute that is the file you want to upload.
      tags:
      - files
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/File'
      security:
      - JWTTokenAuthentication:
        - frontend
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
              examples:
                FileInProcessing:
                  value:
                    created_at: '2022-09-08T08:39:15.093Z'
                    uuid: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    safety_status: submitted
                  summary: file in processing
                FileThatHasBeenRecognizedAsSafe:
                  value:
                    created_at: '2022-09-08T08:39:15.093Z'
                    uuid: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    safety_status: safe
                  summary: file that has been recognized as safe
                FileThatHasBeenRecognizedAsAThreat:
                  value:
                    created_at: '2022-09-08T08:39:15.093Z'
                    uuid: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    safety_status: danger
                  summary: file that has been recognized as a threat
          description: Returns the created file instance.
        '400':
          description: The file that was uploaded is not valid and has been rejected.
        '403':
          description: You do not have the rights to access this API.
  /api/v1/invoices/:
    get:
      operationId: invoices_list
      description: "List the company's invoices and their statuses. \n\n The requesting\
        \ user can only see companies for which he has valid permissions."
      parameters:
      - in: query
        name: amount
        schema:
          type: number
          format: double
        description: Filter on a specific amount. Mainly used to filter the invoices
          with `0` as the amount.
      - in: path
        name: company_pk
        schema:
          type: string
        description: The UUID of the company for fetching linked invoices.
        required: true
      - in: query
        name: ordering
        schema:
          type: string
        description: 'Which field to use when ordering the results. Current possible
          choices are: `issued`, `amount`, `discount`, `vat_amount`, `abapayment_status`.
          To order in reverse, you must use `-` as prefix on ordering value (i.e.
          `-amount`).'
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: string
        description: Filter on specific `abapayment_status` choices.
      tags:
      - invoices
      security:
      - JWTTokenAuthentication:
        - invoice.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInvoiceListList'
          description: ''
  /api/v1/invoices/{id}:
    get:
      operationId: invoices_retrieve
      description: "Fetch available info about a specific invoice. \n\n The requesting\
        \ user can only see invoices from companies for which he has valid permissions."
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this invoice.
        required: true
      - in: query
        name: includePaymentUrl
        schema:
          type: boolean
        description: 'Set to `true` to retrieve the `user_payment_url` value, i.e.
          the payment url the end user should be redirected to to pay this invoice
          manually. Caution: do not use it if not needed, as this makes the API call
          at least 100ms slower.'
      tags:
      - invoices
      security:
      - JWTTokenAuthentication:
        - invoice.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceFullWithUserPaymentUrl'
          description: ''
    put:
      operationId: invoices_update
      description: |-
        View set to see invoices, their statuses (paid or not) and update some of their values (payment method, address and title).
        Only unpaid invoices can be updated.

        The requesting user can only see invoices from companies for which he has valid permissions.

        Caution: As this API can query a lot of invoices at once, using no `page_size` or a `page_size` larger than 10 is not recommended. This might result in long times to fetch the data or even in timeouts.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this invoice.
        required: true
      tags:
      - invoices
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InvoiceUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InvoiceUpdate'
      security:
      - JWTTokenAuthentication:
        - invoice.write
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceUpdate'
          description: ''
    patch:
      operationId: invoices_partial_update
      description: |-
        View set to see invoices, their statuses (paid or not) and update some of their values (payment method, address and title).
        Only unpaid invoices can be updated.

        The requesting user can only see invoices from companies for which he has valid permissions.

        Caution: As this API can query a lot of invoices at once, using no `page_size` or a `page_size` larger than 10 is not recommended. This might result in long times to fetch the data or even in timeouts.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this invoice.
        required: true
      tags:
      - invoices
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInvoiceUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInvoiceUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInvoiceUpdate'
      security:
      - JWTTokenAuthentication:
        - invoice.write
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceUpdate'
          description: ''
  /api/v1/invoices/{id}/pay:
    post:
      operationId: invoices_pay_create
      description: Triggers the invoice payment. The invoice should not be already
        paid, and have a payment_method
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this invoice.
        required: true
      tags:
      - invoices
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoicePay'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InvoicePay'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InvoicePay'
      security:
      - JWTTokenAuthentication:
        - invoice.write
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicePay'
          description: ''
  /api/v1/invoices/{id}/pdf:
    get:
      operationId: invoices_pdf_retrieve
      description: Generate on demand the invoice PDF, and returns a redirect response
        to where it can be found
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this invoice.
        required: true
      tags:
      - invoices
      security:
      - JWTTokenAuthentication:
        - invoice.read
      responses:
        '302':
          headers:
            Location:
              schema:
                type: string
                format: uri
              description: URL of the PDF
          description: The url of the invoice PDF
  /api/v1/invoices/webhook:
    post:
      operationId: invoices_webhook_create
      description: Gets the pk from the info sent and asks for a refresh
      tags:
      - invoices
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceWebhook'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InvoiceWebhook'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InvoiceWebhook'
        required: true
      responses:
        '200':
          description: Invoice updated
        '404':
          description: Invoice not found
  /api/v1/mobileid/check:
    post:
      operationId: mobileid_check_create
      description: Check if a phone number is validated by the Swisscom MobileID plateform
      tags:
      - mobileid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MobileIdCheck'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MobileIdCheck'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MobileIdCheck'
        required: true
      security:
      - JWTTokenAuthentication:
        - frontend
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MobileIdCheckOutput'
          description: ''
        '400':
          description: The phone number is wrong or incorrectly formed
        '500':
          description: The Swisscom API is not available or something else blocks
            this API to respond
  /api/v1/notifications/news/:
    get:
      operationId: notifications_news_list
      description: "\n            Return the news with the latest display_starts_at\
        \ date that should be currently displayed, and that is posterior to the last\
        \ time the user read news.\n        "
      parameters:
      - in: query
        name: all
        schema:
          type: string
        description: Set this parameter to 'true' to bypass the default filtering
          the news and retrieve all the news
      tags:
      - notifications
      security:
      - JWTTokenAuthentication:
        - news.read
      - JWTTokenAuthentication:
        - support-tool.read
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/News'
              examples:
                NewsWithEnglishText:
                  value:
                  - uuid: f55fb364-e864-4f2f-9848-7680297fd99d
                    category: news
                    translations:
                      en:
                        title: string
                        text: string
                        lead_text: string
                        primary_cta_button_text: string
                        secondary_cta_button_text: string
                        primary_cta_button: url
                        secondary_cta_button: url
                    image_en: data:image/png;base64,<base64_image>
                    image_de: data:image/png;base64,<base64_image>
                    image_fr: data:image/png;base64,<base64_image>
                    image_it: data:image/png;base64,<base64_image>
                    display_starts_at: '2019-05-06T11:31:36.120000+02:00'
                    display_ends_at: '2023-06-06T11:31:36.120000+02:00'
                  summary: News with english text
          description: ''
    post:
      operationId: notifications_news_create
      description: Mixin to add helper for JWTTokenHasScope permission support
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/News'
            examples:
              NewsWithEnglishText:
                value:
                  uuid: f55fb364-e864-4f2f-9848-7680297fd99d
                  category: news
                  translations:
                    en:
                      title: string
                      text: string
                      lead_text: string
                      primary_cta_button_text: string
                      secondary_cta_button_text: string
                      primary_cta_button: url
                      secondary_cta_button: url
                  image_en: data:image/png;base64,<base64_image>
                  image_de: data:image/png;base64,<base64_image>
                  image_fr: data:image/png;base64,<base64_image>
                  image_it: data:image/png;base64,<base64_image>
                  display_starts_at: '2019-05-06T11:31:36.120000+02:00'
                  display_ends_at: '2023-06-06T11:31:36.120000+02:00'
                summary: News with english text
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/News'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/News'
        required: true
      security:
      - JWTTokenAuthentication:
        - news.write
      - JWTTokenAuthentication:
        - support-tool.write
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/News'
              examples:
                NewsWithEnglishText:
                  value:
                    uuid: f55fb364-e864-4f2f-9848-7680297fd99d
                    category: news
                    translations:
                      en:
                        title: string
                        text: string
                        lead_text: string
                        primary_cta_button_text: string
                        secondary_cta_button_text: string
                        primary_cta_button: url
                        secondary_cta_button: url
                    image_en: data:image/png;base64,<base64_image>
                    image_de: data:image/png;base64,<base64_image>
                    image_fr: data:image/png;base64,<base64_image>
                    image_it: data:image/png;base64,<base64_image>
                    display_starts_at: '2019-05-06T11:31:36.120000+02:00'
                    display_ends_at: '2023-06-06T11:31:36.120000+02:00'
                  summary: News with english text
          description: ''
  /api/v1/notifications/news/{uuid}/:
    get:
      operationId: notifications_news_retrieve
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this notification.
        required: true
      tags:
      - notifications
      security:
      - JWTTokenAuthentication:
        - news.read
      - JWTTokenAuthentication:
        - support-tool.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/News'
              examples:
                NewsWithEnglishText:
                  value:
                    uuid: f55fb364-e864-4f2f-9848-7680297fd99d
                    category: news
                    translations:
                      en:
                        title: string
                        text: string
                        lead_text: string
                        primary_cta_button_text: string
                        secondary_cta_button_text: string
                        primary_cta_button: url
                        secondary_cta_button: url
                    image_en: data:image/png;base64,<base64_image>
                    image_de: data:image/png;base64,<base64_image>
                    image_fr: data:image/png;base64,<base64_image>
                    image_it: data:image/png;base64,<base64_image>
                    display_starts_at: '2019-05-06T11:31:36.120000+02:00'
                    display_ends_at: '2023-06-06T11:31:36.120000+02:00'
                  summary: News with english text
          description: ''
    put:
      operationId: notifications_news_update
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this notification.
        required: true
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/News'
            examples:
              NewsWithEnglishText:
                value:
                  uuid: f55fb364-e864-4f2f-9848-7680297fd99d
                  category: news
                  translations:
                    en:
                      title: string
                      text: string
                      lead_text: string
                      primary_cta_button_text: string
                      secondary_cta_button_text: string
                      primary_cta_button: url
                      secondary_cta_button: url
                  image_en: data:image/png;base64,<base64_image>
                  image_de: data:image/png;base64,<base64_image>
                  image_fr: data:image/png;base64,<base64_image>
                  image_it: data:image/png;base64,<base64_image>
                  display_starts_at: '2019-05-06T11:31:36.120000+02:00'
                  display_ends_at: '2023-06-06T11:31:36.120000+02:00'
                summary: News with english text
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/News'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/News'
        required: true
      security:
      - JWTTokenAuthentication:
        - news.write
      - JWTTokenAuthentication:
        - support-tool.write
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/News'
              examples:
                NewsWithEnglishText:
                  value:
                    uuid: f55fb364-e864-4f2f-9848-7680297fd99d
                    category: news
                    translations:
                      en:
                        title: string
                        text: string
                        lead_text: string
                        primary_cta_button_text: string
                        secondary_cta_button_text: string
                        primary_cta_button: url
                        secondary_cta_button: url
                    image_en: data:image/png;base64,<base64_image>
                    image_de: data:image/png;base64,<base64_image>
                    image_fr: data:image/png;base64,<base64_image>
                    image_it: data:image/png;base64,<base64_image>
                    display_starts_at: '2019-05-06T11:31:36.120000+02:00'
                    display_ends_at: '2023-06-06T11:31:36.120000+02:00'
                  summary: News with english text
          description: ''
    patch:
      operationId: notifications_news_partial_update
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this notification.
        required: true
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNews'
            examples:
              NewsWithEnglishText:
                value:
                  uuid: f55fb364-e864-4f2f-9848-7680297fd99d
                  category: news
                  translations:
                    en:
                      title: string
                      text: string
                      lead_text: string
                      primary_cta_button_text: string
                      secondary_cta_button_text: string
                      primary_cta_button: url
                      secondary_cta_button: url
                  image_en: data:image/png;base64,<base64_image>
                  image_de: data:image/png;base64,<base64_image>
                  image_fr: data:image/png;base64,<base64_image>
                  image_it: data:image/png;base64,<base64_image>
                  display_starts_at: '2019-05-06T11:31:36.120000+02:00'
                  display_ends_at: '2023-06-06T11:31:36.120000+02:00'
                summary: News with english text
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNews'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNews'
      security:
      - JWTTokenAuthentication:
        - news.write
      - JWTTokenAuthentication:
        - support-tool.write
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/News'
              examples:
                NewsWithEnglishText:
                  value:
                    uuid: f55fb364-e864-4f2f-9848-7680297fd99d
                    category: news
                    translations:
                      en:
                        title: string
                        text: string
                        lead_text: string
                        primary_cta_button_text: string
                        secondary_cta_button_text: string
                        primary_cta_button: url
                        secondary_cta_button: url
                    image_en: data:image/png;base64,<base64_image>
                    image_de: data:image/png;base64,<base64_image>
                    image_fr: data:image/png;base64,<base64_image>
                    image_it: data:image/png;base64,<base64_image>
                    display_starts_at: '2019-05-06T11:31:36.120000+02:00'
                    display_ends_at: '2023-06-06T11:31:36.120000+02:00'
                  summary: News with english text
          description: ''
    delete:
      operationId: notifications_news_destroy
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this notification.
        required: true
      tags:
      - notifications
      security:
      - JWTTokenAuthentication:
        - news.write
      - JWTTokenAuthentication:
        - support-tool.write
      responses:
        '204':
          description: No response body
  /api/v1/notifications/webhook/{key}/:
    post:
      operationId: notifications_webhook_create
      description: |-
        This endpoint allows the email service provider to submit events about email messages.

        Note: This API is protected with a special key and is only used by the email service to post reports.
      parameters:
      - in: path
        name: key
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailWebhook'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailWebhook'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailWebhook'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailWebhook'
          description: ''
  /api/v1/onboarding/:
    get:
      operationId: onboarding_retrieve
      description: |-
        Get the list of onboarding processes that were started for a specific given email.
        This list might not contain every onboarding process as old expired processes might have been removed on scheduled cleanup routines.

        Note: The links that are included in the response of this endpoint are not the real link that the user received as they might receive direct link to connect themselves if they have an account or a deepbox already.
        This note about links only concerns this endpoint.

        Only callable with service users
      parameters:
      - in: path
        name: email
        schema:
          type: string
        description: Email address to search for onboarding process
        required: true
      tags:
      - onboarding
      security:
      - JWTTokenAuthentication:
        - onboarding.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfirmationLink'
              examples:
                Example:
                  value:
                  - created_at: '2022-03-03T10:23:09.186046+01:00'
                    email: user@email.com
                    used_at: null
                    sent_count: 0
                    expires_at: '2022-03-03T19:23:09.186046Z'
                    is_expired: true
                    link: https://deepbox.swiss/auth/register/new-user/?key=secret_key
                  - created_at: '2022-03-03T10:27:01.704474+01:00'
                    email: user@email.com
                    used_at: null
                    sent_count: 0
                    expires_at: '2022-03-03T19:27:01.704474Z'
                    is_expired: true
                    link: https://deepbox.swiss/auth/register/new-user/?key=secret_key
                  summary: example
          description: ''
    post:
      operationId: onboarding_create
      description: |-
        Create a new onboarding process. This API is mainly to onboard new users who have another account with another verified service.
        This permits to skip the email validation step and generates a link to go directly to the DeepBox account creation.

        The link can either be:
        - For users without any prior account on the platform: link to the registration part of the onboarding process
        - For users with an account but no DeepBox: link to connect themselves and then redirect to DeepBox creation
        - For users with an account and a DeepBox: direct link to their DeepBox (which will also require them to login)

        REMOVED: The raw key is given when you are on the first case (no user, no deepbox) and not on the other cases.

        Only callable with service users
      parameters:
      - in: query
        name: notify
        schema:
          type: string
        description: Send an e-mail to the user to continue the onboarding
      tags:
      - onboarding
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmationLink'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfirmationLink'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfirmationLink'
        required: true
      security:
      - JWTTokenAuthentication:
        - onboarding.setup
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnboardPOSTResponse'
              examples:
                NewOnboardingWithUnusedEmail:
                  value:
                    url: https://deepbox.swiss/auth/register/new-user/?key=secret_key
                    key: secret_key
                    has_deepbox: false
                    user_exists: false
                  summary: new onboarding with unused email
                OnboardingWithExistingUserWithDeepbox:
                  value:
                    url: https://deepbox.swiss/4df6ec0f-b28d-4e8c-81e6-2d4cb1c3aaea
                    has_deepbox: true
                    user_exists: true
                  summary: onboarding with existing user with deepbox
          description: ''
  /api/v1/subscriptions/company/{company_id}/authorize:
    get:
      operationId: subscriptions_company_authorize_retrieve
      description: Get/Authorize the current Organization deepbox resource usage and
        quota
      parameters:
      - in: path
        name: company_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - subscriptions
      security:
      - JWTTokenAuthentication:
        - subscription.read
      responses:
        '200':
          description: Output schema can vary
        '404':
          description: Subscription not found
    put:
      operationId: subscriptions_company_authorize_update
      description: Get/Authorize the current Organization deepbox resource usage and
        quota
      parameters:
      - in: path
        name: company_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionAuthJsonCat'
            examples:
              BasicExample:
                value:
                  transactional: true
                  svc: deepv-test
                  feat:
                    DEEPV_PUBLISH:
                      '1650375403': 4.0
                      '1650358238': 1.0
                  force: false
                summary: Basic Example
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubscriptionAuthJsonCat'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubscriptionAuthJsonCat'
        required: true
      security:
      - JWTTokenAuthentication:
        - subscription.write
      responses:
        '200':
          description: Output schema can vary
        '404':
          description: Subscription not found
  /api/v1/subscriptions/company/{company_id}/costs:
    get:
      operationId: subscriptions_company_costs_retrieve
      description: Get the current DeepBox subscription costs
      parameters:
      - in: path
        name: company_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - subscriptions
      security:
      - JWTTokenAuthentication:
        - subscription.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionDeepBoxCosts'
          description: ''
        '403':
          description: Unauthorized access
        '404':
          description: Subscription or company not found
  /api/v1/subscriptions/company/{company_id}/custom_tariffs_plan:
    get:
      operationId: subscriptions_company_custom_tariffs_plan_list
      description: |-
        Custom price plan API.

        Manage a custom priced plan for a given subscription.
      parameters:
      - in: path
        name: company_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - subscriptions
      security:
      - JWTTokenAuthentication:
        - support-tool.read
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomTariffsPlan'
          description: ''
    post:
      operationId: subscriptions_company_custom_tariffs_plan_create
      description: |-
        Custom price plan API.

        Manage a custom priced plan for a given subscription.
      parameters:
      - in: path
        name: company_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomTariffsPlan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomTariffsPlan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomTariffsPlan'
        required: true
      security:
      - JWTTokenAuthentication:
        - support-tool.write
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomTariffsPlan'
          description: ''
  /api/v1/subscriptions/company/{company_id}/custom_tariffs_plan/{id}:
    get:
      operationId: subscriptions_company_custom_tariffs_plan_retrieve
      description: |-
        Custom price plan API.

        Manage a custom priced plan for a given subscription.
      parameters:
      - in: path
        name: company_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this subscription option.
        required: true
      tags:
      - subscriptions
      security:
      - JWTTokenAuthentication:
        - support-tool.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomTariffsPlan'
          description: ''
    delete:
      operationId: subscriptions_company_custom_tariffs_plan_destroy
      description: TODO
      parameters:
      - in: path
        name: company_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this subscription option.
        required: true
      tags:
      - subscriptions
      security:
      - JWTTokenAuthentication:
        - support-tool.write
      responses:
        '204':
          description: No response body
  /api/v1/subscriptions/company/{company_id}/extra_large_plan:
    get:
      operationId: subscriptions_company_extra_large_plan_list
      description: |-
        List all Extra Large plans for a given company (past, current and scheduled).
                The end date is null for plans that don't have an expiration date (will be renewed automatically with the subscription).
      parameters:
      - in: path
        name: company_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - subscriptions
      security:
      - JWTTokenAuthentication:
        - support-tool.read
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExtraLargePlan'
          description: ''
    post:
      operationId: subscriptions_company_extra_large_plan_create
      description: |-
        Create an Extra Large plan with a custom price and add it as an option to company's subscription.
                This also adds all lower options (small, compact, large) if they don't exist yet in the subscription.
                The option is scheduled to be activated on the first day of the upcoming period.
      parameters:
      - in: path
        name: company_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtraLargePlan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExtraLargePlan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExtraLargePlan'
        required: true
      security:
      - JWTTokenAuthentication:
        - support-tool.write
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtraLargePlan'
          description: ''
  /api/v1/subscriptions/company/{company_id}/extra_large_plan/{id}:
    get:
      operationId: subscriptions_company_extra_large_plan_retrieve
      description: Get the details for an Extra Large plan for a given company.
      parameters:
      - in: path
        name: company_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this subscription option.
        required: true
      tags:
      - subscriptions
      security:
      - JWTTokenAuthentication:
        - support-tool.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtraLargePlan'
          description: ''
    delete:
      operationId: subscriptions_company_extra_large_plan_destroy
      description: |-
        Deactivate the custom Extra Large plan for a given company.
        If the plan is scheduled to start in the future, the state of the subscription will simply ve reverted.
        If the plan is currently active, it will be deactivated at the end of the current period and will be downgraded to the plan
        selected by the query parameter `next_plan` (or the Large plan by default).
      parameters:
      - in: path
        name: company_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this subscription option.
        required: true
      - in: query
        name: next_plan
        schema:
          type: string
          enum:
          - bSMB
          - bbusiness
          - bcompact
          - bfree
          - bteams
      tags:
      - subscriptions
      security:
      - JWTTokenAuthentication:
        - support-tool.write
      responses:
        '204':
          description: Success.
  /api/v1/subscriptions/company/{company_id}/extra_large_plan/{id}/link_company:
    post:
      operationId: subscriptions_company_extra_large_plan_link_company_create
      description: Link a child company's subscription to the parent company's XL
        plan.
      parameters:
      - in: path
        name: company_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this subscription option.
        required: true
      tags:
      - subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkExtraLargePlan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LinkExtraLargePlan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LinkExtraLargePlan'
        required: true
      security:
      - JWTTokenAuthentication:
        - support-tool.write
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkExtraLargePlan'
          description: ''
  /api/v1/subscriptions/company/{company_id}/extra_large_plan/{id}/unlink_company:
    post:
      operationId: subscriptions_company_extra_large_plan_unlink_company_create
      description: Unlink a child company's subscription from it's parent's XL plan.
      parameters:
      - in: path
        name: company_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this subscription option.
        required: true
      tags:
      - subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkExtraLargePlan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LinkExtraLargePlan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LinkExtraLargePlan'
        required: true
      security:
      - JWTTokenAuthentication:
        - support-tool.write
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkExtraLargePlan'
          description: ''
  /api/v1/subscriptions/dunning_processes:
    get:
      operationId: subscriptions_dunning_processes_list
      description: |-
        Views for `DunningProcesses`.

        An instance of `DunningProcess` represents an ongoing dunning for a `Subscription` with respect to an `Invoice`.
        'Dunning' is the process of handling a non-paying customer.
        An intermediary model is necessary as an `Invoice` can contain multiple `Subscription`s, and vice-versa.
      parameters:
      - in: query
        name: active
        schema:
          type: boolean
      - in: query
        name: invoice
        schema:
          type: integer
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: subscription
        schema:
          type: integer
      tags:
      - subscriptions
      security:
      - JWTTokenAuthentication:
        - subscription.read
      - JWTTokenAuthentication:
        - invoice.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDunningProcessList'
          description: ''
  /api/v1/subscriptions/dunning_processes/{id}:
    get:
      operationId: subscriptions_dunning_processes_retrieve
      description: |-
        Views for `DunningProcesses`.

        An instance of `DunningProcess` represents an ongoing dunning for a `Subscription` with respect to an `Invoice`.
        'Dunning' is the process of handling a non-paying customer.
        An intermediary model is necessary as an `Invoice` can contain multiple `Subscription`s, and vice-versa.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this dunning process.
        required: true
      tags:
      - subscriptions
      security:
      - JWTTokenAuthentication:
        - subscription.read
      - JWTTokenAuthentication:
        - invoice.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DunningProcess'
          description: ''
  /api/v1/subscriptions/features:
    get:
      operationId: subscriptions_features_list
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - subscriptions
      security:
      - JWTTokenAuthentication:
        - subscription.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeatureList'
          description: ''
  /api/v1/subscriptions/features/{id}:
    get:
      operationId: subscriptions_features_retrieve
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feature.
        required: true
      tags:
      - subscriptions
      security:
      - JWTTokenAuthentication:
        - subscription.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
          description: ''
  /api/v1/subscriptions/plans:
    get:
      operationId: subscriptions_plans_list
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - subscriptions
      security:
      - JWTTokenAuthentication:
        - subscription.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPlanListList'
          description: ''
  /api/v1/subscriptions/plans/{id}:
    get:
      operationId: subscriptions_plans_retrieve
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this plan.
        required: true
      tags:
      - subscriptions
      security:
      - JWTTokenAuthentication:
        - subscription.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
          description: ''
  /api/v1/subscriptions/plans_by_code/{code}:
    get:
      operationId: subscriptions_plans_by_code_list
      description: Get the list of plans that corresponds to a specific plan code.
      parameters:
      - in: path
        name: code
        schema:
          type: string
          pattern: ^\w+$
        required: true
      - in: query
        name: nested
        schema:
          type: boolean
        description: Set this value to `false` to have a simpler serialization resulting
          in a lighter call.
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - subscriptions
      security:
      - JWTTokenAuthentication:
        - subscription.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPlanList'
              examples:
                BasicResponse:
                  value:
                    count: 123
                    next: http://api.example.org/accounts/?page=4
                    previous: http://api.example.org/accounts/?page=2
                    results:
                    - translations:
                        en:
                          name: Plan
                          description: ''
                      base_plan: 1
                      options: []
                      services:
                      - id: 1
                        translations:
                          en:
                            name: Service1
                            description: ''
                            documentation: ''
                        url: null
                        aud: service-code
                        logo: null
                        home_display: true
                        internal: true
                        broker_url: null
                        broker_queue: null
                        allow_third_party_connection: false
                        allow_third_party_redirect_response: false
                        allow_third_party_copy_paste_response: false
                        create_service_users_as_admins: false
                        service_user: null
                        default_plan: null
                        service_user_allowed_companies: []
                      - id: 5
                        translations:
                          en:
                            name: Service2
                            description: ''
                            documentation: ''
                        url: null
                        aud: service-code-2
                        logo: null
                        home_display: true
                        internal: false
                        broker_url: null
                        broker_queue: null
                        allow_third_party_connection: false
                        allow_third_party_redirect_response: false
                        allow_third_party_copy_paste_response: false
                        create_service_users_as_admins: false
                        service_user: null
                        default_plan: null
                        service_user_allowed_companies: []
                      one_off_price: '0.0000'
                      recurring_price: '2.0000'
                      period: 2day
                      enable_subcounters: false
                      min_multiple: 0
                      max_multiple: 1
                      trial_days: 0
                      version:
                        version_code: deepbox_v1
                        visible_from: '2022-06-10T12:00:00+02:00'
                        visible_to: null
                      metadata: {}
                      code: basic_plan_code
                      natural_key:
                      - deepbox_v1
                      - basic_plan_code
                      private: false
                      tariffs:
                      - id: 1
                        parameters:
                          on_sum_value: true
                          event_duration: null
                          bucket: 00:01:00
                          period: 01:00:00
                          period_aggregation: null
                          reset_counter: false
                        feature_id: 1
                        feature_code: FEATURE_CODE
                        price: '1.0000'
                        per_unit: 1.0
                        value_from: 0.0
                        value_to: 10000.0
                        is_threshold: true
                        aggregation: null
                      tariff_extras: []
                      id: 2
                  summary: basic response
                ResponseWithNested=false:
                  value:
                    count: 123
                    next: http://api.example.org/accounts/?page=4
                    previous: http://api.example.org/accounts/?page=2
                    results:
                    - translations:
                        en:
                          name: Plan
                          description: ''
                      base_plan:
                        code: base_plan_code
                        id: 1
                      options:
                      - code: option_plan_code
                        id: 3
                      one_off_price: '0.0000'
                      recurring_price: '2.0000'
                      period: 2day
                      enable_subcounters: false
                      min_multiple: 0
                      max_multiple: 1
                      trial_days: 0
                      version: 1
                      metadata: {}
                      code: plan_code
                      natural_key:
                      - deepbox_v1
                      - plan_code
                      private: false
                      id: 2
                  summary: response with nested=false
          description: ''
  /api/v1/subscriptions/report:
    get:
      operationId: subscriptions_report_list
      description: "\n            Return a reporting of the current resource usage\
        \ per organization\n        "
      parameters:
      - in: query
        name: from
        schema:
          type: string
        description: Date to use for initial value of diff, format YYYY-mm-dd, if
          not provided the output is only about the 'to' date
      - in: query
        name: output
        schema:
          type: string
          enum:
          - csv
        description: set to 'csv' to get a table formatted with events from the given
          day (to) or today
      - in: query
        name: table
        schema:
          type: string
          enum:
          - events
          - invoices
          default: events
        description: 'Possible values: events, invoices. Defaults to events'
      - in: query
        name: to
        schema:
          type: string
        description: Date to use for current values, format YYYY-mm-dd, defaults to
          today
      tags:
      - subscriptions
      security:
      - JWTTokenAuthentication:
        - support-tool.read
      responses:
        '200':
          description: The report schema being quite complex and dynamic it is not
            detailed here
        '404':
          description: The report for the given date is not generated (yet).
  /api/v1/subscriptions/services:
    get:
      operationId: subscriptions_services_list
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - subscriptions
      security:
      - JWTTokenAuthentication:
        - subscription.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedServiceList'
          description: ''
  /api/v1/subscriptions/services/{id}:
    get:
      operationId: subscriptions_services_retrieve
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service.
        required: true
      tags:
      - subscriptions
      security:
      - JWTTokenAuthentication:
        - subscription.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: ''
  /api/v1/subscriptions/subscriptions:
    get:
      operationId: subscriptions_subscriptions_retrieve
      description: |-
        Views to handle the subscription for users or company.

        To create a new subscription, use the POST request and give either the `company` or the `user_id`. The subscription will then be linked to this entity.
        Also, use either the `plan` id or the `plan_code` to choose which plan to subscribe to.
        It is also possible to directly add options when creating a subscription using the `options` parameter.

        When updating a subscription, neither the `plan` nor the `plan_code` should be given.
      tags:
      - subscriptions
      security:
      - JWTTokenAuthentication:
        - subscription.read
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: subscriptions_subscriptions_create
      description: |-
        Views to handle the subscription for users or company.

        To create a new subscription, use the POST request and give either the `company` or the `user_id`. The subscription will then be linked to this entity.
        Also, use either the `plan` id or the `plan_code` to choose which plan to subscribe to.
        It is also possible to directly add options when creating a subscription using the `options` parameter.

        When updating a subscription, neither the `plan` nor the `plan_code` should be given.
      tags:
      - subscriptions
      security:
      - JWTTokenAuthentication:
        - subscription.write
      - cookieAuth: []
      responses:
        '201':
          description: No response body
  /api/v1/subscriptions/subscriptions/{id}:
    get:
      operationId: subscriptions_subscriptions_retrieve_2
      description: |-
        Views to handle the subscription for users or company.

        To create a new subscription, use the POST request and give either the `company` or the `user_id`. The subscription will then be linked to this entity.
        Also, use either the `plan` id or the `plan_code` to choose which plan to subscribe to.
        It is also possible to directly add options when creating a subscription using the `options` parameter.

        When updating a subscription, neither the `plan` nor the `plan_code` should be given.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this subscription.
        required: true
      tags:
      - subscriptions
      security:
      - JWTTokenAuthentication:
        - subscription.read
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: subscriptions_subscriptions_update
      description: |-
        Views to handle the subscription for users or company.

        To create a new subscription, use the POST request and give either the `company` or the `user_id`. The subscription will then be linked to this entity.
        Also, use either the `plan` id or the `plan_code` to choose which plan to subscribe to.
        It is also possible to directly add options when creating a subscription using the `options` parameter.

        When updating a subscription, neither the `plan` nor the `plan_code` should be given.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this subscription.
        required: true
      tags:
      - subscriptions
      security:
      - JWTTokenAuthentication:
        - subscription.write
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: subscriptions_subscriptions_partial_update
      description: |-
        Views to handle the subscription for users or company.

        To create a new subscription, use the POST request and give either the `company` or the `user_id`. The subscription will then be linked to this entity.
        Also, use either the `plan` id or the `plan_code` to choose which plan to subscribe to.
        It is also possible to directly add options when creating a subscription using the `options` parameter.

        When updating a subscription, neither the `plan` nor the `plan_code` should be given.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this subscription.
        required: true
      tags:
      - subscriptions
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: subscriptions_subscriptions_destroy
      description: |-
        Views to handle the subscription for users or company.

        To create a new subscription, use the POST request and give either the `company` or the `user_id`. The subscription will then be linked to this entity.
        Also, use either the `plan` id or the `plan_code` to choose which plan to subscribe to.
        It is also possible to directly add options when creating a subscription using the `options` parameter.

        When updating a subscription, neither the `plan` nor the `plan_code` should be given.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this subscription.
        required: true
      tags:
      - subscriptions
      security:
      - JWTTokenAuthentication:
        - subscription.write
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/subscriptions/subscriptions/{id}/authorize:
    get:
      operationId: subscriptions_subscriptions_authorize_retrieve
      description: |-
        Views to handle the subscription for users or company.

        To create a new subscription, use the POST request and give either the `company` or the `user_id`. The subscription will then be linked to this entity.
        Also, use either the `plan` id or the `plan_code` to choose which plan to subscribe to.
        It is also possible to directly add options when creating a subscription using the `options` parameter.

        When updating a subscription, neither the `plan` nor the `plan_code` should be given.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this subscription.
        required: true
      tags:
      - subscriptions
      security:
      - JWTTokenAuthentication:
        - subscription.read
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionAuthStatus'
          description: ''
    put:
      operationId: subscriptions_subscriptions_authorize_update
      description: |-
        Views to handle the subscription for users or company.

        To create a new subscription, use the POST request and give either the `company` or the `user_id`. The subscription will then be linked to this entity.
        Also, use either the `plan` id or the `plan_code` to choose which plan to subscribe to.
        It is also possible to directly add options when creating a subscription using the `options` parameter.

        When updating a subscription, neither the `plan` nor the `plan_code` should be given.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this subscription.
        required: true
      tags:
      - subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionAuthJsonCat'
            examples:
              BasicExample:
                value:
                  transactional: true
                  svc: deepv-test
                  feat:
                    DEEPV_PUBLISH:
                      '1650375403': 4.0
                      '1650358238': 1.0
                  force: false
                summary: Basic Example
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubscriptionAuthJsonCat'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubscriptionAuthJsonCat'
        required: true
      security:
      - JWTTokenAuthentication:
        - subscription.write
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionAuthResponse'
          description: ''
        '403':
          description: Unauthorized access
        '404':
          description: Subscription not found
  /api/v1/subscriptions/subscriptions/{id}/costs:
    get:
      operationId: subscriptions_subscriptions_costs_list
      description: Returns detailed costs for the given subscription. See swagger
        schema for details.
      parameters:
      - in: query
        name: company
        schema:
          type: string
          format: uuid
      - in: query
        name: custom_name
        schema:
          type: string
      - in: query
        name: end
        schema:
          type: string
          format: date-time
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this subscription.
        required: true
      - in: query
        name: plan
        schema:
          type: integer
      - in: query
        name: service
        schema:
          type: string
      - in: query
        name: start
        schema:
          type: string
          format: date-time
      - in: query
        name: status
        schema:
          type: string
      - in: query
        name: user_id
        schema:
          type: string
          format: uuid
      tags:
      - subscriptions
      security:
      - JWTTokenAuthentication:
        - subscription.read
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CostDetail'
          description: ''
        '403':
          description: Unauthorized access
        '404':
          description: Subscription not found
  /api/v1/subscriptions/subscriptions/{id}/resume:
    post:
      operationId: subscriptions_subscriptions_resume_create
      description: |-
        Resumes a suspended subscription

        Raise HTTP404 if the subscription does not exist or if the user has no rights on the subscription
        Raise HTTP403 if the subscription is in a state where the status cannot be resumed.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this subscription.
        required: true
      tags:
      - subscriptions
      security:
      - JWTTokenAuthentication:
        - subscription.write
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/subscriptions/subscriptions/{id}/suspend:
    post:
      operationId: subscriptions_subscriptions_suspend_create
      description: |-
        Launch the suspension process for a subscription

        Raise HTTP404 if the subscription does not exist or if the user has no rights on the subscription
        Raise HTTP403 if the subscription is in a state where the status is not suspendable.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this subscription.
        required: true
      tags:
      - subscriptions
      security:
      - JWTTokenAuthentication:
        - subscription.write
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/subscriptions/subscriptions/{subscription_pk}/custom_vouchers:
    get:
      operationId: subscriptions_subscriptions_custom_vouchers_list
      description: |-
        Views to handle the custom vouchers of a subscription.

        To create a new custom voucher, use the POST request and give the required values.

        While retrieving a custom voucher, the JSON object contains a `constraints` field which describe what and how the voucher is editable

        Similar to simple vouchers, the given `unit_amount` is recurring for each period as long as the voucher is not expired. That means that if this voucher covers 2 period ends,
        `unit_amount` will be given twice, once per period.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: subscription_pk
        schema:
          type: integer
        required: true
      tags:
      - subscriptions
      security:
      - JWTTokenAuthentication:
        - subscription.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCustomVoucherList'
          description: ''
    post:
      operationId: subscriptions_subscriptions_custom_vouchers_create
      description: |-
        Views to handle the custom vouchers of a subscription.

        To create a new custom voucher, use the POST request and give the required values.

        While retrieving a custom voucher, the JSON object contains a `constraints` field which describe what and how the voucher is editable

        Similar to simple vouchers, the given `unit_amount` is recurring for each period as long as the voucher is not expired. That means that if this voucher covers 2 period ends,
        `unit_amount` will be given twice, once per period.
      parameters:
      - in: path
        name: subscription_pk
        schema:
          type: integer
        required: true
      tags:
      - subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomVoucher'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomVoucher'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomVoucher'
        required: true
      security:
      - JWTTokenAuthentication:
        - subscription.write
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomVoucher'
          description: ''
  /api/v1/subscriptions/subscriptions/{subscription_pk}/custom_vouchers/{id}:
    get:
      operationId: subscriptions_subscriptions_custom_vouchers_retrieve
      description: |-
        Views to handle the custom vouchers of a subscription.

        To create a new custom voucher, use the POST request and give the required values.

        While retrieving a custom voucher, the JSON object contains a `constraints` field which describe what and how the voucher is editable

        Similar to simple vouchers, the given `unit_amount` is recurring for each period as long as the voucher is not expired. That means that if this voucher covers 2 period ends,
        `unit_amount` will be given twice, once per period.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this subscription option.
        required: true
      - in: path
        name: subscription_pk
        schema:
          type: integer
        required: true
      tags:
      - subscriptions
      security:
      - JWTTokenAuthentication:
        - subscription.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomVoucher'
          description: ''
    put:
      operationId: subscriptions_subscriptions_custom_vouchers_update
      description: |-
        Views to handle the custom vouchers of a subscription.

        To create a new custom voucher, use the POST request and give the required values.

        While retrieving a custom voucher, the JSON object contains a `constraints` field which describe what and how the voucher is editable

        Similar to simple vouchers, the given `unit_amount` is recurring for each period as long as the voucher is not expired. That means that if this voucher covers 2 period ends,
        `unit_amount` will be given twice, once per period.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this subscription option.
        required: true
      - in: path
        name: subscription_pk
        schema:
          type: integer
        required: true
      tags:
      - subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomVoucher'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomVoucher'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomVoucher'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomVoucher'
          description: ''
    patch:
      operationId: subscriptions_subscriptions_custom_vouchers_partial_update
      description: |-
        Views to handle the custom vouchers of a subscription.

        To create a new custom voucher, use the POST request and give the required values.

        While retrieving a custom voucher, the JSON object contains a `constraints` field which describe what and how the voucher is editable

        Similar to simple vouchers, the given `unit_amount` is recurring for each period as long as the voucher is not expired. That means that if this voucher covers 2 period ends,
        `unit_amount` will be given twice, once per period.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this subscription option.
        required: true
      - in: path
        name: subscription_pk
        schema:
          type: integer
        required: true
      tags:
      - subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomVoucher'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomVoucher'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomVoucher'
      security:
      - JWTTokenAuthentication:
        - subscription.write
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomVoucher'
          description: ''
    delete:
      operationId: subscriptions_subscriptions_custom_vouchers_destroy
      description: |-
        Views to handle the custom vouchers of a subscription.

        To create a new custom voucher, use the POST request and give the required values.

        While retrieving a custom voucher, the JSON object contains a `constraints` field which describe what and how the voucher is editable

        Similar to simple vouchers, the given `unit_amount` is recurring for each period as long as the voucher is not expired. That means that if this voucher covers 2 period ends,
        `unit_amount` will be given twice, once per period.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this subscription option.
        required: true
      - in: path
        name: subscription_pk
        schema:
          type: integer
        required: true
      tags:
      - subscriptions
      security:
      - JWTTokenAuthentication:
        - subscription.write
      responses:
        '204':
          description: No response body
  /api/v1/subscriptions/subscriptions/{subscription_pk}/options:
    get:
      operationId: subscriptions_subscriptions_options_list
      description: |-
        Views to handle the options of a subscription.

        To create a new option, use the POST request and give either the `plan` id or the `plan_code` to choose which option to subscribe to.

        When updating an option, neither the `plan` nor the `plan_code` should be given, nor the amount. Only the `is_renewable` flag is changeable.
      parameters:
      - in: query
        name: active
        schema:
          type: boolean
        description: Set to true to filter out expired subscriptions.
      - in: query
        name: end
        schema:
          type: string
          format: date-time
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: start
        schema:
          type: string
          format: date-time
      - in: path
        name: subscription_pk
        schema:
          type: integer
        required: true
      tags:
      - subscriptions
      security:
      - JWTTokenAuthentication:
        - subscription.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSubscriptionOptionList'
          description: ''
    post:
      operationId: subscriptions_subscriptions_options_create
      description: |-
        Views to handle the options of a subscription.

        To create a new option, use the POST request and give either the `plan` id or the `plan_code` to choose which option to subscribe to.

        When updating an option, neither the `plan` nor the `plan_code` should be given, nor the amount. Only the `is_renewable` flag is changeable.
      parameters:
      - in: path
        name: subscription_pk
        schema:
          type: integer
        required: true
      tags:
      - subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionOption'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubscriptionOption'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubscriptionOption'
        required: true
      security:
      - JWTTokenAuthentication:
        - subscription.write
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionOption'
          description: ''
  /api/v1/subscriptions/subscriptions/{subscription_pk}/options/{id}:
    get:
      operationId: subscriptions_subscriptions_options_retrieve
      description: |-
        Views to handle the options of a subscription.

        To create a new option, use the POST request and give either the `plan` id or the `plan_code` to choose which option to subscribe to.

        When updating an option, neither the `plan` nor the `plan_code` should be given, nor the amount. Only the `is_renewable` flag is changeable.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this subscription option.
        required: true
      - in: path
        name: subscription_pk
        schema:
          type: integer
        required: true
      tags:
      - subscriptions
      security:
      - JWTTokenAuthentication:
        - subscription.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionOption'
          description: ''
    put:
      operationId: subscriptions_subscriptions_options_update
      description: |-
        Views to handle the options of a subscription.

        To create a new option, use the POST request and give either the `plan` id or the `plan_code` to choose which option to subscribe to.

        When updating an option, neither the `plan` nor the `plan_code` should be given, nor the amount. Only the `is_renewable` flag is changeable.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this subscription option.
        required: true
      - in: path
        name: subscription_pk
        schema:
          type: integer
        required: true
      tags:
      - subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionOption'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubscriptionOption'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubscriptionOption'
        required: true
      security:
      - JWTTokenAuthentication:
        - subscription.write
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionOption'
          description: ''
    patch:
      operationId: subscriptions_subscriptions_options_partial_update
      description: |-
        Views to handle the options of a subscription.

        To create a new option, use the POST request and give either the `plan` id or the `plan_code` to choose which option to subscribe to.

        When updating an option, neither the `plan` nor the `plan_code` should be given, nor the amount. Only the `is_renewable` flag is changeable.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this subscription option.
        required: true
      - in: path
        name: subscription_pk
        schema:
          type: integer
        required: true
      tags:
      - subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSubscriptionOption'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSubscriptionOption'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSubscriptionOption'
      security:
      - JWTTokenAuthentication:
        - subscription.write
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionOption'
          description: ''
    delete:
      operationId: subscriptions_subscriptions_options_destroy
      description: |2

        In the normal case, we want a DELETE to cancel the option at the end of the current period. In the case where an option was created with a start date in the future, there are 2 possibilities:

        - either use the default behaviour and cancel the option at the end of its period (which is actually the 1st full period after the future start date!)
        - or when the force_delete parameter is used, truely delete the option instead of cancelling.
      parameters:
      - in: query
        name: force_delete
        schema:
          type: boolean
          default: false
        description: If `true`, try to fully delete the option instead of just cancelling
          it. Only works with unstarted options.
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this subscription option.
        required: true
      - in: path
        name: subscription_pk
        schema:
          type: integer
        required: true
      tags:
      - subscriptions
      security:
      - JWTTokenAuthentication:
        - subscription.write
      responses:
        '204':
          description: No response body
  /api/v1/subscriptions/subscriptions/{subscription_pk}/packages:
    get:
      operationId: subscriptions_subscriptions_packages_list
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: subscription_pk
        schema:
          type: integer
        required: true
      tags:
      - subscriptions
      security:
      - JWTTokenAuthentication:
        - subscription.read
      - JWTTokenAuthentication:
        - support-tool.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSubscriptionPackageViewList'
          description: ''
    post:
      operationId: subscriptions_subscriptions_packages_create
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: subscription_pk
        schema:
          type: integer
        required: true
      tags:
      - subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionPackage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubscriptionPackage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubscriptionPackage'
        required: true
      security:
      - JWTTokenAuthentication:
        - support-tool.write
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionPackage'
          description: ''
  /api/v1/subscriptions/subscriptions/{subscription_pk}/packages/{package_pk}:
    delete:
      operationId: subscriptions_subscriptions_packages_destroy
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: package_pk
        schema:
          type: integer
        description: A unique integer value identifying this subscription package.
        required: true
      - in: path
        name: subscription_pk
        schema:
          type: integer
        required: true
      tags:
      - subscriptions
      security:
      - JWTTokenAuthentication:
        - support-tool.write
      responses:
        '204':
          description: No response body
  /api/v1/subscriptions/subscriptions/{subscription_pk}/signatures/available:
    get:
      operationId: subscriptions_subscriptions_signatures_available_list
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: subscription_pk
        schema:
          type: string
        required: true
      tags:
      - subscriptions
      security:
      - JWTTokenAuthentication:
        - subscription.read
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubscriptionAvailableSignatures'
          description: ''
  /api/v1/subscriptions/subscriptions/{subscription_pk}/vouchers:
    get:
      operationId: subscriptions_subscriptions_vouchers_list
      description: |-
        Views to handle the vouchers of a subscription.

        To create a new voucher, use the POST request and give either the `plan` id or the `plan_code` to choose which option to subscribe to.

        When deleting a voucher, neither the `plan` nor the `plan_code` should be given. Note that deleting a voucher sets it to be expired, so it will
        still be found in the voucher list.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: subscription_pk
        schema:
          type: integer
        required: true
      tags:
      - subscriptions
      security:
      - JWTTokenAuthentication:
        - subscription.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDiscountList'
          description: ''
    post:
      operationId: subscriptions_subscriptions_vouchers_create
      description: |-
        Views to handle the vouchers of a subscription.

        To create a new voucher, use the POST request and give either the `plan` id or the `plan_code` to choose which option to subscribe to.

        When deleting a voucher, neither the `plan` nor the `plan_code` should be given. Note that deleting a voucher sets it to be expired, so it will
        still be found in the voucher list.
      parameters:
      - in: path
        name: subscription_pk
        schema:
          type: integer
        required: true
      tags:
      - subscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Discount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Discount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Discount'
        required: true
      security:
      - JWTTokenAuthentication:
        - subscription.write
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
          description: ''
  /api/v1/subscriptions/subscriptions/{subscription_pk}/vouchers/{id}:
    get:
      operationId: subscriptions_subscriptions_vouchers_retrieve
      description: |-
        Views to handle the vouchers of a subscription.

        To create a new voucher, use the POST request and give either the `plan` id or the `plan_code` to choose which option to subscribe to.

        When deleting a voucher, neither the `plan` nor the `plan_code` should be given. Note that deleting a voucher sets it to be expired, so it will
        still be found in the voucher list.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this subscription option.
        required: true
      - in: path
        name: subscription_pk
        schema:
          type: integer
        required: true
      tags:
      - subscriptions
      security:
      - JWTTokenAuthentication:
        - subscription.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
          description: ''
    delete:
      operationId: subscriptions_subscriptions_vouchers_destroy
      description: |-
        Views to handle the vouchers of a subscription.

        To create a new voucher, use the POST request and give either the `plan` id or the `plan_code` to choose which option to subscribe to.

        When deleting a voucher, neither the `plan` nor the `plan_code` should be given. Note that deleting a voucher sets it to be expired, so it will
        still be found in the voucher list.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this subscription option.
        required: true
      - in: path
        name: subscription_pk
        schema:
          type: integer
        required: true
      tags:
      - subscriptions
      security:
      - JWTTokenAuthentication:
        - subscription.write
      responses:
        '204':
          description: No response body
  /api/v1/subscriptions/subscriptions/deepbox/box:
    get:
      operationId: subscriptions_subscriptions_deepbox_box_retrieve
      description: |-
        Get the current Box resource usage and quota
        Deprecated, but still in use by old Abacus ERP versions
      tags:
      - subscriptions
      security:
      - JWTTokenAuthentication:
        - subscription.read
      deprecated: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionDeepBoxStatus'
          description: ''
  /api/v1/users/:
    get:
      operationId: users_list
      description: |-
        Get the list of users who corresponds to the search parameters.
        You can either search with the user ID or with the email.

        Alternatively, if you have the right scope on your service user, you can query without params and get the full list of all users with pagination.

        The API needs the requesting user to be a service user.
      parameters:
      - in: query
        name: email
        schema:
          type: string
        description: Search using email (has priority over `userId`)
      - in: query
        name: page
        schema:
          type: string
        description: Page number for full list of users
      - in: query
        name: page_size
        schema:
          type: string
        description: Page size for full list of users
      - in: query
        name: userId
        schema:
          type: string
        description: Search using userId (uuid4)
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - user.read
      - JWTTokenAuthentication:
        - user.list
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserListFromAPI'
          description: ''
    post:
      operationId: users_create
      description: |-
        Create a new user.

        Please note the following:
        - This API creates a new user but does not onboard the user in any way.
        - The newly created user will need to confirm its email address on first login.
        - This API needs the requesting user to be a service user.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      security:
      - JWTTokenAuthentication:
        - user.create
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
  /api/v1/users/{id}:
    get:
      operationId: users_retrieve
      description: |-
        Retrieve the info of a specific user

        The API needs the requesting user to be a service user, except if querying about itself.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        required: true
      - in: query
        name: mobileId
        schema:
          type: string
        description: 'Set to true to check if the phone number linked to the user
          is MobileId (identity-check) validated. Caution: do not use it if not needed,
          as this makes the API call at least 100ms slower.'
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - user.read
      - JWTTokenAuthentication:
        - user.list
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetail'
              examples:
                Return:
                  value:
                    id: 8fa263c0-b46d-416c-a5bf-2ef82bcb3a69
                    firstName: John
                    lastName: Doe
                    email: john.doe@email.com
                    enabled: true
                    is_service_user: false
                    lang: fr-ch
                    title: Mr
                    display_name: John Doe
                    country: CH
                    phonenumber: '+41791234567'
                    username: john.doe@email.com
                    createdTimestamp: 1620228447302
                    attributes:
                      locale:
                      - fr-ch
                    totp: true
                    emailVerified: true
                    disableableCredentialTypes: []
                    requiredActions: []
                    federatedIdentities: []
                    notBefore: 0
                    access:
                      manageGroupMembership: true
                      view: true
                      mapRoles: true
                      impersonate: false
                      manage: true
                  summary: return
          description: ''
    put:
      operationId: users_update
      description: |-
        Edit a user and its personal info. Not a lot of fields are editable, check schema and examples.
        Some fields are not editable if the user is verified.

        The API needs the requesting user to be a service user, except if updating itself.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetail'
            examples:
              Return:
                value:
                  id: 8fa263c0-b46d-416c-a5bf-2ef82bcb3a69
                  firstName: John
                  lastName: Doe
                  email: john.doe@email.com
                  enabled: true
                  is_service_user: false
                  lang: fr-ch
                  title: Mr
                  display_name: John Doe
                  country: CH
                  phonenumber: '+41791234567'
                  username: john.doe@email.com
                  createdTimestamp: 1620228447302
                  attributes:
                    locale:
                    - fr-ch
                  totp: true
                  emailVerified: true
                  disableableCredentialTypes: []
                  requiredActions: []
                  federatedIdentities: []
                  notBefore: 0
                  access:
                    manageGroupMembership: true
                    view: true
                    mapRoles: true
                    impersonate: false
                    manage: true
                summary: return
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetail'
      security:
      - JWTTokenAuthentication:
        - user.create
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetail'
              examples:
                Return:
                  value:
                    id: 8fa263c0-b46d-416c-a5bf-2ef82bcb3a69
                    firstName: John
                    lastName: Doe
                    email: john.doe@email.com
                    enabled: true
                    is_service_user: false
                    lang: fr-ch
                    title: Mr
                    display_name: John Doe
                    country: CH
                    phonenumber: '+41791234567'
                    username: john.doe@email.com
                    createdTimestamp: 1620228447302
                    attributes:
                      locale:
                      - fr-ch
                    totp: true
                    emailVerified: true
                    disableableCredentialTypes: []
                    requiredActions: []
                    federatedIdentities: []
                    notBefore: 0
                    access:
                      manageGroupMembership: true
                      view: true
                      mapRoles: true
                      impersonate: false
                      manage: true
                  summary: return
          description: ''
    delete:
      operationId: users_destroy
      description: |-
        Destroy a specific user

        Caution: As you will destroy the user, there will be a lot of things who might be irretrievably lost

        The API needs the requesting user to be a service user.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - user.create
      responses:
        '204':
          description: No response body
  /api/v1/users/{id}/deactivate:
    post:
      operationId: users_deactivate_create
      description: |-
        General APIs for service users to handle users and their info.
        A lot of the API here uses directly Keycloak.
        TODO: Change to use cached values using Django User or SSOUserProfile.
        TODO: Serialize the info better with real Serializers and drop dicts and inline_serializers use for this purpose.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - JWTTokenAuthentication:
        - support-tool.write
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v1/users/{id}/notify:
    post:
      operationId: users_notify_create_2
      description: |-
        Send an e-mail to ask the user to verify his e-mail address

        The API needs the requesting user to be a service user.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserNotify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserNotify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserNotify'
      security:
      - JWTTokenAuthentication:
        - user.create
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotify'
          description: ''
  /api/v1/users/{id}/reset_password:
    patch:
      operationId: users_reset_password_partial_update
      description: |-
        General APIs for service users to handle users and their info.
        A lot of the API here uses directly Keycloak.
        TODO: Change to use cached values using Django User or SSOUserProfile.
        TODO: Serialize the info better with real Serializers and drop dicts and inline_serializers use for this purpose.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - support-tool.write
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPasswordReset'
          description: Return the temporary password that was set for the user.
        '404':
          description: User not found.
        '500':
          description: User password could not be reset.
  /api/v1/users/{id}/reset_two_factor_auth:
    patch:
      operationId: users_reset_two_factor_auth_partial_update
      description: |-
        General APIs for service users to handle users and their info.
        A lot of the API here uses directly Keycloak.
        TODO: Change to use cached values using Django User or SSOUserProfile.
        TODO: Serialize the info better with real Serializers and drop dicts and inline_serializers use for this purpose.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - support-tool.write
      responses:
        '200':
          description: User two factor authentication has been deleted.
        '404':
          description: User not found.
        '500':
          description: User two factor authentication could not be reset.
  /api/v1/users/{user_id}/groups/:
    get:
      operationId: users_groups_list
      description: Get all the groups the given user is member of
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - group.read
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserGroup'
          description: ''
  /api/v1/users/{user_pk}/addresses:
    get:
      operationId: users_addresses_list
      description: Returns the list of all addresses that belong to the fetched user.
      parameters:
      - in: query
        name: isMain
        schema:
          type: string
        description: Set to true to only return main address.
      - in: query
        name: mobileId
        schema:
          type: string
        description: 'Set to true to check if the phone numbers linked to the addresses
          are MobileId (identity-check) validated. Caution: do not use it if not needed
          as this makes the API call at least 100ms slower.'
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: user_pk
        schema:
          type: string
          pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - user.read
      - JWTTokenAuthentication:
        - user.list
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAddressSwissIDList'
          description: ''
    post:
      operationId: users_addresses_create
      description: Register a new address for the fetched user.
      parameters:
      - in: path
        name: user_pk
        schema:
          type: string
          pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Address'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Address'
        required: true
      security:
      - JWTTokenAuthentication:
        - user.create
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
  /api/v1/users/{user_pk}/addresses/{id}:
    get:
      operationId: users_addresses_retrieve
      description: Get a specific address belonging to the fetched user.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this address.
        required: true
      - in: query
        name: mobileId
        schema:
          type: string
        description: 'Set to true to check if the phone number linked to the address
          is MobileId (identity-check) validated. Caution: do not use it if not needed
          as this makes the API call at least 100ms slower.'
      - in: path
        name: user_pk
        schema:
          type: string
          pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - user.read
      - JWTTokenAuthentication:
        - user.list
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressSwissID'
          description: ''
    put:
      operationId: users_addresses_update
      description: Updates a specific address belonging to the fetched user.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this address.
        required: true
      - in: path
        name: user_pk
        schema:
          type: string
          pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Address'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Address'
        required: true
      security:
      - JWTTokenAuthentication:
        - user.create
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
    patch:
      operationId: users_addresses_partial_update
      description: Updates a specific address belonging to the fetched user.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this address.
        required: true
      - in: path
        name: user_pk
        schema:
          type: string
          pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAddress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAddress'
      security:
      - JWTTokenAuthentication:
        - user.create
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
    delete:
      operationId: users_addresses_destroy
      description: Deletes a specific address belonging to the fetched user.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this address.
        required: true
      - in: path
        name: user_pk
        schema:
          type: string
          pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - user.create
      responses:
        '204':
          description: No response body
  /api/v1/users/{user_pk}/tokens:
    get:
      operationId: users_tokens_list
      description: |-
        List the personal access tokens that belong to the user. This API will never send any secret info about the token, it is only a list.

        - Service users can access tokens from all relevants users
        - Normal users can only access tokens linked to themselves.
      parameters:
      - in: path
        name: user_pk
        schema:
          type: string
          pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - user.token.read
      - JWTTokenAuthentication:
        - user.token.list
      - JWTTokenAuthentication:
        - frontend
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PersonalToken'
          description: ''
    post:
      operationId: users_tokens_create
      description: |-
        Create a new personal access token for the selected user. The return of this API will display the token secret. This will be the only time that this secret is shown.

        - All users can only access tokens linked to themselves.
        - Service users are not able to register new tokens for other users as this permits to impersonate the user.
      parameters:
      - in: path
        name: user_pk
        schema:
          type: string
          pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonalToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PersonalToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PersonalToken'
        required: true
      security:
      - JWTTokenAuthentication:
        - user.token.create
      - JWTTokenAuthentication:
        - frontend
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalTokenView'
          description: ''
  /api/v1/users/{user_pk}/tokens/{id}:
    delete:
      operationId: users_tokens_destroy
      description: |-
        Remove a personal access token.

        - Service users can remove tokens from all relevants users
        - Normal users can only remove tokens linked to themselves.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this personal token.
        required: true
      - in: path
        name: user_pk
        schema:
          type: string
          pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - user.token.delete
      - JWTTokenAuthentication:
        - frontend
      responses:
        '204':
          description: No response body
  /api/v1/users/{user_pk}/tokens/rights:
    get:
      operationId: users_tokens_rights_retrieve
      description: Checks if the current user is able to use the access token feature.
      parameters:
      - in: path
        name: user_pk
        schema:
          type: string
          pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - user.token.read
      - JWTTokenAuthentication:
        - user.token.list
      - JWTTokenAuthentication:
        - frontend
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalTokenRights'
          description: ''
  /api/v1/users/{user_pk}/validation:
    get:
      operationId: users_validation_list
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: user_pk
        schema:
          type: string
          pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - user.verification.read
      - JWTTokenAuthentication:
        - user.verification.list
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserValidationList'
          description: ''
  /api/v1/users/{user_pk}/validation/reset:
    delete:
      operationId: users_validation_reset_destroy
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: user_pk
        schema:
          type: string
          pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - user.verification.delete
      responses:
        '204':
          description: No response body
  /api/v1/users/{user_pk}/validation/validate:
    post:
      operationId: users_validation_validate_create
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: user_pk
        schema:
          type: string
          pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserValidation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserValidation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserValidation'
        required: true
      security:
      - JWTTokenAuthentication:
        - user.verification.write
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserValidation'
          description: ''
  /api/v1/users/{user_pk}/validation/wipe:
    delete:
      operationId: users_validation_wipe_destroy
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: user_pk
        schema:
          type: string
          pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - user.verification.delete
      responses:
        '204':
          description: No response body
  /api/v1/users/address:
    get:
      operationId: users_address_list
      description: Returns the list of all user addresses that belong to the requesting
        user.
      parameters:
      - in: query
        name: isMain
        schema:
          type: string
        description: Set to true to only return main address.
      - in: query
        name: mobileId
        schema:
          type: string
        description: 'Set to true to check if the phone numbers linked to the addresses
          are MobileId (identity-check) validated. Caution: do not use it if not needed
          as this makes the API call at least 100ms slower.'
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - address.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAddressSwissIDList'
          description: ''
    post:
      operationId: users_address_create
      description: Register a new address for the requesting user.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Address'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Address'
        required: true
      security:
      - JWTTokenAuthentication:
        - address.write
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
  /api/v1/users/address/{id}:
    get:
      operationId: users_address_retrieve
      description: Get a specific address belonging to the requesting user.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this address.
        required: true
      - in: query
        name: mobileId
        schema:
          type: string
        description: 'Set to true to check if the phone number linked to the address
          is MobileId (identity-check) validated. Caution: do not use it if not needed
          as this makes the API call at least 100ms slower.'
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - address.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressSwissID'
          description: ''
    put:
      operationId: users_address_update
      description: Updates a specific address belonging to the requesting user.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this address.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Address'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Address'
        required: true
      security:
      - JWTTokenAuthentication:
        - address.write
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
    patch:
      operationId: users_address_partial_update
      description: Updates a specific address belonging to the requesting user.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this address.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAddress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAddress'
      security:
      - JWTTokenAuthentication:
        - address.write
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
    delete:
      operationId: users_address_destroy
      description: Deletes a specific address belonging to the requesting user.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this address.
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - address.write
      responses:
        '204':
          description: No response body
  /api/v1/users/check_email/:
    post:
      operationId: users_check_email_create
      description: Check if the given e-mail address is known using the associated
        secret to prevent abuse of this API.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailCheck'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailCheck'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailCheck'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailCheck'
          description: Check result to know if the email is valid and known in our
            system.
        '400':
          description: The request is not valid. Check your data.
        '429':
          description: Request was throttled.
  /api/v1/users/company:
    get:
      operationId: users_company_list
      description: |-
        Provide company creation, edition and listing. To retrieve YAPEAL IBAN information, it needs the scope 'account.read'.
        This viewset also allows nested Address creation. See the request schema description for more details.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - company.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCompanyYapealList'
          description: ''
    post:
      operationId: users_company_create
      description: |-
        Provide company creation, edition and listing. To retrieve YAPEAL IBAN information, it needs the scope 'account.read'.
        This viewset also allows nested Address creation. See the request schema description for more details.
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - company.write
      responses:
        '201':
          description: No response body
  /api/v1/users/company/{company_pk}/address:
    get:
      operationId: users_company_address_list
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - address.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAddressList'
          description: ''
    post:
      operationId: users_company_address_create
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Address'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Address'
        required: true
      security:
      - JWTTokenAuthentication:
        - address.write
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
  /api/v1/users/company/{company_pk}/address/{id}:
    get:
      operationId: users_company_address_retrieve
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this address.
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - address.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
    put:
      operationId: users_company_address_update
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this address.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Address'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Address'
        required: true
      security:
      - JWTTokenAuthentication:
        - address.write
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
    patch:
      operationId: users_company_address_partial_update
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this address.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAddress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAddress'
      security:
      - JWTTokenAuthentication:
        - address.write
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
    delete:
      operationId: users_company_address_destroy
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this address.
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - address.write
      responses:
        '204':
          description: No response body
  /api/v1/users/company/{company_pk}/children:
    get:
      operationId: users_company_children_list
      description: List all children companies for a given company.
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - support-tool.read
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Company'
          description: ''
    post:
      operationId: users_company_children_create
      description: |-
        Add a new child to the company.

        If the child already has a different parent, raises an error.
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyChildrenPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompanyChildrenPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CompanyChildrenPost'
        required: true
      security:
      - JWTTokenAuthentication:
        - support-tool.write
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
  /api/v1/users/company/{company_pk}/children/{child_id}:
    get:
      operationId: users_company_children_retrieve
      description: Get a specific child company for a given company.
      parameters:
      - in: path
        name: child_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this company.
        required: true
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - support-tool.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
    delete:
      operationId: users_company_children_destroy
      description: |-
        Remove a child from the children of a company.

        No checks are performed when removing the child.
      parameters:
      - in: path
        name: child_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this company.
        required: true
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - support-tool.write
      responses:
        '204':
          description: No response body
  /api/v1/users/company/{company_pk}/customer-idp:
    get:
      operationId: users_company_customer_idp_list
      description: |-
        Customer SSO creation and edition.
        The edition needs the scope "sso.write".
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - support-tool.read
      - JWTTokenAuthentication:
        - sso.read
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerIDP'
          description: ''
    post:
      operationId: users_company_customer_idp_create
      description: |-
        Customer SSO creation and edition.
        The edition needs the scope "sso.write".
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerIDP'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerIDP'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerIDP'
        required: true
      security:
      - JWTTokenAuthentication:
        - sso.write
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerIDP'
          description: ''
  /api/v1/users/company/{company_pk}/customer-idp/{domain_verification}:
    get:
      operationId: users_company_customer_idp_retrieve
      description: |-
        Customer SSO creation and edition.
        The edition needs the scope "sso.write".
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      - in: path
        name: domain_verification
        schema:
          type: integer
        description: A unique value identifying this customer idp.
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - support-tool.read
      - JWTTokenAuthentication:
        - sso.read
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerIDP'
          description: ''
    put:
      operationId: users_company_customer_idp_update
      description: |-
        Customer SSO creation and edition.
        The edition needs the scope "sso.write".
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      - in: path
        name: domain_verification
        schema:
          type: integer
        description: A unique value identifying this customer idp.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerIDP'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerIDP'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerIDP'
        required: true
      security:
      - JWTTokenAuthentication:
        - sso.write
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerIDP'
          description: ''
    patch:
      operationId: users_company_customer_idp_partial_update
      description: |-
        Customer SSO creation and edition.
        The edition needs the scope "sso.write".
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      - in: path
        name: domain_verification
        schema:
          type: integer
        description: A unique value identifying this customer idp.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomerIDP'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomerIDP'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomerIDP'
      security:
      - JWTTokenAuthentication:
        - sso.write
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerIDP'
          description: ''
    delete:
      operationId: users_company_customer_idp_destroy
      description: |-
        Customer SSO creation and edition.
        The edition needs the scope "sso.write".
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      - in: path
        name: domain_verification
        schema:
          type: integer
        description: A unique value identifying this customer idp.
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - sso.write
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/users/company/{company_pk}/domain-verification:
    get:
      operationId: users_company_domain_verification_list
      description: |-
        Domain verification creation and edition.
        The edition needs the scope "domain.write".
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - support-tool.read
      - JWTTokenAuthentication:
        - domain.read
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DomainVerification'
          description: ''
    post:
      operationId: users_company_domain_verification_create
      description: |-
        Domain verification creation and edition.
        The edition needs the scope "domain.write".
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainVerification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DomainVerification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DomainVerification'
        required: true
      security:
      - JWTTokenAuthentication:
        - domain.write
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainVerification'
          description: ''
  /api/v1/users/company/{company_pk}/domain-verification/{domain_verification_pk}/included-users:
    get:
      operationId: users_company_domain_verification_included_users_list
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      - in: path
        name: domain_verification_pk
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - support-tool.read
      - JWTTokenAuthentication:
        - user.read
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DomainVerificationUserRepresentation'
          description: ''
    post:
      operationId: users_company_domain_verification_included_users_create
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      - in: path
        name: domain_verification_pk
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainVerificationUserRepresentation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DomainVerificationUserRepresentation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DomainVerificationUserRepresentation'
        required: true
      security:
      - JWTTokenAuthentication:
        - user.write
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainVerificationUserRepresentation'
          description: ''
  /api/v1/users/company/{company_pk}/domain-verification/{domain_verification_pk}/included-users/{ssouserprofile__uid}:
    get:
      operationId: users_company_domain_verification_included_users_retrieve
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      - in: path
        name: domain_verification_pk
        schema:
          type: string
        required: true
      - in: path
        name: ssouserprofile__uid
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - support-tool.read
      - JWTTokenAuthentication:
        - user.read
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainVerificationUserRepresentation'
          description: ''
  /api/v1/users/company/{company_pk}/domain-verification/{domain_verification_pk}/sso-group-mappings:
    get:
      operationId: users_company_domain_verification_sso_group_mappings_list
      description: API for managing SSO Group Mappings.
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
          format: uuid
          description: The company to which the mapping grants access.
        required: true
      - in: path
        name: domain_verification_pk
        schema:
          type: integer
          description: Domain verification for which this group mapping applies.
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - support-tool.read
      - JWTTokenAuthentication:
        - sso.read
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DomainVerificationSSOGroupMapping'
          description: ''
    post:
      operationId: users_company_domain_verification_sso_group_mappings_create
      description: API for managing SSO Group Mappings.
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
          format: uuid
          description: The company to which the mapping grants access.
        required: true
      - in: path
        name: domain_verification_pk
        schema:
          type: integer
          description: Domain verification for which this group mapping applies.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainVerificationSSOGroupMappingCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DomainVerificationSSOGroupMappingCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DomainVerificationSSOGroupMappingCreate'
        required: true
      security:
      - JWTTokenAuthentication:
        - sso.write
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainVerificationSSOGroupMappingCreate'
          description: ''
  /api/v1/users/company/{company_pk}/domain-verification/{domain_verification_pk}/sso-group-mappings/{id}:
    get:
      operationId: users_company_domain_verification_sso_group_mappings_retrieve
      description: API for managing SSO Group Mappings.
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
          format: uuid
          description: The company to which the mapping grants access.
        required: true
      - in: path
        name: domain_verification_pk
        schema:
          type: integer
          description: Domain verification for which this group mapping applies.
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this sso group mapping.
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - support-tool.read
      - JWTTokenAuthentication:
        - sso.read
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainVerificationSSOGroupMapping'
          description: ''
    put:
      operationId: users_company_domain_verification_sso_group_mappings_update
      description: API for managing SSO Group Mappings.
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
          format: uuid
          description: The company to which the mapping grants access.
        required: true
      - in: path
        name: domain_verification_pk
        schema:
          type: integer
          description: Domain verification for which this group mapping applies.
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this sso group mapping.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainVerificationSSOGroupMappingCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DomainVerificationSSOGroupMappingCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DomainVerificationSSOGroupMappingCreate'
        required: true
      security:
      - JWTTokenAuthentication:
        - sso.write
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainVerificationSSOGroupMappingCreate'
          description: ''
    patch:
      operationId: users_company_domain_verification_sso_group_mappings_partial_update
      description: API for managing SSO Group Mappings.
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
          format: uuid
          description: The company to which the mapping grants access.
        required: true
      - in: path
        name: domain_verification_pk
        schema:
          type: integer
          description: Domain verification for which this group mapping applies.
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this sso group mapping.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDomainVerificationSSOGroupMappingCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDomainVerificationSSOGroupMappingCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDomainVerificationSSOGroupMappingCreate'
      security:
      - JWTTokenAuthentication:
        - sso.write
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainVerificationSSOGroupMappingCreate'
          description: ''
    delete:
      operationId: users_company_domain_verification_sso_group_mappings_destroy
      description: API for managing SSO Group Mappings.
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
          format: uuid
          description: The company to which the mapping grants access.
        required: true
      - in: path
        name: domain_verification_pk
        schema:
          type: integer
          description: Domain verification for which this group mapping applies.
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this sso group mapping.
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - sso.write
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/users/company/{company_pk}/domain-verification/{domain_verification_pk}/users:
    get:
      operationId: users_company_domain_verification_users_list
      description: Handles users which match the given `user`
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      - in: path
        name: domain_verification_pk
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - support-tool.read
      - JWTTokenAuthentication:
        - user.read
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DomainVerificationUserRepresentation'
          description: ''
  /api/v1/users/company/{company_pk}/domain-verification/{domain_verification_pk}/users/{ssouserprofile__uid}:
    get:
      operationId: users_company_domain_verification_users_retrieve
      description: Handles users which match the given `user`
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      - in: path
        name: domain_verification_pk
        schema:
          type: string
        required: true
      - in: path
        name: ssouserprofile__uid
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - support-tool.read
      - JWTTokenAuthentication:
        - user.read
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainVerificationUserRepresentation'
          description: ''
  /api/v1/users/company/{company_pk}/domain-verification/{id}:
    get:
      operationId: users_company_domain_verification_retrieve
      description: |-
        Domain verification creation and edition.
        The edition needs the scope "domain.write".
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this domain verification.
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - support-tool.read
      - JWTTokenAuthentication:
        - domain.read
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainVerification'
          description: ''
    put:
      operationId: users_company_domain_verification_update
      description: |-
        Domain verification creation and edition.
        The edition needs the scope "domain.write".
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this domain verification.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainVerification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DomainVerification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DomainVerification'
        required: true
      security:
      - JWTTokenAuthentication:
        - domain.write
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainVerification'
          description: ''
    patch:
      operationId: users_company_domain_verification_partial_update
      description: |-
        Domain verification creation and edition.
        The edition needs the scope "domain.write".
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this domain verification.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDomainVerification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDomainVerification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDomainVerification'
      security:
      - JWTTokenAuthentication:
        - domain.write
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainVerification'
          description: ''
    delete:
      operationId: users_company_domain_verification_destroy
      description: |-
        Domain verification creation and edition.
        The edition needs the scope "domain.write".
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this domain verification.
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - domain.write
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/users/company/{company_pk}/domain-verification/{id}/check:
    post:
      operationId: users_company_domain_verification_check_create
      description: Force rechecking verification status
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this domain verification.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainVerification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DomainVerification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DomainVerification'
        required: true
      security:
      - JWTTokenAuthentication:
        - domain.write
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainVerification'
          description: The domain has been successfully verified
        '400':
          description: The domain could not be verified.
  /api/v1/users/company/{company_pk}/grant-costless:
    get:
      operationId: users_company_grant_costless_list
      description: |-
        Display the costless payment method of the selected company, if it exists.

        This API is only accessible to service users with the appropriate rights.
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - support-tool.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostlessAlias'
          description: Company possess a costless payment method
        '403':
          description: Not enough rights
    post:
      operationId: users_company_grant_costless_create
      description: |-
        Grant a costless payment method to the selected company. This special payment method permits the user to pay any invoice (regardless of the amount) without any real costs. This is to be used for test account or demo accounts. For regular users, please prefer using discounts or vouchers.

        This API is only accessible to service users with the appropriate rights.
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostlessAliasCreation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CostlessAliasCreation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CostlessAliasCreation'
        required: true
      security:
      - JWTTokenAuthentication:
        - support-tool.write
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostlessAlias'
          description: New costless payment method has been granted to the company.
        '403':
          description: Not enough rights
  /api/v1/users/company/{company_pk}/grant-invoicing:
    get:
      operationId: users_company_grant_invoicing_list
      description: |-
        Display the invoicing payment method of the selected company, if it exists.

        This API is only accessible to service users with the appropriate rights.
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - support-tool.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicingAlias'
          description: Company possess an invoicing payment method
        '403':
          description: Not enough rights
    post:
      operationId: users_company_grant_invoicing_create
      description: |-
        Grant a invoicing payment method to the selected company. This payment method permits the user to pay any invoice (regardless of the amount) without any real costs. This is to be used for test account or demo accounts. For regular users, please prefer using discounts or vouchers.

        This API is only accessible to service users with the appropriate rights.
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoicingAliasCreation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InvoicingAliasCreation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InvoicingAliasCreation'
      security:
      - JWTTokenAuthentication:
        - support-tool.write
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostlessAlias'
          description: New costless payment method has been granted to the company.
        '403':
          description: Not enough rights
  /api/v1/users/company/{company_pk}/grant-invoicing/check:
    get:
      operationId: users_company_grant_invoicing_check_retrieve
      description: |-
        Checks if the current company can obtain a invoicing payment method.

        This API is only accessible to service users with the appropriate rights.
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - support-tool.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrantInvoicingCheck'
          description: Company possess an invoicing payment method
        '403':
          description: Not enough rights
  /api/v1/users/company/{company_pk}/invitation:
    get:
      operationId: users_company_invitation_list
      description: |-
        API Viewset for Invitations
        Handles the list, retrieve, create and delete actions for the invitation model.
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - invitation.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInvitationList'
          description: ''
    post:
      operationId: users_company_invitation_create
      description: |-
        API Viewset for Invitations
        Handles the list, retrieve, create and delete actions for the invitation model.
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invitation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Invitation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Invitation'
        required: true
      security:
      - JWTTokenAuthentication:
        - invitation.write
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: ''
  /api/v1/users/company/{company_pk}/invitation/{id}:
    get:
      operationId: users_company_invitation_retrieve
      description: |-
        API Viewset for Invitations
        Handles the list, retrieve, create and delete actions for the invitation model.
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this invitation.
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - invitation.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: ''
    delete:
      operationId: users_company_invitation_destroy
      description: In this endpoint, we don't delete the invitation but revoke it
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this invitation.
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - invitation.write
      responses:
        '204':
          description: No response body
  /api/v1/users/company/{company_pk}/invitation/{id}/send_email:
    post:
      operationId: users_company_invitation_send_email_create
      description: |-
        API Viewset for Invitations
        Handles the list, retrieve, create and delete actions for the invitation model.
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this invitation.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invitation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Invitation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Invitation'
        required: true
      security:
      - JWTTokenAuthentication:
        - invitation.write
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: ''
  /api/v1/users/company/{company_pk}/invoice:
    get:
      operationId: users_company_invoice_list
      description: "List the company's invoices and their statuses. \n\n The requesting\
        \ user can only see companies for which he has valid permissions."
      parameters:
      - in: query
        name: amount
        schema:
          type: number
          format: double
        description: Filter on a specific amount. Mainly used to filter the invoices
          with `0` as the amount.
      - in: path
        name: company_pk
        schema:
          type: string
        description: The UUID of the company for fetching linked invoices.
        required: true
      - in: query
        name: ordering
        schema:
          type: string
        description: 'Which field to use when ordering the results. Current possible
          choices are: `issued`, `amount`, `discount`, `vat_amount`, `abapayment_status`.
          To order in reverse, you must use `-` as prefix on ordering value (i.e.
          `-amount`).'
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: string
        description: Filter on specific `abapayment_status` choices.
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - invoice.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInvoiceListList'
          description: ''
  /api/v1/users/company/{company_pk}/invoice-template:
    get:
      operationId: users_company_invoice_template_list
      description: |-
        Lets you manage invoice templates of an entity.

        An invoice template describes how future invoices will be generated. Use the POST method to create a new invoice template,
        defining which address, payment method and which subscriptions to handle. All of these values should be given by their PKs, and should be related
        to the current subject (for example, the address of the invoice template should be one of the company's).

        Note that those instances (address, payment method, etc.) should already exist. Use the cooresponding endpoint beforehand as needed
        to retrieve the respective PKs or create new instances.
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - invoice.read
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInvoiceTemplateList'
          description: ''
    post:
      operationId: users_company_invoice_template_create
      description: |-
        Lets you manage invoice templates of an entity.

        An invoice template describes how future invoices will be generated. Use the POST method to create a new invoice template,
        defining which address, payment method and which subscriptions to handle. All of these values should be given by their PKs, and should be related
        to the current subject (for example, the address of the invoice template should be one of the company's).

        Note that those instances (address, payment method, etc.) should already exist. Use the cooresponding endpoint beforehand as needed
        to retrieve the respective PKs or create new instances.
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InvoiceTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InvoiceTemplate'
      security:
      - JWTTokenAuthentication:
        - invoice.write
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceTemplate'
          description: ''
  /api/v1/users/company/{company_pk}/invoice-template/{id}:
    get:
      operationId: users_company_invoice_template_retrieve
      description: |-
        Lets you manage invoice templates of an entity.

        An invoice template describes how future invoices will be generated. Use the POST method to create a new invoice template,
        defining which address, payment method and which subscriptions to handle. All of these values should be given by their PKs, and should be related
        to the current subject (for example, the address of the invoice template should be one of the company's).

        Note that those instances (address, payment method, etc.) should already exist. Use the cooresponding endpoint beforehand as needed
        to retrieve the respective PKs or create new instances.
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this invoice template.
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - invoice.read
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceTemplate'
          description: ''
    put:
      operationId: users_company_invoice_template_update
      description: |-
        Lets you manage invoice templates of an entity.

        An invoice template describes how future invoices will be generated. Use the POST method to create a new invoice template,
        defining which address, payment method and which subscriptions to handle. All of these values should be given by their PKs, and should be related
        to the current subject (for example, the address of the invoice template should be one of the company's).

        Note that those instances (address, payment method, etc.) should already exist. Use the cooresponding endpoint beforehand as needed
        to retrieve the respective PKs or create new instances.
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this invoice template.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InvoiceTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InvoiceTemplate'
      security:
      - JWTTokenAuthentication:
        - invoice.write
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceTemplate'
          description: ''
    patch:
      operationId: users_company_invoice_template_partial_update
      description: |-
        Lets you manage invoice templates of an entity.

        An invoice template describes how future invoices will be generated. Use the POST method to create a new invoice template,
        defining which address, payment method and which subscriptions to handle. All of these values should be given by their PKs, and should be related
        to the current subject (for example, the address of the invoice template should be one of the company's).

        Note that those instances (address, payment method, etc.) should already exist. Use the cooresponding endpoint beforehand as needed
        to retrieve the respective PKs or create new instances.
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this invoice template.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInvoiceTemplate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInvoiceTemplate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInvoiceTemplate'
      security:
      - JWTTokenAuthentication:
        - invoice.write
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceTemplate'
          description: ''
    delete:
      operationId: users_company_invoice_template_destroy
      description: |-
        Lets you manage invoice templates of an entity.

        An invoice template describes how future invoices will be generated. Use the POST method to create a new invoice template,
        defining which address, payment method and which subscriptions to handle. All of these values should be given by their PKs, and should be related
        to the current subject (for example, the address of the invoice template should be one of the company's).

        Note that those instances (address, payment method, etc.) should already exist. Use the cooresponding endpoint beforehand as needed
        to retrieve the respective PKs or create new instances.
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this invoice template.
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - invoice.write
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/users/company/{company_pk}/invoice/{id}:
    get:
      operationId: users_company_invoice_retrieve
      description: "Fetch available info about a specific invoice. \n\n The requesting\
        \ user can only see invoices from companies for which he has valid permissions."
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this invoice.
        required: true
      - in: query
        name: includePaymentUrl
        schema:
          type: boolean
        description: 'Set to `true` to retrieve the `user_payment_url` value, i.e.
          the payment url the end user should be redirected to to pay this invoice
          manually. Caution: do not use it if not needed, as this makes the API call
          at least 100ms slower.'
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - invoice.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceFullWithUserPaymentUrl'
          description: ''
    put:
      operationId: users_company_invoice_update
      description: |-
        View set to see invoices, their statuses (paid or not) and update some of their values (payment method, address and title).
        Only unpaid invoices can be updated.

        The requesting user can only see invoices from companies for which he has valid permissions.

        Caution: As this API can query a lot of invoices at once, using no `page_size` or a `page_size` larger than 10 is not recommended. This might result in long times to fetch the data or even in timeouts.
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this invoice.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InvoiceUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InvoiceUpdate'
      security:
      - JWTTokenAuthentication:
        - invoice.write
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceUpdate'
          description: ''
    patch:
      operationId: users_company_invoice_partial_update
      description: |-
        View set to see invoices, their statuses (paid or not) and update some of their values (payment method, address and title).
        Only unpaid invoices can be updated.

        The requesting user can only see invoices from companies for which he has valid permissions.

        Caution: As this API can query a lot of invoices at once, using no `page_size` or a `page_size` larger than 10 is not recommended. This might result in long times to fetch the data or even in timeouts.
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this invoice.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInvoiceUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInvoiceUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInvoiceUpdate'
      security:
      - JWTTokenAuthentication:
        - invoice.write
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceUpdate'
          description: ''
  /api/v1/users/company/{company_pk}/invoice/{id}/pay:
    post:
      operationId: users_company_invoice_pay_create
      description: Triggers the invoice payment. The invoice should not be already
        paid, and have a payment_method
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this invoice.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoicePay'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InvoicePay'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InvoicePay'
      security:
      - JWTTokenAuthentication:
        - invoice.write
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoicePay'
          description: ''
  /api/v1/users/company/{company_pk}/invoice/{id}/pdf:
    get:
      operationId: users_company_invoice_pdf_retrieve
      description: Generate on demand the invoice PDF, and returns a redirect response
        to where it can be found
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this invoice.
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - invoice.read
      responses:
        '302':
          headers:
            Location:
              schema:
                type: string
                format: uri
              description: URL of the PDF
          description: The url of the invoice PDF
  /api/v1/users/company/{company_pk}/member:
    get:
      operationId: users_company_member_list
      description: |-
        Get the list of members of a company

        Note: The `audiences` parameter will only be present when calling with `service_users=only`.
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      - in: query
        name: length
        schema:
          type: string
        description: Length of subset.
      - in: query
        name: search
        schema:
          type: string
        description: Search for specific members (first name, last name, email, uid)
      - in: query
        name: service_users
        schema:
          type: string
        description: '[included/excluded/only] What set of members types is returned'
      - in: query
        name: start
        schema:
          type: string
        description: Start of subset
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - member.read
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MemberInfoListSerializerServiceUser'
          description: ''
    post:
      operationId: users_company_member_create
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Member'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Member'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Member'
        required: true
      security:
      - JWTTokenAuthentication:
        - member.write
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
          description: ''
  /api/v1/users/company/{company_pk}/member/{id}:
    get:
      operationId: users_company_member_retrieve
      description: Retrieve the member of a company (if valid)
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - member.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberInfoDetails'
          description: ''
    delete:
      operationId: users_company_member_destroy
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - member.write
      responses:
        '204':
          description: No response body
  /api/v1/users/company/{company_pk}/partnership:
    get:
      operationId: users_company_partnership_retrieve
      description: Get the corresponding Yapeal UUIDs for current user and organization
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - partnership.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyPartnership'
          description: Partnership and Person identity UUIDs
        '403':
          description: User must be owner of the organization
  /api/v1/users/company/{company_pk}/payment-method:
    get:
      operationId: users_company_payment_method_list
      description: Returns the list of valid payment methods for the given company
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: refresh
        schema:
          type: boolean
        description: If true, the payment methods will be refreshed from the underlying
          payment service backend.
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - invoice.read
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPaymentMethodList'
          description: ''
    post:
      operationId: users_company_payment_method_create
      description: |-
        Let you start a registration of a new payment method for the given company uuid.
        It returns a simple JSON containing an url to which the user should be redirected to.

        Following this link, the user will be asked to enter their credit card information on the payment provider's webpage.
        They will then be redirected to the `return_redirect_url` that you define in the request body, with the following GET parameters:
        - `mode`=`payment_method_register`: meaning that the user got redirected to the callback because of a payment method registration.
        - `status`=`success` or `failed`: meaning that the payment method has been successfully added or not. A payment method registration can fail because the credit card cannot be used or because the user has cancelled the process.
        - `invoice_pk`: (can be ignored for the payment method registration) the invoice used to create the payment method
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentMethodRegistration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PaymentMethodRegistration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PaymentMethodRegistration'
        required: true
      security:
      - JWTTokenAuthentication:
        - invoice.write
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodRegistration'
          description: ''
  /api/v1/users/company/{company_pk}/payment-method/{id}:
    get:
      operationId: users_company_payment_method_retrieve
      description: Retrieve the specified `id` payment-method
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this alias.
        required: true
      - in: query
        name: refresh
        schema:
          type: boolean
        description: If true, the payment methods will be refreshed from the underlying
          payment service backend.
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - invoice.read
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
          description: ''
    delete:
      operationId: users_company_payment_method_destroy
      description: Delete the specified `id` payment-method
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this alias.
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - invoice.write
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/users/company/{company_pk}/permission:
    get:
      operationId: users_company_permission_list
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      - in: query
        name: group_id
        schema:
          type: string
          format: uuid
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: right
        schema:
          type: string
      - in: query
        name: role_code
        schema:
          type: string
      - in: query
        name: role_id
        schema:
          type: integer
          nullable: true
      - in: query
        name: user_id
        schema:
          type: string
          format: uuid
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - permission.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPermissionList'
          description: ''
    post:
      operationId: users_company_permission_create
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Permission'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Permission'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Permission'
        required: true
      security:
      - JWTTokenAuthentication:
        - permission.write
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
          description: ''
  /api/v1/users/company/{company_pk}/permission/{id}:
    get:
      operationId: users_company_permission_retrieve
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this permission.
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - permission.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
          description: ''
    delete:
      operationId: users_company_permission_destroy
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this permission.
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - permission.write
      responses:
        '204':
          description: No response body
  /api/v1/users/company/{company_pk}/subscription/packages:
    get:
      operationId: users_company_subscription_packages_list
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: company_pk
        schema:
          type: integer
        description: A unique integer value identifying this subscription package.
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - subscription.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSubscriptionPackageList'
          description: ''
  /api/v1/users/company/{company_pk}/subscription/signatures/available:
    get:
      operationId: users_company_subscription_signatures_available_list
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - subscription.read
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubscriptionAvailableSignatures'
          description: ''
  /api/v1/users/company/{company_pk}/unit:
    get:
      operationId: users_company_unit_list
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
          format: uuid
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - company.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUnitList'
          description: ''
    post:
      operationId: users_company_unit_create
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - company.write
      responses:
        '201':
          description: No response body
  /api/v1/users/company/{company_pk}/unit/{group_id}:
    get:
      operationId: users_company_unit_retrieve
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: group_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this unit.
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - company.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: ''
    put:
      operationId: users_company_unit_update
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: group_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this unit.
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - company.write
      responses:
        '200':
          description: No response body
    patch:
      operationId: users_company_unit_partial_update
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: group_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this unit.
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - company.write
      responses:
        '200':
          description: No response body
    delete:
      operationId: users_company_unit_destroy
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: group_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this unit.
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - company.write
      responses:
        '204':
          description: No response body
  /api/v1/users/company/{company_pk}/unit/{unit_pk}/member:
    get:
      operationId: users_company_unit_member_list
      description: |-
        Get the list of members of a company

        Note: The `audiences` parameter will only be present when calling with `service_users=only`.
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      - in: query
        name: length
        schema:
          type: string
        description: Length of subset.
      - in: query
        name: search
        schema:
          type: string
        description: Search for specific members (first name, last name, email, uid)
      - in: query
        name: service_users
        schema:
          type: string
        description: '[included/excluded/only] What set of members types is returned'
      - in: query
        name: start
        schema:
          type: string
        description: Start of subset
      - in: path
        name: unit_pk
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - member.read
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MemberInfoListSerializerServiceUser'
          description: ''
    post:
      operationId: users_company_unit_member_create
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      - in: path
        name: unit_pk
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Member'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Member'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Member'
        required: true
      security:
      - JWTTokenAuthentication:
        - member.write
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
          description: ''
  /api/v1/users/company/{company_pk}/unit/{unit_pk}/member/{id}:
    get:
      operationId: users_company_unit_member_retrieve
      description: Retrieve the member of a company (if valid)
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: unit_pk
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - member.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberInfoDetails'
          description: ''
    delete:
      operationId: users_company_unit_member_destroy
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: unit_pk
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - member.write
      responses:
        '204':
          description: No response body
  /api/v1/users/company/{company_pk}/unit/{unit_pk}/permission:
    get:
      operationId: users_company_unit_permission_list
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      - in: query
        name: group_id
        schema:
          type: string
          format: uuid
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: right
        schema:
          type: string
      - in: query
        name: role_code
        schema:
          type: string
      - in: query
        name: role_id
        schema:
          type: integer
          nullable: true
      - in: path
        name: unit_pk
        schema:
          type: string
        required: true
      - in: query
        name: user_id
        schema:
          type: string
          format: uuid
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - permission.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPermissionList'
          description: ''
    post:
      operationId: users_company_unit_permission_create
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      - in: path
        name: unit_pk
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Permission'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Permission'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Permission'
        required: true
      security:
      - JWTTokenAuthentication:
        - permission.write
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
          description: ''
  /api/v1/users/company/{company_pk}/unit/{unit_pk}/permission/{id}:
    get:
      operationId: users_company_unit_permission_retrieve
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this permission.
        required: true
      - in: path
        name: unit_pk
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - permission.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
          description: ''
    delete:
      operationId: users_company_unit_permission_destroy
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this permission.
        required: true
      - in: path
        name: unit_pk
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - permission.write
      responses:
        '204':
          description: No response body
  /api/v1/users/company/{company_pk}/verify:
    get:
      operationId: users_company_verify_list
      description: |-
        Get the manual verification status of the company.

        Caution: This API does not give any info on other types of strong validations from verification services (yapeal, deepid).
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - company.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManualValidation'
              examples:
                Example:
                  value:
                    level: strong
                    audit:
                    - user: john.doe@deepcloud.swiss
                      level: strong
                      action: create
                      datetime: '2023-07-12T13:44:36.055Z'
                      validator: support.user@deepcloud.swiss
                      ticket_ref: https://dev.deepbox.swiss/
                      log_datetime: '2023-07-12T13:44:39.027941+00:00'
                  summary: example
          description: Verification info or empty dict if no verification is existing
            for the company
        '403':
          description: Unauthorized access
        '404':
          description: Company not found
    post:
      operationId: users_company_verify_create
      description: |-
        Validate this company by creating a new manual verification or updating the current one.
        You are able to specify the level of validation and the reason for it.

        Caution: The company must have at least one owner user before being granted a validation.
      parameters:
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Verify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Verify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Verify'
      security:
      - JWTTokenAuthentication:
        - company.verify
      responses:
        '201':
          description: Verification created
        '403':
          description: Unauthorized access
        '404':
          description: Company not found
  /api/v1/users/company/{company_pk}/verify/clear:
    delete:
      operationId: users_company_verify_clear_destroy
      description: Remove all manual verifications from the company.
      parameters:
      - in: query
        name: all
        schema:
          type: string
        description: By specifing the `all` parameter to `true`, you can force the
          deletion of ALL validations (non-manual included) on this company.
      - in: path
        name: company_pk
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - company.verify
      responses:
        '204':
          description: Verification(s) deleted or no verification was present when
            trying to delete
        '403':
          description: Unauthorized access
        '404':
          description: Company not found
  /api/v1/users/company/{group_id}:
    get:
      operationId: users_company_retrieve
      description: |-
        Provide company creation, edition and listing. To retrieve YAPEAL IBAN information, it needs the scope 'account.read'.
        This viewset also allows nested Address creation. See the request schema description for more details.
      parameters:
      - in: path
        name: group_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this company.
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - company.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyYapeal'
          description: ''
    put:
      operationId: users_company_update
      description: |-
        Provide company creation, edition and listing. To retrieve YAPEAL IBAN information, it needs the scope 'account.read'.
        This viewset also allows nested Address creation. See the request schema description for more details.
      parameters:
      - in: path
        name: group_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this company.
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - company.write
      responses:
        '200':
          description: No response body
    patch:
      operationId: users_company_partial_update
      description: |-
        Provide company creation, edition and listing. To retrieve YAPEAL IBAN information, it needs the scope 'account.read'.
        This viewset also allows nested Address creation. See the request schema description for more details.
      parameters:
      - in: path
        name: group_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this company.
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - company.write
      responses:
        '200':
          description: No response body
    delete:
      operationId: users_company_destroy
      description: |-
        Provide company creation, edition and listing. To retrieve YAPEAL IBAN information, it needs the scope 'account.read'.
        This viewset also allows nested Address creation. See the request schema description for more details.
      parameters:
      - in: path
        name: group_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this company.
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - company.delete
      responses:
        '204':
          description: No response body
  /api/v1/users/company/{group_id}/accounting:
    get:
      operationId: users_company_accounting_retrieve
      description: Returns the status of the organization regarding the payments
      parameters:
      - in: path
        name: group_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this company.
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - company.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyAccounting'
          description: ''
        '404':
          description: Company not found
  /api/v1/users/company/{group_id}/deactivate:
    post:
      operationId: users_company_deactivate_create
      description: |-
        Provide company creation, edition and listing. To retrieve YAPEAL IBAN information, it needs the scope 'account.read'.
        This viewset also allows nested Address creation. See the request schema description for more details.
      parameters:
      - in: path
        name: group_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this company.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Company'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Company'
        required: true
      security:
      - JWTTokenAuthentication:
        - company.write
      responses:
        '204':
          description: Company disabled
        '403':
          description: Unauthorized access
        '404':
          description: Company not found
  /api/v1/users/company/{group_id}/iban:
    get:
      operationId: users_company_iban_retrieve
      description: |-
        Provide company creation, edition and listing. To retrieve YAPEAL IBAN information, it needs the scope 'account.read'.
        This viewset also allows nested Address creation. See the request schema description for more details.
      parameters:
      - in: path
        name: group_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this company.
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - company.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YapealIban'
          description: ''
    post:
      operationId: users_company_iban_create
      description: Set company IBAN
      parameters:
      - in: path
        name: group_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this company.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/YapealIban'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/YapealIban'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/YapealIban'
        required: true
      security:
      - JWTTokenAuthentication:
        - company.write
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YapealIbanResponse'
          description: ''
        '400':
          description: Error can vary.
  /api/v1/users/company/{group_id}/yapeal/register/:
    post:
      operationId: users_company_yapeal_register_create
      description: Register your company on yapeal
      parameters:
      - in: path
        name: group_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this company.
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - company.write
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
  /api/v1/users/email-logs:
    get:
      operationId: users_email_logs_list
      description: Lets you retrieve the logs of the emails which have been sent from
        this service.
      parameters:
      - in: query
        name: email_to
        schema:
          type: string
      - in: query
        name: email_type
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - support-tool.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEmailNotificationLogList'
          description: ''
  /api/v1/users/email-logs/{id}:
    get:
      operationId: users_email_logs_retrieve
      description: Lets you retrieve the logs of the emails which have been sent from
        this service.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this email notification log.
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - support-tool.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailNotificationLog'
          description: ''
  /api/v1/users/export/user-list:
    get:
      operationId: users_export_user_list_retrieve
      description: Returns a CSV file of all current users (having an sso user profile).
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - support-tool.read
      - JWTTokenAuthentication:
        - user.list
      responses:
        '200':
          description: No response body
  /api/v1/users/export/user-organisation-mappings:
    get:
      operationId: users_export_user_organisation_mappings_retrieve
      description: Returns a CSV file of all user-organisation role mappings.
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - support-tool.read
      - JWTTokenAuthentication:
        - user.list
      responses:
        '200':
          description: No response body
  /api/v1/users/export/users:
    get:
      operationId: users_export_users_retrieve
      description: Returns a CSV-formatted report of the current users and organizations
        for the CRM.
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - support-tool.read
      - JWTTokenAuthentication:
        - user.list
      responses:
        '200':
          description: No response body
  /api/v1/users/group:
    get:
      operationId: users_group_list
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - group.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGroupList'
          description: ''
    post:
      operationId: users_group_create
      description: Mixin to add helper for JWTTokenHasScope permission support
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Group'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      security:
      - JWTTokenAuthentication:
        - group.write
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
  /api/v1/users/group/{group_pk}/member:
    get:
      operationId: users_group_member_list
      description: |-
        Get the list of members of a company

        Note: The `audiences` parameter will only be present when calling with `service_users=only`.
      parameters:
      - in: path
        name: group_pk
        schema:
          type: string
        required: true
      - in: query
        name: length
        schema:
          type: string
        description: Length of subset.
      - in: query
        name: search
        schema:
          type: string
        description: Search for specific members (first name, last name, email, uid)
      - in: query
        name: service_users
        schema:
          type: string
        description: '[included/excluded/only] What set of members types is returned'
      - in: query
        name: start
        schema:
          type: string
        description: Start of subset
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - member.read
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MemberInfoListSerializerServiceUser'
          description: ''
    post:
      operationId: users_group_member_create
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: group_pk
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Member'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Member'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Member'
        required: true
      security:
      - JWTTokenAuthentication:
        - member.write
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
          description: ''
  /api/v1/users/group/{group_pk}/member/{id}:
    get:
      operationId: users_group_member_retrieve
      description: Retrieve the member of a company (if valid)
      parameters:
      - in: path
        name: group_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - member.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberInfoDetails'
          description: ''
    delete:
      operationId: users_group_member_destroy
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: group_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - member.write
      responses:
        '204':
          description: No response body
  /api/v1/users/group/{group_pk}/permission:
    get:
      operationId: users_group_permission_list
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: query
        name: group_id
        schema:
          type: string
          format: uuid
      - in: path
        name: group_pk
        schema:
          type: string
          format: uuid
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: right
        schema:
          type: string
      - in: query
        name: role_code
        schema:
          type: string
      - in: query
        name: role_id
        schema:
          type: integer
          nullable: true
      - in: query
        name: user_id
        schema:
          type: string
          format: uuid
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - permission.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPermissionList'
          description: ''
    post:
      operationId: users_group_permission_create
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: group_pk
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Permission'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Permission'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Permission'
        required: true
      security:
      - JWTTokenAuthentication:
        - permission.write
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
          description: ''
  /api/v1/users/group/{group_pk}/permission/{id}:
    get:
      operationId: users_group_permission_retrieve
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: group_pk
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this permission.
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - permission.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
          description: ''
    delete:
      operationId: users_group_permission_destroy
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: group_pk
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this permission.
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - permission.write
      responses:
        '204':
          description: No response body
  /api/v1/users/group/{group_id}:
    get:
      operationId: users_group_retrieve
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: group_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this group.
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - group.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
    put:
      operationId: users_group_update
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: group_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this group.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Group'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      security:
      - JWTTokenAuthentication:
        - group.write
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
    patch:
      operationId: users_group_partial_update
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: group_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this group.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGroup'
      security:
      - JWTTokenAuthentication:
        - group.write
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
    delete:
      operationId: users_group_destroy
      description: Mixin to add helper for JWTTokenHasScope permission support
      parameters:
      - in: path
        name: group_id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this group.
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - group.write
      responses:
        '204':
          description: No response body
  /api/v1/users/inShare:
    get:
      operationId: users_inShare_list
      description: API Viewset for InShares Invitation, i.e. the shares the current
        user could accept, based on their email.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - invitation.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInShareInvitationList'
          description: ''
  /api/v1/users/inShare/{id}:
    get:
      operationId: users_inShare_retrieve
      description: API Viewset for InShares Invitation, i.e. the shares the current
        user could accept, based on their email.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this invitation.
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - invitation.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InShareInvitation'
          description: ''
  /api/v1/users/inShare/{id}/accept:
    post:
      operationId: users_inShare_accept_create
      description: |-
        Can be used to accept the given inShare in the name of the current user.

        - In case the given token used comes from an Abacus ERP, the given shareId will be accepted for the organization given in the token.
        - Otherwise, the `organizationId` should be given. The user should be a member of the given organization.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this invitation.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InShareInvitationAccept'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InShareInvitationAccept'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InShareInvitationAccept'
        required: true
      security:
      - JWTTokenAuthentication:
        - invitation.write
      responses:
        '201':
          description: InShare accepted
        '403':
          description: Unauthorized
        '404':
          description: Not found
  /api/v1/users/invitation:
    get:
      operationId: users_invitation_list
      description: |-
        API Viewset for Invitations
        Handles the list, retrieve, create and delete actions for the invitation model.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - invitation.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInvitationList'
          description: ''
    post:
      operationId: users_invitation_create
      description: |-
        API Viewset for Invitations
        Handles the list, retrieve, create and delete actions for the invitation model.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invitation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Invitation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Invitation'
        required: true
      security:
      - JWTTokenAuthentication:
        - invitation.write
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: ''
  /api/v1/users/invitation/{id}:
    get:
      operationId: users_invitation_retrieve
      description: |-
        API Viewset for Invitations
        Handles the list, retrieve, create and delete actions for the invitation model.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this invitation.
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - invitation.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: ''
    delete:
      operationId: users_invitation_destroy
      description: In this endpoint, we don't delete the invitation but revoke it
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this invitation.
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - invitation.write
      responses:
        '204':
          description: No response body
  /api/v1/users/invitation/{id}/send_email:
    post:
      operationId: users_invitation_send_email_create
      description: |-
        API Viewset for Invitations
        Handles the list, retrieve, create and delete actions for the invitation model.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this invitation.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invitation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Invitation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Invitation'
        required: true
      security:
      - JWTTokenAuthentication:
        - invitation.write
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: ''
  /api/v1/users/me:
    get:
      operationId: users_me_list
      description: |-
        Endpoint to get the user details (name, email, ...), linked companies and units.

        As a service, you can use the parameter `asSubjectId` to get other data on other objects using their UUID:
        - On users, to get the same info as they would get by calling this API.
        - On pending users, to get the companies that they are invited to and any available data.
        - On companies, to get information about the company (name, address, structure, ...)
        - On units, to get information about the unit (name, parent, address, ...)

        Note: This feature (using this API to get info on subjects instead of on its own user) is not recommended.
        For almost any case, it is better to use the specific APIs that are specialized for this use.
        Example: using `/api/v1/users/{id}` instead of `/api/v1/users/me?asSubjectId={id}`.

        **Caching Support**

        Supports server-side caching via `cache-control` header:

        *Cache-Control Directives:*
        - `max-age`: Cache duration in seconds, e.g. 'max-age=10'. 'max-age=0' disables caching. Limited to 30 seconds.
        - `no-store`: Prevents caching and removes existing cache entries.
        - `no-cache`: Refreshes and stores the updated response.

        *Cache Key Composition:*
        - Request URL, query parameters, and a cache-id (default is the trace-id from the `sentry-trace` header).
        - If no Sentry trace-id is provided, the jwt `subject` will be used.
        - Optional: Custom cache-id via `x-cache-id` directive, e.g. 'x-cache-id=<valid-uuid>' (must be a UUID).
        - Optional: Enforce jwt subject usage with `x-use-subject` directive.

        *Cache Status in Response Headers:*
        - `X-Cache: HIT`: Loaded from cache.
        - `X-Cache: MISS`: Not cached or cache expired.

        *Cache-Control Header Example:*
        - Cache for 10 seconds: `cache-control: max-age=10`
        - Custom cache-id: `cache-control: max-age=10, x-cache-id=<uuid>`
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - user.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserFullList'
              examples:
                DefaultUse:
                  value:
                    count: 123
                    next: http://api.example.org/accounts/?page=4
                    previous: http://api.example.org/accounts/?page=2
                    results:
                    - email: user@email.com
                      firstname: John Joseph
                      lastname: Doe
                      id: 1102eff5-f089-4d48-a62d-b0e0d364c919
                      groups: []
                      companies:
                      - group_id: 0f90d5fe-18d7-49c7-995e-3eef18a0e4c9
                        name: cace0dd3-8d5b-45c2-b133-34c99c2ed1e9@automatic.onboarding.deepbox.swiss
                        display_name: My Company
                        default_address:
                          id: 1
                          street: Train Station Street 1
                          street2: null
                          city: City
                          zipcode: '1000'
                          country: CH
                          plus_code: null
                          phone: '+41791234567'
                          email: company@email.com
                          address_display: Train Station Street 1 (1000 City)
                          is_user_main: false
                        metadata: {}
                        logo: null
                        roles:
                        - ORDER_SUB
                        - VIEW_COMPANY
                        - MANAGE_SUB_ACCESS
                        - MANAGE_BOXES
                        - MANAGE_COMPANY
                        - VIEW_TOKEN
                        - MANAGE_MEMBERS
                        structure: soleproprietorship
                        verification_state: weak
                        verification_process_status: in_progress
                      units: []
                      pending: false
                      pending_invitations: []
                      lang: fr-ch
                      display_name: John Doe
                  summary: default use
          description: ''
  /api/v1/users/me/identity:
    get:
      operationId: users_me_identity_retrieve
      description: |-
        Get the current user identity (names, verification status, identificaton services identities)

        The `identity_uid` field is deprecated and will be removed in the future. You must now use the `identities` field instead.
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - user.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWithIdentity'
          description: ''
  /api/v1/users/me/language/:
    get:
      operationId: users_me_language_retrieve
      description: Get/Set the language of a user through API
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - user.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSOUserProfileLanguage'
          description: ''
    post:
      operationId: users_me_language_create
      description: Get/Set the language of a user through API
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SSOUserProfileLanguage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SSOUserProfileLanguage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SSOUserProfileLanguage'
        required: true
      security:
      - JWTTokenAuthentication:
        - user.write
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSOUserProfileLanguage'
          description: ''
  /api/v1/users/me/profile/:
    get:
      operationId: users_me_profile_retrieve
      description: |-
        Get/Set the current miscellaneous profile info about the user.
        This API is contextualized by client token.

        Caution: The data contained here is not checked by our software. This data might not be safe and should only be used for mundane info related to display needs. Please check the data before any use.
      parameters:
      - in: query
        name: all
        schema:
          type: string
        description: Set to true to return all data from all client token contexts
          for the user.
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - user.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSOUserProfileLimited'
          description: ''
    patch:
      operationId: users_me_profile_partial_update
      description: |-
        Get/Set the current miscellaneous profile info about the user.
        This API is contextualized by client token.

        Caution: The data contained here is not checked by our software. This data might not be safe and should only be used for mundane info related to display needs. Please check the data before any use.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSSOUserProfileLimited'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSSOUserProfileLimited'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSSOUserProfileLimited'
      security:
      - JWTTokenAuthentication:
        - user.write
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSOUserProfileLimited'
          description: ''
  /api/v1/users/notify/:
    post:
      operationId: users_notify_create
      description: |-
        Send an email to the given `email` or `user_id` (only one of them is needed), using the given `template_name`.
        See the detailed schema of `template_name` for possible values.

        The `parameters` field content depends on the `template_name` used.
        It could also contains the generic keys `msg_title` and `msg_content`, displayed in the email if present in the parameters object.

        Only service users can use this endpoint.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Notify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Notify'
        required: true
      security:
      - JWTTokenAuthentication:
        - users.notify
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notify'
          description: ''
  /api/v1/users/organisations/:
    get:
      operationId: users_organisations_list
      description: |-
        List companies the user is a part of or create a new company.
        To be used by service users
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - company.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCompanyTreeList'
          description: ''
    post:
      operationId: users_organisations_create
      description: |-
        List companies the user is a part of or create a new company.
        To be used by service users
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyTree'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompanyTree'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CompanyTree'
        required: true
      security:
      - JWTTokenAuthentication:
        - company.write
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyTree'
          description: ''
  /api/v1/users/organisations/{company_id}/:
    get:
      operationId: users_organisations_retrieve
      description: Retrieve a company and all sub-companies
      parameters:
      - in: path
        name: company_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - company.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyTree'
          description: ''
  /api/v1/users/organisations/{company_id}/branding:
    get:
      operationId: users_organisations_branding_retrieve
      description: Retrieve and update company branding information
      parameters:
      - in: path
        name: company_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - company.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyBranding'
          description: ''
    put:
      operationId: users_organisations_branding_update
      description: Retrieve and update company branding information
      parameters:
      - in: path
        name: company_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyBranding'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompanyBranding'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CompanyBranding'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyBranding'
          description: ''
    patch:
      operationId: users_organisations_branding_partial_update
      description: Retrieve and update company branding information
      parameters:
      - in: path
        name: company_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCompanyBranding'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCompanyBranding'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCompanyBranding'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyBranding'
          description: ''
  /api/v1/users/organisations/{company_id}/subjects/:
    get:
      operationId: users_organisations_subjects_list
      description: |-
        Retrieve all users and/or service users of a company.
        This endpoint is the preferred method to list company members when the requesting user only has the member role in a company.
      parameters:
      - in: path
        name: company_id
        schema:
          type: string
          format: uuid
        required: true
      - in: query
        name: page
        schema:
          type: string
        description: A page number within the paginated result set.
      - in: query
        name: page_size
        schema:
          type: string
        description: Number of results to return per page.
      - in: query
        name: search
        schema:
          type: string
        description: Search for specific subjects (first name, last name, email, uid)
      - in: query
        name: subject_type
        schema:
          type: string
        description: '[user, service_user] Comma-separated list of subjects types.
          Defaults to "user,service_user"'
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - company.read
        - member.read
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaginatedCompanySubjectList'
          description: ''
  /api/v1/users/organisations/{company_id}/units/{unit_id}/:
    get:
      operationId: users_organisations_units_retrieve
      description: Retrieve a unit of a company and all sub-units
      parameters:
      - in: path
        name: company_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: unit_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - company.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitTree'
          description: ''
  /api/v1/users/search:
    get:
      operationId: users_search_list
      description: |-
        Get the list of users passed as input
        No need for serializer because all is passed directly from the KeyCloak API
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - user.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
  /api/v1/users/shareInvite:
    get:
      operationId: users_shareInvite_list
      description: |-
        API Viewset for Invitations, modified
        Handles the list, retrieve, create and delete actions for the invitation model.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - invitation.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedShareInvitationList'
          description: ''
    post:
      operationId: users_shareInvite_create
      description: |-
        API Viewset for Invitations, modified
        Handles the list, retrieve, create and delete actions for the invitation model.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShareInvitation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShareInvitation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShareInvitation'
        required: true
      security:
      - JWTTokenAuthentication:
        - invitation.write
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareInvitation'
          description: ''
  /api/v1/users/shareInvite/{id}:
    get:
      operationId: users_shareInvite_retrieve
      description: |-
        API Viewset for Invitations, modified
        Handles the list, retrieve, create and delete actions for the invitation model.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this invitation.
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - invitation.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareInvitation'
          description: ''
    delete:
      operationId: users_shareInvite_destroy
      description: In this endpoint, we don't delete the invitation but revoke it
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this invitation.
        required: true
      tags:
      - users
      security:
      - JWTTokenAuthentication:
        - invitation.write
      responses:
        '204':
          description: No response body
  /api/v1/users/shareInvite/{id}/send_email:
    post:
      operationId: users_shareInvite_send_email_create
      description: |-
        API Viewset for Invitations, modified
        Handles the list, retrieve, create and delete actions for the invitation model.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this invitation.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShareInvitation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShareInvitation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShareInvitation'
        required: true
      security:
      - JWTTokenAuthentication:
        - invitation.write
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareInvitation'
          description: ''
  /api/v1/users/support:
    post:
      operationId: users_support_create
      description: "Create a support/feature request from the user given within the\
        \ JWT token. Only `multipart/form-data` (when uploading file) and `application/x-www-form-urlencoded`\
        \ content are valid.\nThe \"files\" parameters is a list and can accept multiple\
        \ file.\n\n# Request body example\n\n\n    -----------------------------123456\n\
        \    Content-Disposition: form-data; name=\"type\"\n\n    support\n    -----------------------------123456\n\
        \    Content-Disposition: form-data; name=\"text\"\n\n    An issue description\n\
        \    -----------------------------123456\n    Content-Disposition: form-data;\
        \ name=\"contact\"\n\n\n    -----------------------------123456\n    Content-Disposition:\
        \ form-data; name=\"files\"; filename=\"screenshot1.jpg\"\n    Content-Type:\
        \ application/octet-stream\n\n    [file content]\n    -----------------------------123456\n\
        \    Content-Disposition: form-data; name=\"files\"; filename=\"screenshot2.jpg\"\
        \n    Content-Type: application/octet-stream\n\n    [file content]\n    -----------------------------123456--\n\
        \n    "
      tags:
      - users
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OnefileSupport'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OnefileSupport'
        required: true
      security:
      - JWTTokenAuthentication:
        - deep.admin
      - JWTTokenAuthentication:
        - support.write
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Support'
          description: ''
components:
  schemas:
    AbapaymentStatusEnum:
      enum:
      - unpaid
      - pending
      - settled
      - wrong
      - transmitted
      - overpaid
      - cancelled
      - waived
      type: string
      description: |-
        * `unpaid` - Waiting for payment
        * `pending` - Pending
        * `settled` - Settled
        * `wrong` - Something went wrong
        * `transmitted` - Payment transmitted
        * `overpaid` - Overpaid
        * `cancelled` - Cancelled
        * `waived` - Waived
    ActionTagEnum:
      enum:
      - create
      - update
      - delete
      type: string
      description: |-
        * `create` - Create
        * `update` - Update
        * `delete` - Delete
    Address:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        street:
          type: string
          nullable: true
          title: Street and number
          maxLength: 256
        street2:
          type: string
          nullable: true
          title: Additional address info (p.o. box, building,...)
          maxLength: 256
        city:
          type: string
          nullable: true
          maxLength: 100
        zipcode:
          type: string
          nullable: true
          title: Postal code
          maxLength: 32
        country:
          $ref: '#/components/schemas/CountryEnum'
        plus_code:
          type: string
          nullable: true
          maxLength: 12
        phone:
          type: string
          nullable: true
          title: Phone number
          maxLength: 128
        email:
          type: string
          format: email
          nullable: true
          title: E-Mail
          maxLength: 254
        preferred_language:
          type: string
          title: Language used in emails
          description: 2, 3 or 5 characters as specified in ISO 639
          maxLength: 5
        address_display:
          type: string
          readOnly: true
        is_user_main:
          type: boolean
          title: Is the main address?
      required:
      - address_display
      - country
      - id
    AddressSwissID:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        street:
          type: string
          nullable: true
          title: Street and number
          maxLength: 256
        street2:
          type: string
          nullable: true
          title: Additional address info (p.o. box, building,...)
          maxLength: 256
        city:
          type: string
          nullable: true
          maxLength: 100
        zipcode:
          type: string
          nullable: true
          title: Postal code
          maxLength: 32
        country:
          $ref: '#/components/schemas/CountryEnum'
        plus_code:
          type: string
          nullable: true
          maxLength: 12
        phone:
          type: string
          nullable: true
          title: Phone number
          maxLength: 128
        email:
          type: string
          format: email
          nullable: true
          title: E-Mail
          maxLength: 254
        preferred_language:
          type: string
          title: Language used in emails
          description: 2, 3 or 5 characters as specified in ISO 639
          maxLength: 5
        address_display:
          type: string
          readOnly: true
        is_user_main:
          type: boolean
          title: Is the main address?
        is_mobile_id:
          type: boolean
          description: Is this phone number associated with a valid MobileID validation
            (valid in switzerland)
          readOnly: true
        is_mobile_id_eidas:
          type: boolean
          description: Is this phone number associated with a valid MobileID validation
            (valid in europe)
          readOnly: true
      required:
      - address_display
      - country
      - id
      - is_mobile_id
      - is_mobile_id_eidas
    AggregationEnum:
      enum:
      - all_values
      - max_value
      - average_value
      - min_value
      - first_value
      - last_value
      - min_max_range
      - first_last_range
      type: string
      description: |-
        * `all_values` - All samples
        * `max_value` - Maximum value
        * `average_value` - Average value
        * `min_value` - Minimum value
        * `first_value` - First value
        * `last_value` - Last value
        * `min_max_range` - Min/max range
        * `first_last_range` - First/last range
    AuthenticationMethodEnum:
      enum:
      - SSO
      - 2FA
      - Password
      type: string
    BasicUnit:
      type: object
      description: |-
        Simple Unit Serializer with no tree/children/parent crawling capabilities
        To be extended for use in more specialized actions
      properties:
        group_id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          format: email
          title: Reference
          description: A unique email address (which could not exist) to reference
            this entity
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        display_name:
          type: string
          maxLength: 255
        default_address:
          allOf:
          - $ref: '#/components/schemas/Address'
          readOnly: true
        metadata:
          readOnly: true
        logo:
          type: string
          format: uri
          nullable: true
          description: For reading, it returns the URL. For writing you need to provide
            the image base64 encoded, like "data:image/png;base64,<BASE64_DATA>".
      required:
      - created_at
      - default_address
      - display_name
      - group_id
      - metadata
    BlankEnum:
      enum:
      - ''
    ClientAuthorizationMethodEnum:
      enum:
      - client-secret
      - client-jwt
      type: string
      description: |-
        * `client-secret` - Client Secret
        * `client-jwt` - Client Jwt
    ClientCredentialRetrievalMethodEnum:
      enum:
      - copy-paste
      - callback-url
      type: string
      description: |-
        * `copy-paste` - Copy Paste
        * `callback-url` - Callback Url
    ClientTypeEnum:
      enum:
      - on-premise
      - web-based-solution
      type: string
      description: |-
        * `on-premise` - On Premise
        * `web-based-solution` - Web Based Solution
    Company:
      type: object
      properties:
        display_name:
          type: string
          maxLength: 255
        group_id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          format: email
          title: Reference
          description: A unique email address (which could not exist) to reference
            this entity
          maxLength: 255
        default_address:
          allOf:
          - $ref: '#/components/schemas/Address'
          readOnly: true
        default_address_id:
          type: integer
          readOnly: true
        vat_number:
          type: string
          nullable: true
          maxLength: 30
        uid_number:
          type: string
          nullable: true
          maxLength: 30
        notary_number:
          type: string
          nullable: true
          maxLength: 30
        metadata:
          readOnly: true
        logo:
          type: string
          format: uri
          nullable: true
          description: For reading, it returns the URL. For writing you need to provide
            the image base64 encoded, like "data:image/png;base64,<BASE64_DATA>".
        structure:
          nullable: true
          description: |-
            Structure of the company

            * `nobox` - No box
            * `unregistered` - Unregistered
            * `personal` - Personal
            * `soleproprietorship` - Sole Proprietorship
            * `generalpartnership` - General Partnership
            * `limitedpartnership` - Limited Partnership
            * `limited` - Limited Company
            * `limitedliability` - Limited Liability Company
            * `cooperative` - Cooperative Company
            * `association` - Association
            * `foundation` - Foundation
            * `partnershiplimitedbyshares` - Partnership Limited by Shares
            * `bodycorporate` - Body Corporate
            * `publicinstitution` - Public Institution
            * `ownershipundividedshares` - Ownership In Undivided Shares
            * `institute` - Institute
            * `publiccorporationlimitedshares` - Public Corporation Limited by Shares
            * `publiccooperative` - Public Cooperative
            * `other` - Other
          oneOf:
          - $ref: '#/components/schemas/StructureEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        verification_state:
          allOf:
          - $ref: '#/components/schemas/VerificationStateEnum'
          description: Get the current validation status
          readOnly: true
        verification_process_status:
          allOf:
          - $ref: '#/components/schemas/VerificationProcessStatusEnum'
          description: Get the current validation status
          readOnly: true
        default_invoice_template:
          type: integer
          nullable: true
        parent_company_id:
          type: string
          format: uuid
          nullable: true
          readOnly: true
        reseller:
          type: string
          readOnly: true
      required:
      - created_at
      - default_address
      - default_address_id
      - display_name
      - group_id
      - metadata
      - name
      - parent_company_id
      - reseller
      - verification_process_status
      - verification_state
    CompanyAccounting:
      type: object
      properties:
        has_open_invoices:
          type: boolean
          readOnly: true
          description: Does the organization have invoices that are not paid?
        has_resolvable_invoices:
          type: boolean
          readOnly: true
          description: Does the organization have invoices that are waiting for a
            user action to be resolved?
        has_overused_subscriptions:
          type: boolean
          readOnly: true
        has_overused_box_users:
          type: boolean
          readOnly: true
      required:
      - has_open_invoices
      - has_overused_box_users
      - has_overused_subscriptions
      - has_resolvable_invoices
    CompanyBranding:
      type: object
      description: Company branding Serializer
      properties:
        email_branding_logo:
          type: string
          format: uri
          nullable: true
          description: Used in all custom branded emails.
        email_branding_color:
          type: string
          nullable: true
          description: Used in all custom branded emails.
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          maxLength: 25
    CompanyChildrenPost:
      type: object
      properties:
        child_id:
          type: string
          format: uuid
      required:
      - child_id
    CompanyPartnership:
      type: object
      properties:
        partnership_identity_uuid:
          type: string
          format: uuid
        person_identity_uuid:
          type: string
          format: uuid
      required:
      - partnership_identity_uuid
      - person_identity_uuid
    CompanyRoles:
      type: object
      properties:
        group_id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          format: email
          title: Reference
          description: A unique email address (which could not exist) to reference
            this entity
          maxLength: 255
        display_name:
          type: string
          maxLength: 255
        default_address:
          allOf:
          - $ref: '#/components/schemas/Address'
          readOnly: true
        metadata:
          readOnly: true
        logo:
          type: string
          format: uri
          nullable: true
          description: For reading, it returns the URL. For writing you need to provide
            the image base64 encoded, like "data:image/png;base64,<BASE64_DATA>".
        roles:
          type: array
          items:
            type: string
          readOnly: true
        verification_state:
          allOf:
          - $ref: '#/components/schemas/VerificationStateEnum'
          description: Get the current validation status
          readOnly: true
        verification_process_status:
          allOf:
          - $ref: '#/components/schemas/VerificationProcessStatusEnum'
          description: Get the current validation status
          readOnly: true
        structure:
          nullable: true
          description: |-
            Structure of the company

            * `nobox` - No box
            * `unregistered` - Unregistered
            * `personal` - Personal
            * `soleproprietorship` - Sole Proprietorship
            * `generalpartnership` - General Partnership
            * `limitedpartnership` - Limited Partnership
            * `limited` - Limited Company
            * `limitedliability` - Limited Liability Company
            * `cooperative` - Cooperative Company
            * `association` - Association
            * `foundation` - Foundation
            * `partnershiplimitedbyshares` - Partnership Limited by Shares
            * `bodycorporate` - Body Corporate
            * `publicinstitution` - Public Institution
            * `ownershipundividedshares` - Ownership In Undivided Shares
            * `institute` - Institute
            * `publiccorporationlimitedshares` - Public Corporation Limited by Shares
            * `publiccooperative` - Public Cooperative
            * `other` - Other
          oneOf:
          - $ref: '#/components/schemas/StructureEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
      required:
      - default_address
      - display_name
      - group_id
      - metadata
      - name
      - roles
      - verification_process_status
      - verification_state
    CompanySubject:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        display_name:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
          maxLength: 254
        subject_type:
          allOf:
          - $ref: '#/components/schemas/SubjectTypeEnum'
          readOnly: true
          description: |-
            The type of the subject

            * `user` - User
            * `service_user` - Service user
      required:
      - display_name
      - email
      - id
      - subject_type
    CompanyTree:
      type: object
      description: |-
        Company Serializer that will display all linked units recursively
        In addition, will add the permissions of the user ID passed in serializer context (if there is one)
      properties:
        display_name:
          type: string
          maxLength: 255
        group_id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          format: email
          title: Reference
          description: A unique email address (which could not exist) to reference
            this entity
          maxLength: 255
        default_address:
          $ref: '#/components/schemas/Address'
        units:
          type: array
          items:
            $ref: '#/components/schemas/UnitTree'
          readOnly: true
        vat_number:
          type: string
          nullable: true
          maxLength: 30
        uid_number:
          type: string
          nullable: true
          maxLength: 30
        notary_number:
          type: string
          nullable: true
          maxLength: 30
        user_company_roles:
          type: array
          items:
            type: string
          readOnly: true
          deprecated: true
        user_roles:
          type: array
          items:
            $ref: '#/components/schemas/MemberPermissionRole'
          readOnly: true
          description: Get the roles of the current user. This only display the main
            roles.
        user_rights:
          type: string
          readOnly: true
          description: Get the rights of the current user.
        metadata: {}
        logo:
          type: string
          format: uri
          nullable: true
          description: For reading, it returns the URL. For writing you need to provide
            the image base64 encoded, like "data:image/png;base64,<BASE64_DATA>".
        structure:
          nullable: true
          description: |-
            Structure of the company

            * `nobox` - No box
            * `unregistered` - Unregistered
            * `personal` - Personal
            * `soleproprietorship` - Sole Proprietorship
            * `generalpartnership` - General Partnership
            * `limitedpartnership` - Limited Partnership
            * `limited` - Limited Company
            * `limitedliability` - Limited Liability Company
            * `cooperative` - Cooperative Company
            * `association` - Association
            * `foundation` - Foundation
            * `partnershiplimitedbyshares` - Partnership Limited by Shares
            * `bodycorporate` - Body Corporate
            * `publicinstitution` - Public Institution
            * `ownershipundividedshares` - Ownership In Undivided Shares
            * `institute` - Institute
            * `publiccorporationlimitedshares` - Public Corporation Limited by Shares
            * `publiccooperative` - Public Cooperative
            * `other` - Other
          oneOf:
          - $ref: '#/components/schemas/StructureEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        verification_state:
          allOf:
          - $ref: '#/components/schemas/VerificationStateEnum'
          description: Get the current validation status
          readOnly: true
        verification_process_status:
          allOf:
          - $ref: '#/components/schemas/VerificationProcessStatusEnum'
          description: Get the current validation status
          readOnly: true
      required:
      - created_at
      - default_address
      - display_name
      - group_id
      - name
      - units
      - user_company_roles
      - user_rights
      - user_roles
      - verification_process_status
      - verification_state
    CompanyYapeal:
      type: object
      properties:
        display_name:
          type: string
          maxLength: 255
        group_id:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          format: email
          title: Reference
          description: A unique email address (which could not exist) to reference
            this entity
          maxLength: 255
        default_address:
          allOf:
          - $ref: '#/components/schemas/Address'
          readOnly: true
        default_address_id:
          type: integer
          readOnly: true
        vat_number:
          type: string
          nullable: true
          maxLength: 30
        uid_number:
          type: string
          nullable: true
          maxLength: 30
        notary_number:
          type: string
          nullable: true
          maxLength: 30
        metadata:
          readOnly: true
        logo:
          type: string
          format: uri
          nullable: true
          description: For reading, it returns the URL. For writing you need to provide
            the image base64 encoded, like "data:image/png;base64,<BASE64_DATA>".
        structure:
          nullable: true
          description: |-
            Structure of the company

            * `nobox` - No box
            * `unregistered` - Unregistered
            * `personal` - Personal
            * `soleproprietorship` - Sole Proprietorship
            * `generalpartnership` - General Partnership
            * `limitedpartnership` - Limited Partnership
            * `limited` - Limited Company
            * `limitedliability` - Limited Liability Company
            * `cooperative` - Cooperative Company
            * `association` - Association
            * `foundation` - Foundation
            * `partnershiplimitedbyshares` - Partnership Limited by Shares
            * `bodycorporate` - Body Corporate
            * `publicinstitution` - Public Institution
            * `ownershipundividedshares` - Ownership In Undivided Shares
            * `institute` - Institute
            * `publiccorporationlimitedshares` - Public Corporation Limited by Shares
            * `publiccooperative` - Public Cooperative
            * `other` - Other
          oneOf:
          - $ref: '#/components/schemas/StructureEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        verification_state:
          allOf:
          - $ref: '#/components/schemas/VerificationStateEnum'
          description: Get the current validation status
          readOnly: true
        verification_process_status:
          allOf:
          - $ref: '#/components/schemas/VerificationProcessStatusEnum'
          description: Get the current validation status
          readOnly: true
        default_invoice_template:
          type: integer
          nullable: true
        parent_company_id:
          type: string
          format: uuid
          nullable: true
          readOnly: true
        reseller:
          type: string
          readOnly: true
        yapeal_iban:
          type: string
          readOnly: true
        yapeal_account_status:
          type: string
          readOnly: true
      required:
      - created_at
      - default_address
      - default_address_id
      - display_name
      - group_id
      - metadata
      - name
      - parent_company_id
      - reseller
      - verification_process_status
      - verification_state
      - yapeal_account_status
      - yapeal_iban
    ConfirmationLink:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        used_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          description: When the link was used to create a user account
        sent_count:
          type: integer
          readOnly: true
          description: Number of times that the e-mail has been sent
        expires_at:
          type: string
          format: date-time
          readOnly: true
        is_expired:
          type: boolean
          readOnly: true
        link:
          type: string
          description: Returns a link to a set URL with a key parameter equal to the
            confirmation link secret
          readOnly: true
        metadata: {}
      required:
      - created_at
      - email
      - expires_at
      - is_expired
      - link
      - sent_count
      - used_at
    CostDetail:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/CostDetailTypeEnum'
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        costs:
          type: string
          format: decimal
          pattern: ^-?\d{0,16}(?:\.\d{0,4})?$
        counter_feature:
          $ref: '#/components/schemas/UserFeature'
        counter_value:
          type: number
          format: double
        tariff:
          $ref: '#/components/schemas/Tariff'
        option:
          $ref: '#/components/schemas/PlanList'
        option_quantity:
          type: integer
        package:
          $ref: '#/components/schemas/Package'
        package_quantity:
          type: integer
      required:
      - costs
      - end
      - start
      - type
    CostDetailTypeEnum:
      enum:
      - ONE_OFF
      - RECURRING
      - VARIABLE
      - OPTION_ONE_OFF
      - OPTION_RECURRING
      - PACKAGE
      - VOUCHER
      type: string
      description: |-
        * `ONE_OFF` - ONE_OFF
        * `RECURRING` - RECURRING
        * `VARIABLE` - VARIABLE
        * `OPTION_ONE_OFF` - OPTION_ONE_OFF
        * `OPTION_RECURRING` - OPTION_RECURRING
        * `PACKAGE` - PACKAGE
        * `VOUCHER` - VOUCHER
    CostlessAlias:
      type: object
      properties:
        activated:
          type: boolean
          readOnly: true
        expiry:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        user:
          type: string
          readOnly: true
        comment:
          type: string
          readOnly: true
      required:
      - activated
      - comment
      - created_at
      - expiry
      - user
    CostlessAliasCreation:
      type: object
      properties:
        expiry:
          type: string
          description: When the costless payment method will expire. This field accepts
            various date and datetime representations.
        set_as_default:
          type: boolean
          description: If set as True, it will set the new costless payment method
            as default for the user.
        user:
          type: string
          description: Customizable field
          maxLength: 256
        comment:
          type: string
          description: Customizable field
          maxLength: 512
      required:
      - expiry
    CounterParameter:
      type: object
      properties:
        on_sum_value:
          type: boolean
          default: false
          title: Compare the values to the cummulative sum ? (not the instant value)
        event_duration:
          type: string
          nullable: true
          title: Duration of instant events for rate limitation
        bucket:
          type: string
          nullable: true
          title: Bucket size for instant values
        period:
          type: string
          nullable: true
          title: Period for sampling values
        period_aggregation:
          nullable: true
          title: Aggregation function used to summarize a period
          oneOf:
          - $ref: '#/components/schemas/PeriodAggregationEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        reset_counter:
          type: boolean
          default: false
          title: Should the cumulative sum be reset at the end of a subscription period?
      required:
      - bucket
      - event_duration
      - period
      - period_aggregation
    CountryEnum:
      enum:
      - CH
      - DE
      - FR
      - IT
      - AT
      - LI
      - AF
      - AX
      - AL
      - DZ
      - AS
      - AD
      - AO
      - AI
      - AQ
      - AG
      - AR
      - AM
      - AW
      - AU
      - AZ
      - BS
      - BH
      - BD
      - BB
      - BY
      - BE
      - BZ
      - BJ
      - BM
      - BT
      - BO
      - BQ
      - BA
      - BW
      - BV
      - BR
      - IO
      - BN
      - BG
      - BF
      - BI
      - CV
      - KH
      - CM
      - CA
      - KY
      - CF
      - TD
      - CL
      - CN
      - CX
      - CC
      - CO
      - KM
      - CG
      - CD
      - CK
      - CR
      - CI
      - HR
      - CU
      - CW
      - CY
      - CZ
      - DK
      - DJ
      - DM
      - DO
      - EC
      - EG
      - SV
      - GQ
      - ER
      - EE
      - SZ
      - ET
      - FK
      - FO
      - FJ
      - FI
      - GF
      - PF
      - TF
      - GA
      - GM
      - GE
      - GH
      - GI
      - GR
      - GL
      - GD
      - GP
      - GU
      - GT
      - GG
      - GN
      - GW
      - GY
      - HT
      - HM
      - VA
      - HN
      - HK
      - HU
      - IS
      - IN
      - ID
      - IR
      - IQ
      - IE
      - IM
      - IL
      - JM
      - JP
      - JE
      - JO
      - KZ
      - KE
      - KI
      - KW
      - KG
      - LA
      - LV
      - LB
      - LS
      - LR
      - LY
      - LT
      - LU
      - MO
      - MG
      - MW
      - MY
      - MV
      - ML
      - MT
      - MH
      - MQ
      - MR
      - MU
      - YT
      - MX
      - FM
      - MD
      - MC
      - MN
      - ME
      - MS
      - MA
      - MZ
      - MM
      - NA
      - NR
      - NP
      - NL
      - NC
      - NZ
      - NI
      - NE
      - NG
      - NU
      - NF
      - KP
      - MK
      - MP
      - 'NO'
      - OM
      - PK
      - PW
      - PS
      - PA
      - PG
      - PY
      - PE
      - PH
      - PN
      - PL
      - PT
      - PR
      - QA
      - RE
      - RO
      - RU
      - RW
      - BL
      - SH
      - KN
      - LC
      - MF
      - PM
      - VC
      - WS
      - SM
      - ST
      - SA
      - SN
      - RS
      - SC
      - SL
      - SG
      - SX
      - SK
      - SI
      - SB
      - SO
      - ZA
      - GS
      - KR
      - SS
      - ES
      - LK
      - SD
      - SR
      - SJ
      - SE
      - SY
      - TW
      - TJ
      - TZ
      - TH
      - TL
      - TG
      - TK
      - TO
      - TT
      - TN
      - TR
      - TM
      - TC
      - TV
      - UG
      - UA
      - AE
      - GB
      - UM
      - US
      - UY
      - UZ
      - VU
      - VE
      - VN
      - VG
      - VI
      - WF
      - EH
      - YE
      - ZM
      - ZW
      type: string
      description: |-
        * `CH` - Switzerland
        * `DE` - Germany
        * `FR` - France
        * `IT` - Italy
        * `AT` - Austria
        * `LI` - Liechtenstein
        * `AF` - Afghanistan
        * `AX` - Åland Islands
        * `AL` - Albania
        * `DZ` - Algeria
        * `AS` - American Samoa
        * `AD` - Andorra
        * `AO` - Angola
        * `AI` - Anguilla
        * `AQ` - Antarctica
        * `AG` - Antigua and Barbuda
        * `AR` - Argentina
        * `AM` - Armenia
        * `AW` - Aruba
        * `AU` - Australia
        * `AZ` - Azerbaijan
        * `BS` - Bahamas
        * `BH` - Bahrain
        * `BD` - Bangladesh
        * `BB` - Barbados
        * `BY` - Belarus
        * `BE` - Belgium
        * `BZ` - Belize
        * `BJ` - Benin
        * `BM` - Bermuda
        * `BT` - Bhutan
        * `BO` - Bolivia
        * `BQ` - Bonaire, Sint Eustatius and Saba
        * `BA` - Bosnia and Herzegovina
        * `BW` - Botswana
        * `BV` - Bouvet Island
        * `BR` - Brazil
        * `IO` - British Indian Ocean Territory
        * `BN` - Brunei
        * `BG` - Bulgaria
        * `BF` - Burkina Faso
        * `BI` - Burundi
        * `CV` - Cabo Verde
        * `KH` - Cambodia
        * `CM` - Cameroon
        * `CA` - Canada
        * `KY` - Cayman Islands
        * `CF` - Central African Republic
        * `TD` - Chad
        * `CL` - Chile
        * `CN` - China
        * `CX` - Christmas Island
        * `CC` - Cocos (Keeling) Islands
        * `CO` - Colombia
        * `KM` - Comoros
        * `CG` - Congo
        * `CD` - Congo (the Democratic Republic of the)
        * `CK` - Cook Islands
        * `CR` - Costa Rica
        * `CI` - Côte d'Ivoire
        * `HR` - Croatia
        * `CU` - Cuba
        * `CW` - Curaçao
        * `CY` - Cyprus
        * `CZ` - Czechia
        * `DK` - Denmark
        * `DJ` - Djibouti
        * `DM` - Dominica
        * `DO` - Dominican Republic
        * `EC` - Ecuador
        * `EG` - Egypt
        * `SV` - El Salvador
        * `GQ` - Equatorial Guinea
        * `ER` - Eritrea
        * `EE` - Estonia
        * `SZ` - Eswatini
        * `ET` - Ethiopia
        * `FK` - Falkland Islands (Malvinas)
        * `FO` - Faroe Islands
        * `FJ` - Fiji
        * `FI` - Finland
        * `GF` - French Guiana
        * `PF` - French Polynesia
        * `TF` - French Southern Territories
        * `GA` - Gabon
        * `GM` - Gambia
        * `GE` - Georgia
        * `GH` - Ghana
        * `GI` - Gibraltar
        * `GR` - Greece
        * `GL` - Greenland
        * `GD` - Grenada
        * `GP` - Guadeloupe
        * `GU` - Guam
        * `GT` - Guatemala
        * `GG` - Guernsey
        * `GN` - Guinea
        * `GW` - Guinea-Bissau
        * `GY` - Guyana
        * `HT` - Haiti
        * `HM` - Heard Island and McDonald Islands
        * `VA` - Holy See
        * `HN` - Honduras
        * `HK` - Hong Kong
        * `HU` - Hungary
        * `IS` - Iceland
        * `IN` - India
        * `ID` - Indonesia
        * `IR` - Iran
        * `IQ` - Iraq
        * `IE` - Ireland
        * `IM` - Isle of Man
        * `IL` - Israel
        * `JM` - Jamaica
        * `JP` - Japan
        * `JE` - Jersey
        * `JO` - Jordan
        * `KZ` - Kazakhstan
        * `KE` - Kenya
        * `KI` - Kiribati
        * `KW` - Kuwait
        * `KG` - Kyrgyzstan
        * `LA` - Laos
        * `LV` - Latvia
        * `LB` - Lebanon
        * `LS` - Lesotho
        * `LR` - Liberia
        * `LY` - Libya
        * `LT` - Lithuania
        * `LU` - Luxembourg
        * `MO` - Macao
        * `MG` - Madagascar
        * `MW` - Malawi
        * `MY` - Malaysia
        * `MV` - Maldives
        * `ML` - Mali
        * `MT` - Malta
        * `MH` - Marshall Islands
        * `MQ` - Martinique
        * `MR` - Mauritania
        * `MU` - Mauritius
        * `YT` - Mayotte
        * `MX` - Mexico
        * `FM` - Micronesia (Federated States of)
        * `MD` - Moldova
        * `MC` - Monaco
        * `MN` - Mongolia
        * `ME` - Montenegro
        * `MS` - Montserrat
        * `MA` - Morocco
        * `MZ` - Mozambique
        * `MM` - Myanmar
        * `NA` - Namibia
        * `NR` - Nauru
        * `NP` - Nepal
        * `NL` - Netherlands
        * `NC` - New Caledonia
        * `NZ` - New Zealand
        * `NI` - Nicaragua
        * `NE` - Niger
        * `NG` - Nigeria
        * `NU` - Niue
        * `NF` - Norfolk Island
        * `KP` - North Korea
        * `MK` - North Macedonia
        * `MP` - Northern Mariana Islands
        * `NO` - Norway
        * `OM` - Oman
        * `PK` - Pakistan
        * `PW` - Palau
        * `PS` - Palestine, State of
        * `PA` - Panama
        * `PG` - Papua New Guinea
        * `PY` - Paraguay
        * `PE` - Peru
        * `PH` - Philippines
        * `PN` - Pitcairn
        * `PL` - Poland
        * `PT` - Portugal
        * `PR` - Puerto Rico
        * `QA` - Qatar
        * `RE` - Réunion
        * `RO` - Romania
        * `RU` - Russia
        * `RW` - Rwanda
        * `BL` - Saint Barthélemy
        * `SH` - Saint Helena, Ascension and Tristan da Cunha
        * `KN` - Saint Kitts and Nevis
        * `LC` - Saint Lucia
        * `MF` - Saint Martin (French part)
        * `PM` - Saint Pierre and Miquelon
        * `VC` - Saint Vincent and the Grenadines
        * `WS` - Samoa
        * `SM` - San Marino
        * `ST` - Sao Tome and Principe
        * `SA` - Saudi Arabia
        * `SN` - Senegal
        * `RS` - Serbia
        * `SC` - Seychelles
        * `SL` - Sierra Leone
        * `SG` - Singapore
        * `SX` - Sint Maarten (Dutch part)
        * `SK` - Slovakia
        * `SI` - Slovenia
        * `SB` - Solomon Islands
        * `SO` - Somalia
        * `ZA` - South Africa
        * `GS` - South Georgia and the South Sandwich Islands
        * `KR` - South Korea
        * `SS` - South Sudan
        * `ES` - Spain
        * `LK` - Sri Lanka
        * `SD` - Sudan
        * `SR` - Suriname
        * `SJ` - Svalbard and Jan Mayen
        * `SE` - Sweden
        * `SY` - Syria
        * `TW` - Taiwan
        * `TJ` - Tajikistan
        * `TZ` - Tanzania
        * `TH` - Thailand
        * `TL` - Timor-Leste
        * `TG` - Togo
        * `TK` - Tokelau
        * `TO` - Tonga
        * `TT` - Trinidad and Tobago
        * `TN` - Tunisia
        * `TR` - Türkiye
        * `TM` - Turkmenistan
        * `TC` - Turks and Caicos Islands
        * `TV` - Tuvalu
        * `UG` - Uganda
        * `UA` - Ukraine
        * `AE` - United Arab Emirates
        * `GB` - United Kingdom
        * `UM` - United States Minor Outlying Islands
        * `US` - United States of America
        * `UY` - Uruguay
        * `UZ` - Uzbekistan
        * `VU` - Vanuatu
        * `VE` - Venezuela
        * `VN` - Vietnam
        * `VG` - Virgin Islands (British)
        * `VI` - Virgin Islands (U.S.)
        * `WF` - Wallis and Futuna
        * `EH` - Western Sahara
        * `YE` - Yemen
        * `ZM` - Zambia
        * `ZW` - Zimbabwe
    CurrencyEnum:
      enum:
      - CHF
      - EUR
      - USD
      type: string
      description: |-
        * `CHF` - Swiss Francs
        * `EUR` - Euros
        * `USD` - US Dollars
    CustomTariff:
      type: object
      properties:
        feature:
          type: string
          title: Codename
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,7}(?:\.\d{0,4})?$
      required:
      - feature
      - price
    CustomTariffsPlan:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        start:
          type: string
          format: date-time
          readOnly: true
          title: Start of validity of the option
        end:
          type: string
          format: date-time
          readOnly: true
          title: End of validity of the option
        name:
          type: string
          default: Custom Tariffs Plan
          maxLength: 255
        activation_date:
          type: string
          format: date
          writeOnly: true
        tariffs:
          type: array
          items:
            $ref: '#/components/schemas/CustomTariff'
        certificate_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,7}(?:\.\d{0,4})?$
      required:
      - end
      - id
      - start
      - tariffs
    CustomVoucher:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        unit_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,7}(?:\.\d{0,4})?$
          description: Base CHF amount per unit. Should be a negative number. It is
            the maximum applicable amount, that is, if you put in -100 CHF on a 9
            CHF invoice, it will apply "up to" 100 CHF discount, but never make the
            invoice negative. The given `unit_amount` is recurring for each period
            as long as the voucher is not expired.
        quantity:
          type: integer
          minimum: 1
          description: Quantity of this voucher. This is a theoretical maximum, for
            example, if you have 2 * 9 CHF vouchers on a 9CHF invoice, only 1 will
            be applied.
        start:
          type: string
          format: date-time
          title: Start of validity of the option
        end:
          type: string
          format: date-time
          title: End of validity of the option
        is_renewable:
          type: boolean
          readOnly: true
          title: Will the option be renewed next period?
        name:
          type: string
          description: 'Name of the generated invoice item. Ex.: "Special voucher".'
          maxLength: 255
        feature_filter:
          nullable: true
          description: |-
            If given, the custom voucher will only apply to costs related to this feature code.

            * `ADMIN_COMPANY_USER` - ADMIN_COMPANY_USER
            * `PARTNER_HOOP_CONSTITUTION` - PARTNER_HOOP_CONSTITUTION
            * `SIGN_HASH` - SIGN_HASH
            * `SIGN_SES` - SIGN_SES
            * `SIGN_QES` - SIGN_QES
            * `SIGN_OBSERVER` - SIGN_OBSERVER
            * `DBOX_BOX_ABAIMMO` - DBOX_BOX_ABAIMMO
            * `DEEPO_USER_DEFINED_KEYWORD` - DEEPO_USER_DEFINED_KEYWORD
            * `DEEPO_POSITIONS_RECOGNITION` - DEEPO_POSITIONS_RECOGNITION
            * `STORAGE` - STORAGE
            * `DEEPO_API` - DEEPO_API
            * `DEEPD_API` - DEEPD_API
            * `BEACONS_COUNT` - BEACONS_COUNT
            * `DEEPO_PAGES` - DEEPO_PAGES
            * `DBOX_SBOX` - DBOX_SBOX
            * `DBOX_STORAGE` - DBOX_STORAGE
            * `DBOX_SENDDOC` - DBOX_SENDDOC
            * `DEEPD_API_PLUSCODES` - DEEPD_API_PLUSCODES
            * `DEEPD_API_BUILDINGS` - DEEPD_API_BUILDINGS
            * `DEEPV_PUBLISH_TEAM` - DEEPV_PUBLISH_TEAM
            * `DEEPV_PUBLISH_ENTERPRISE` - DEEPV_PUBLISH_ENTERPRISE
            * `DBOX_BOX_PLUS` - DBOX_BOX_PLUS
            * `DBOX_BOX_SIMPLE` - DBOX_BOX_SIMPLE
            * `DBOX_BOX` - DBOX_BOX
            * `DBOX_DEEPODOC_ADVANCED` - DBOX_DEEPODOC_ADVANCED
            * `SIGN_ANY` - SIGN_ANY
            * `SIGN_SEAL` - SIGN_SEAL
            * `SIGN_AES` - SIGN_AES
            * `DEEPV_PUBLISH` - DEEPV_PUBLISH
            * `SIGN_DELEGATE` - SIGN_DELEGATE
            * `ABABAU_SCAN_DOC` - ABABAU_SCAN_DOC
            * `ABABAU_SCAN_PAGE` - ABABAU_SCAN_PAGE
            * `DBOX_BOX_ABASERVICE` - DBOX_BOX_ABASERVICE
            * `SIGN_APPEARANCE` - SIGN_APPEARANCE
            * `DEEPA` - DEEPA
            * `DBOX_BOX_PER_USE` - DBOX_BOX_PER_USE
            * `ABASERVICE_TICKET` - ABASERVICE_TICKET
            * `DEEPFLOW_FLOW` - DEEPFLOW_FLOW
            * `SIGN_VALIDATION` - SIGN_VALIDATION
            * `DBOX_BOX_NINJA` - DBOX_BOX_NINJA
            * `DBOX_DEEPODOC` - DBOX_DEEPODOC
            * `DBOX_DEEPODOC_FIXED` - DBOX_DEEPODOC_FIXED
            * `ADMIN_PAID_USER` - ADMIN_PAID_USER
            * `CERT_AES` - CERT_AES
            * `CERT_QES` - CERT_QES
            * `CERT_GOV` - CERT_GOV
            * `SEAL_AES` - SEAL_AES
            * `SEAL_QES` - SEAL_QES
            * `SEAL_GOV` - SEAL_GOV
          oneOf:
          - $ref: '#/components/schemas/FeatureFilterEnum'
          - $ref: '#/components/schemas/NullEnum'
        constraints:
          allOf:
          - $ref: '#/components/schemas/CustomVoucherConstraints'
          readOnly: true
          description: A JSON object which describe what and how the voucher is editable.
      required:
      - constraints
      - end
      - id
      - is_renewable
      - name
      - quantity
      - start
      - unit_amount
    CustomVoucherConstraints:
      type: object
      properties:
        start_editable:
          type: boolean
          description: True if the start date is editable.
        start_min:
          type: string
          format: date-time
          description: If the start date is editable, describe the minimum value it
            can have.
        start_max:
          type: string
          format: date-time
          description: If the start date is editable, describe the maximum value it
            can have.
        end_editable:
          type: boolean
          description: True if the end date is editable.
        end_min:
          type: string
          format: date-time
          description: If the end date is editable, describe the minimum value it
            can have.
        end_max:
          type: string
          format: date-time
          description: If the end date is editable, describe the maximum value it
            can have.
        quantity_editable:
          type: boolean
          description: Is the quantity editable
        unit_amount_editable:
          type: boolean
          description: Is the unit amount editable
        feature_filter_editable:
          type: boolean
          description: Is the feature filter editable
        editable:
          type: boolean
          description: Is this voucher editable in some way. True if any field is
            editable.
        deletable:
          type: boolean
          description: Is this voucher deletable.
      required:
      - deletable
      - editable
      - end_editable
      - end_max
      - end_min
      - feature_filter_editable
      - quantity_editable
      - start_editable
      - start_max
      - start_min
      - unit_amount_editable
    CustomerIDP:
      type: object
      description: |-
        Wraps ModelSerializer to log creations, updates, and retrievals.

        To log list retrievals as well, the extended Serializer inner Meta class should extend LoggingModelSerializer.Meta
        List retrievals do not take into account potential custom log kwargs.

        For detail and list retrievals, the expected log type suffixe is 'retrieved' and the corresponding log descriptor should be defined.

        This serializer needs to be used with a GenericViewSet.
      properties:
        created_at:
          type: string
          format: date-time
          readOnly: true
        openid_configuration_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        alias_uuid:
          type: string
          format: uuid
          readOnly: true
          description: Used in the created IDP on keycloak.
        client_id:
          type: string
          nullable: true
          maxLength: 100
        client_secret:
          type: string
          writeOnly: true
        idp_alias:
          type: string
          readOnly: true
        domain_verification:
          type: integer
        idp_broker_url:
          type: string
          readOnly: true
        is_enabled:
          type: boolean
          description: Is the SSO enabled. All of the fields should have been set.
            Useful to do 'incremental' setup.
        is_user_info_disabled:
          type: boolean
          description: Should the user info endpoint be disabled?
        pk:
          type: string
          readOnly: true
          title: Domain verification
      required:
      - alias_uuid
      - created_at
      - domain_verification
      - idp_alias
      - idp_broker_url
      - pk
    DeepATrial:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          readOnly: true
      required:
      - status
    DeepBoxCost:
      type: object
      properties:
        costdetail:
          $ref: '#/components/schemas/CostDetail'
        is_ratio:
          type: boolean
      required:
      - costdetail
    DeepIDNotify:
      type: object
      properties:
        email:
          type: string
          format: email
          writeOnly: true
          description: The recipient email. If the user is known by deepadmin, it
            will uses the user language, unless the `language` field is specified.
        language:
          type: string
          writeOnly: true
          description: Use this field to force a specific language.
        template_name:
          allOf:
          - $ref: '#/components/schemas/DeepIDNotifyTemplateNameEnum'
          writeOnly: true
          description: |-
            The email template name we want to use.

            * `pinCodeEmail` - pinCodeEmail
            * `monitoringAgentEmail` - monitoringAgentEmail
        parameters:
          writeOnly: true
          description: Parameters of the email (details, pin_code, etc.). Depends
            on the template used.
      required:
      - email
      - template_name
    DeepIDNotifyTemplateNameEnum:
      enum:
      - pinCodeEmail
      - monitoringAgentEmail
      type: string
      description: |-
        * `pinCodeEmail` - pinCodeEmail
        * `monitoringAgentEmail` - monitoringAgentEmail
    Discount:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        plan:
          type: integer
          description: The plan we want an option of. If `plan` is given, `plan_code`
            should not
        amount:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Number of occurence of this option
        start:
          type: string
          format: date-time
          title: Start of validity of the option
        end:
          type: string
          format: date-time
          title: End of validity of the option
        is_renewable:
          type: boolean
          readOnly: true
          title: Will the option be renewed next period?
        plan_code:
          type: string
          nullable: true
          title: Plan code
          description: The plan_code we want an option of. If `plan_code` is given,
            `plan` should not
      required:
      - amount
      - end
      - id
      - is_renewable
      - start
    DisplayPackage:
      type: object
      properties:
        code:
          type: string
          readOnly: true
          title: Package code
          description: the code is globally unique, not per version
        validity:
          allOf:
          - $ref: '#/components/schemas/ValidityEnum'
          readOnly: true
        translations:
          type: string
      required:
      - code
      - translations
      - validity
    DomainVerification:
      type: object
      properties:
        verified_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        domain_name:
          type: string
          pattern: ([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\.?)
          maxLength: 255
        verification_token:
          type: string
          readOnly: true
        verification_type:
          allOf:
          - $ref: '#/components/schemas/VerificationTypeEnum'
          readOnly: true
        groups:
          type: array
          items:
            type: string
            format: uuid
        id:
          type: integer
          readOnly: true
        customer_idp:
          type: integer
          readOnly: true
        auto_add_users:
          type: boolean
      required:
      - customer_idp
      - domain_name
      - id
      - verification_token
      - verification_type
      - verified_at
    DomainVerificationNested:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        domain_name:
          type: string
          readOnly: true
        company:
          $ref: '#/components/schemas/OrganizationNested'
      required:
      - company
      - domain_name
      - id
    DomainVerificationSSOGroupMapping:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        domain_verification:
          allOf:
          - $ref: '#/components/schemas/DomainVerificationNested'
          readOnly: true
        company:
          allOf:
          - $ref: '#/components/schemas/OrganizationNested'
          readOnly: true
        idp_group:
          type: string
          readOnly: true
          description: The group name as defined on the IDP (e.g. Entra ID).
        role:
          allOf:
          - $ref: '#/components/schemas/RoleNested'
          readOnly: true
      required:
      - company
      - domain_verification
      - id
      - idp_group
      - role
    DomainVerificationSSOGroupMappingCreate:
      type: object
      description: |-
        Wraps ModelSerializer to log creations, updates, and retrievals.

        To log list retrievals as well, the extended Serializer inner Meta class should extend LoggingModelSerializer.Meta
        List retrievals do not take into account potential custom log kwargs.

        For detail and list retrievals, the expected log type suffixe is 'retrieved' and the corresponding log descriptor should be defined.

        This serializer needs to be used with a GenericViewSet.
      properties:
        id:
          type: integer
          readOnly: true
        domain_verification:
          type: integer
          description: Domain verification for which this group mapping applies.
        company:
          type: string
          format: uuid
          description: The company to which the mapping grants access.
        idp_group:
          type: string
          description: The group name as defined on the IDP (e.g. Entra ID).
          maxLength: 255
        role:
          type: integer
          description: The role to grant to the user.
      required:
      - company
      - domain_verification
      - id
      - idp_group
      - role
    DomainVerificationUserRepresentation:
      type: object
      description: User detail for verification
      properties:
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        first_name:
          type: string
          readOnly: true
        last_name:
          type: string
          readOnly: true
        id:
          type: string
          format: uuid
        permissions_within_company:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
          readOnly: true
      required:
      - email
      - first_name
      - id
      - last_name
      - permissions_within_company
    DunningProcess:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        subscription:
          type: integer
          readOnly: true
        invoice:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        resolved_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Process was resolved at
        is_resolved:
          type: boolean
          readOnly: true
        logs:
          readOnly: true
          description: List of objects that are log entries for when a dunning step
            happened.
        metadata:
          readOnly: true
          description: Any extra data that needs to be stored about this dunning process.
        total_number_of_steps:
          type: integer
          description: |-
            Returns the total number of steps for this DunningProcess.
            Note that here, we consider that a "step" can have multiple "actions".
            For example, if there exists a step/action "NOTIFY_INVOICES_NEW" and
            a step/action "WEBHOOK_NOTIFY" on the same ordinal day, it is considered to be a unique step.
          readOnly: true
        number_of_steps_executed:
          type: integer
          description: |-
            Can be used to show a ratio, in combination with `total_number_of_steps`.
            Note that here, we consider that a "step" can have multiple "actions".
            For example, if there exists a step/action "NOTIFY_INVOICES_NEW" and
            a step/action "WEBHOOK_NOTIFY" on the same ordinal day, it is considered to be a unique step.
            We only count steps that have actually been executed, which is ensured by checking the logs.
          readOnly: true
        invoice_abapayment_status:
          $ref: '#/components/schemas/InvoiceAbapaymentStatusEnum'
      required:
      - created_at
      - id
      - invoice
      - invoice_abapayment_status
      - is_resolved
      - logs
      - metadata
      - number_of_steps_executed
      - resolved_at
      - subscription
      - total_number_of_steps
    EULA:
      type: object
      properties:
        filename:
          type: string
          description: |-
            Generates a filename for the EULA
            Note: we presume that only PDFs will be served, so the pdf extension is fixed, but this could be changed in the future.
          readOnly: true
        identifier:
          type: string
          format: uuid
        active:
          type: boolean
        valid_from:
          type: string
          format: date-time
        language:
          type: string
          maxLength: 5
      required:
      - filename
    EmailCheck:
      type: object
      properties:
        email:
          type: string
          format: email
          writeOnly: true
          description: E-mail to be checked
        key:
          type: string
          writeOnly: true
          description: Signature for authentication
        is_valid:
          type: boolean
          readOnly: true
          default: false
      required:
      - email
      - is_valid
      - key
    EmailEventWebhook:
      type: object
      properties:
        meta: {}
        content: {}
      required:
      - meta
    EmailNotificationLog:
      type: object
      description: A simple log that an email of type X was sent to address Y at time
        T
      properties:
        email_to:
          type: string
          format: email
          readOnly: true
          description: Whom the email is addressed to
        email_type:
          type: string
          readOnly: true
          description: Full notification code (i.e. <app-name>:<notification_tag>)
            of the email sent
        sent_at:
          type: string
          format: date-time
          readOnly: true
          description: Date time of when the email was sent
        delivery_status:
          type: string
          readOnly: true
      required:
      - delivery_status
      - email_to
      - email_type
      - sent_at
    EmailWebhook:
      type: object
      properties:
        meta: {}
        notifications:
          type: array
          items:
            $ref: '#/components/schemas/EmailEventWebhook'
      required:
      - meta
      - notifications
    ExtraLargePlan:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,7}(?:\.\d{0,4})?$
          description: The monthly cost of the plan.
        start:
          type: string
          format: date-time
          readOnly: true
          title: Start of validity of the option
        end:
          type: string
          format: date-time
          readOnly: true
          title: End of validity of the option
        name:
          type: string
          default: Extra Large
          maxLength: 255
        activation_date:
          type: string
          format: date
          writeOnly: true
        max_unique_users:
          type: integer
          description: Specified by the caller of the API. No logic with this number,
            more as an info on what was agreed on. Stored in metadata.
        email:
          type: string
          description: An email specified by the caller of the API, no logic with
            this field. Stored in metadata.
        comment:
          type: string
          description: A comment specified by the caller of the API, no logic with
            this field. Stored in metadata.
      required:
      - activation_date
      - end
      - id
      - price
      - start
    Feature:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        id:
          type: integer
          readOnly: true
        translations:
          type: string
        providers:
          type: array
          items:
            $ref: '#/components/schemas/Service'
        code:
          type: string
          title: Codename
          maxLength: 32
        value_type: {}
        invoice_section:
          type: string
          description: Section of invoice for variable costs
          maxLength: 256
        notifies_when_exceeding_threshold:
          type: boolean
        triggers_packages_autoadd:
          type: boolean
          title: Shortcut to figure out which feature might need to check package
            consumption
      required:
      - code
      - id
      - providers
      - translations
      - value_type
    FeatureFilterEnum:
      enum:
      - ADMIN_COMPANY_USER
      - PARTNER_HOOP_CONSTITUTION
      - SIGN_HASH
      - SIGN_SES
      - SIGN_QES
      - SIGN_OBSERVER
      - DBOX_BOX_ABAIMMO
      - DEEPO_USER_DEFINED_KEYWORD
      - DEEPO_POSITIONS_RECOGNITION
      - STORAGE
      - DEEPO_API
      - DEEPD_API
      - BEACONS_COUNT
      - DEEPO_PAGES
      - DBOX_SBOX
      - DBOX_STORAGE
      - DBOX_SENDDOC
      - DEEPD_API_PLUSCODES
      - DEEPD_API_BUILDINGS
      - DEEPV_PUBLISH_TEAM
      - DEEPV_PUBLISH_ENTERPRISE
      - DBOX_BOX_PLUS
      - DBOX_BOX_SIMPLE
      - DBOX_BOX
      - DBOX_DEEPODOC_ADVANCED
      - SIGN_ANY
      - SIGN_SEAL
      - SIGN_AES
      - DEEPV_PUBLISH
      - SIGN_DELEGATE
      - ABABAU_SCAN_DOC
      - ABABAU_SCAN_PAGE
      - DBOX_BOX_ABASERVICE
      - SIGN_APPEARANCE
      - DEEPA
      - DBOX_BOX_PER_USE
      - ABASERVICE_TICKET
      - DEEPFLOW_FLOW
      - SIGN_VALIDATION
      - DBOX_BOX_NINJA
      - DBOX_DEEPODOC
      - DBOX_DEEPODOC_FIXED
      - ADMIN_PAID_USER
      - CERT_AES
      - CERT_QES
      - CERT_GOV
      - SEAL_AES
      - SEAL_QES
      - SEAL_GOV
      type: string
      description: |-
        * `ADMIN_COMPANY_USER` - ADMIN_COMPANY_USER
        * `PARTNER_HOOP_CONSTITUTION` - PARTNER_HOOP_CONSTITUTION
        * `SIGN_HASH` - SIGN_HASH
        * `SIGN_SES` - SIGN_SES
        * `SIGN_QES` - SIGN_QES
        * `SIGN_OBSERVER` - SIGN_OBSERVER
        * `DBOX_BOX_ABAIMMO` - DBOX_BOX_ABAIMMO
        * `DEEPO_USER_DEFINED_KEYWORD` - DEEPO_USER_DEFINED_KEYWORD
        * `DEEPO_POSITIONS_RECOGNITION` - DEEPO_POSITIONS_RECOGNITION
        * `STORAGE` - STORAGE
        * `DEEPO_API` - DEEPO_API
        * `DEEPD_API` - DEEPD_API
        * `BEACONS_COUNT` - BEACONS_COUNT
        * `DEEPO_PAGES` - DEEPO_PAGES
        * `DBOX_SBOX` - DBOX_SBOX
        * `DBOX_STORAGE` - DBOX_STORAGE
        * `DBOX_SENDDOC` - DBOX_SENDDOC
        * `DEEPD_API_PLUSCODES` - DEEPD_API_PLUSCODES
        * `DEEPD_API_BUILDINGS` - DEEPD_API_BUILDINGS
        * `DEEPV_PUBLISH_TEAM` - DEEPV_PUBLISH_TEAM
        * `DEEPV_PUBLISH_ENTERPRISE` - DEEPV_PUBLISH_ENTERPRISE
        * `DBOX_BOX_PLUS` - DBOX_BOX_PLUS
        * `DBOX_BOX_SIMPLE` - DBOX_BOX_SIMPLE
        * `DBOX_BOX` - DBOX_BOX
        * `DBOX_DEEPODOC_ADVANCED` - DBOX_DEEPODOC_ADVANCED
        * `SIGN_ANY` - SIGN_ANY
        * `SIGN_SEAL` - SIGN_SEAL
        * `SIGN_AES` - SIGN_AES
        * `DEEPV_PUBLISH` - DEEPV_PUBLISH
        * `SIGN_DELEGATE` - SIGN_DELEGATE
        * `ABABAU_SCAN_DOC` - ABABAU_SCAN_DOC
        * `ABABAU_SCAN_PAGE` - ABABAU_SCAN_PAGE
        * `DBOX_BOX_ABASERVICE` - DBOX_BOX_ABASERVICE
        * `SIGN_APPEARANCE` - SIGN_APPEARANCE
        * `DEEPA` - DEEPA
        * `DBOX_BOX_PER_USE` - DBOX_BOX_PER_USE
        * `ABASERVICE_TICKET` - ABASERVICE_TICKET
        * `DEEPFLOW_FLOW` - DEEPFLOW_FLOW
        * `SIGN_VALIDATION` - SIGN_VALIDATION
        * `DBOX_BOX_NINJA` - DBOX_BOX_NINJA
        * `DBOX_DEEPODOC` - DBOX_DEEPODOC
        * `DBOX_DEEPODOC_FIXED` - DBOX_DEEPODOC_FIXED
        * `ADMIN_PAID_USER` - ADMIN_PAID_USER
        * `CERT_AES` - CERT_AES
        * `CERT_QES` - CERT_QES
        * `CERT_GOV` - CERT_GOV
        * `SEAL_AES` - SEAL_AES
        * `SEAL_QES` - SEAL_QES
        * `SEAL_GOV` - SEAL_GOV
    File:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        safety_status:
          allOf:
          - $ref: '#/components/schemas/SafetyStatusEnum'
          readOnly: true
        metadata:
          type: object
          additionalProperties: {}
          readOnly: true
      required:
      - created_at
      - metadata
      - safety_status
      - uuid
    GrantInvoicingCheck:
      type: object
      properties:
        can_be_granted:
          type: boolean
        denial_reason:
          type: string
      required:
      - can_be_granted
      - denial_reason
    Group:
      type: object
      properties:
        group_id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          format: email
          title: Reference
          description: A unique email address (which could not exist) to reference
            this entity
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        display_name:
          type: string
          maxLength: 255
        description:
          type: string
          maxLength: 1024
        metadata: {}
      required:
      - created_at
      - display_name
      - group_id
    GroupRoles:
      type: object
      properties:
        group_id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          format: email
          title: Reference
          description: A unique email address (which could not exist) to reference
            this entity
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        display_name:
          type: string
          maxLength: 255
        description:
          type: string
          maxLength: 1024
        metadata: {}
        roles:
          type: array
          items:
            type: string
          readOnly: true
      required:
      - created_at
      - display_name
      - group_id
      - roles
    InShareInvitation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        expiry_date:
          type: string
          format: date-time
        current_uses:
          type: integer
          readOnly: true
        creator_id:
          type: integer
          nullable: true
          readOnly: true
        is_valid:
          type: boolean
          readOnly: true
        shareId:
          type: string
          format: uuid
        shareBoxId:
          type: string
          format: uuid
        shareBoxName:
          type: string
        shareOrganizationId:
          type: string
          format: uuid
      required:
      - creator_id
      - current_uses
      - id
      - is_valid
      - shareBoxId
      - shareBoxName
      - shareId
      - shareOrganizationId
    InShareInvitationAccept:
      type: object
      properties:
        organizationId:
          type: string
          format: uuid
      required:
      - organizationId
    Info:
      type: object
      properties:
        name: {}
        personalData: {}
      required:
      - name
      - personalData
    Invitation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        category:
          allOf:
          - $ref: '#/components/schemas/InvitationCategoryEnum'
          description: |-
            The type of invitation. "Email" should be used to invite a user based on its email (an email will be sent). "Domain" creates an invitation that can be used by any user whose the domain part of the email matches.

            * `ANONYMOUS` - Anonymous
            * `DOMAIN` - Domain
            * `EMAIL` - E-Mail
        recipient:
          type: string
          nullable: true
          description: 'Recipient should correspond to the chosen category. Eg.: "john@mycompany.ch"
            for email, "mycompany.ch" for domain. Can be left blank for anonymous.'
          maxLength: 255
        expiry_date:
          type: string
          format: date-time
        max_uses:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: Maximum usage
        current_uses:
          type: integer
          readOnly: true
        creator_id:
          type: integer
          nullable: true
          readOnly: true
        is_valid:
          type: boolean
          readOnly: true
        link:
          type: string
          readOnly: true
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/InvitationPermission'
          readOnly: true
        shadow_user:
          type: string
          format: uuid
          readOnly: true
      required:
      - category
      - creator_id
      - current_uses
      - id
      - is_valid
      - link
      - permissions
      - shadow_user
    InvitationCategoryEnum:
      enum:
      - ANONYMOUS
      - DOMAIN
      - EMAIL
      type: string
      description: |-
        * `ANONYMOUS` - Anonymous
        * `DOMAIN` - Domain
        * `EMAIL` - E-Mail
    InvitationPermission:
      type: object
      properties:
        group_id:
          type: string
          format: uuid
        role:
          type: integer
          nullable: true
      required:
      - group_id
    InvoiceAbapaymentStatusEnum:
      enum:
      - unpaid
      - pending
      - settled
      - wrong
      - transmitted
      - overpaid
      - cancelled
      - waived
      type: string
      description: |-
        * `unpaid` - Waiting for payment
        * `pending` - Pending
        * `settled` - Settled
        * `wrong` - Something went wrong
        * `transmitted` - Payment transmitted
        * `overpaid` - Overpaid
        * `cancelled` - Cancelled
        * `waived` - Waived
    InvoiceFullWithUserPaymentUrl:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          readOnly: true
        company:
          type: string
          format: uuid
          nullable: true
          title: Company/Unit
        user:
          type: integer
          nullable: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
        issued:
          type: string
          format: date-time
          readOnly: true
          title: Issued time
        currency:
          allOf:
          - $ref: '#/components/schemas/CurrencyEnum'
          readOnly: true
        is_paid:
          type: boolean
          readOnly: true
          description: Indicate if the invoice has been paid
        desc_name:
          type: string
          readOnly: true
          title: Description name
          description: A computed invoice title which can be display to the end user
        payment_date_desc:
          type: string
          readOnly: true
        amount_desc:
          type: string
          readOnly: true
          title: Amount description
          description: A displayable amount which includes the currency
        period_start:
          type: string
          format: date-time
          nullable: true
          readOnly: true
          title: Period start date
          description: The period start datetime in ISO-8601 format
        period_end:
          type: string
          format: date-time
          nullable: true
          readOnly: true
          title: Period end date
          description: The period end datetime in ISO-8601 format
        period_desc:
          type: string
          readOnly: true
          title: Period description
          description: A displayable value which indicates the period this invoice
            covers
        abapayment_id:
          type: integer
          readOnly: true
          nullable: true
          title: ID for AbaPayment API
        abapayment_status:
          readOnly: true
          nullable: true
          title: Status from last update
          oneOf:
          - $ref: '#/components/schemas/AbapaymentStatusEnum'
          - $ref: '#/components/schemas/NullEnum'
        pdf:
          type: string
          format: uri
          readOnly: true
          title: PDF link
          description: A link to redirect the end user to, to show this invoice pdf.
        vat_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        discount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceItem'
          title: Invoice items
          description: The detailed items included in this invoice
        payment_method:
          type: integer
          readOnly: true
          title: Saved payment method
        alias:
          type: integer
          readOnly: true
          title: Saved payment method (deprecated, use 'payment_method` instead)
          deprecated: true
        error_code:
          type: string
          readOnly: true
          title: Error code additionnal info
          description: Only present if the status of the invoice is `wrong`.
        user_payment_url:
          type: string
          nullable: true
          readOnly: true
          description: A URL to redirect the end user to, to pay the invoice manually.
      required:
      - abapayment_id
      - abapayment_status
      - alias
      - amount
      - amount_desc
      - currency
      - desc_name
      - error_code
      - id
      - is_paid
      - issued
      - items
      - payment_date_desc
      - payment_method
      - pdf
      - period_desc
      - period_end
      - period_start
      - title
      - user_payment_url
    InvoiceItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        subscription:
          type: integer
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        category:
          $ref: '#/components/schemas/InvoiceItemCategoryEnum'
        details:
          nullable: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        vat_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
        expiry:
          type: string
          format: date-time
        issued:
          type: string
          format: date-time
          readOnly: true
          title: Issued time
      required:
      - amount
      - end
      - expiry
      - id
      - issued
      - start
      - subscription
    InvoiceItemCategoryEnum:
      enum:
      - other
      - one_off
      - recurring
      - variable
      - option_one_off
      - option_recurring
      - package
      type: string
      description: |-
        * `other` - Other
        * `one_off` - One-off
        * `recurring` - Recurring
        * `variable` - Variable
        * `option_one_off` - Option one-off
        * `option_recurring` - Option recurring
        * `package` - Package
    InvoiceList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          readOnly: true
        company:
          type: string
          format: uuid
          nullable: true
          title: Company/Unit
        user:
          type: integer
          nullable: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
        issued:
          type: string
          format: date-time
          readOnly: true
          title: Issued time
        currency:
          allOf:
          - $ref: '#/components/schemas/CurrencyEnum'
          readOnly: true
        is_paid:
          type: boolean
          readOnly: true
          description: Indicate if the invoice has been paid
        desc_name:
          type: string
          readOnly: true
          title: Description name
          description: A computed invoice title which can be display to the end user
        payment_date_desc:
          type: string
          readOnly: true
        amount_desc:
          type: string
          readOnly: true
          title: Amount description
          description: A displayable amount which includes the currency
        period_start:
          type: string
          format: date-time
          nullable: true
          readOnly: true
          title: Period start date
          description: The period start datetime in ISO-8601 format
        period_end:
          type: string
          format: date-time
          nullable: true
          readOnly: true
          title: Period end date
          description: The period end datetime in ISO-8601 format
        period_desc:
          type: string
          readOnly: true
          title: Period description
          description: A displayable value which indicates the period this invoice
            covers
        abapayment_id:
          type: integer
          readOnly: true
          nullable: true
          title: ID for AbaPayment API
        abapayment_status:
          readOnly: true
          nullable: true
          title: Status from last update
          oneOf:
          - $ref: '#/components/schemas/AbapaymentStatusEnum'
          - $ref: '#/components/schemas/NullEnum'
        pdf:
          type: string
          format: uri
          readOnly: true
          title: PDF link
          description: A link to redirect the end user to, to show this invoice pdf.
      required:
      - abapayment_id
      - abapayment_status
      - amount
      - amount_desc
      - currency
      - desc_name
      - id
      - is_paid
      - issued
      - payment_date_desc
      - pdf
      - period_desc
      - period_end
      - period_start
      - title
    InvoicePay:
      type: object
      description: Used to pay an unpaid invoice.
      properties:
        has_been_paid:
          type: boolean
          readOnly: true
          description: Has the invoice been correctly paid
      required:
      - has_been_paid
    InvoiceTemplate:
      type: object
      properties:
        address:
          type: integer
          nullable: true
          description: Needed for automated payment
        title:
          type: string
          maxLength: 255
        subscriptions:
          type: array
          items:
            type: integer
        pk:
          type: integer
          readOnly: true
          title: ID
        payment_method:
          type: integer
          nullable: true
          description: Needed for automated payment
      required:
      - pk
    InvoiceUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        company:
          type: string
          format: uuid
          readOnly: true
          nullable: true
          title: Company/Unit
        user:
          type: integer
          readOnly: true
          nullable: true
        address:
          type: integer
          nullable: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
        discount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
          nullable: true
        issued:
          type: string
          format: date-time
          readOnly: true
          title: Issued time
        currency:
          allOf:
          - $ref: '#/components/schemas/CurrencyEnum'
          readOnly: true
        is_paid:
          type: boolean
          description: |-
            Returns True if the invoice is considered to be paid.

            By default, returns True if the payment has been locked for the customer (pending status),
            but can be configured to check for completed transactions (settled status) using the `settled` input parameter

            By default, returns an up-to-date reading using an API call to the AbaPayment Gateway. But by switching
            `cached` input parameter, the function will check using the invoice model `abapayment_status` field.
            (who could be not up-to-date). Exception : If the last status check from API is older than a day,
            we make a call to the API anyway to have relatively-fresh data.

            The "refresh_if_status" variable can specify a "abapayment_status" to check and if this status is the one in the cache
            we try the refresh from the API.

            TODO: Add a time-based component to the `refresh_if_status` to add for example a `we re-check errors status if they are not too old`
          readOnly: true
        title:
          type: string
          readOnly: true
        payment_method:
          type: integer
          nullable: true
          title: Saved payment method
      required:
      - amount
      - company
      - currency
      - discount
      - id
      - is_paid
      - issued
      - title
      - user
    InvoiceWebhook:
      type: object
      properties:
        id:
          type: integer
      required:
      - id
    InvoicingAlias:
      type: object
      properties:
        activated:
          type: boolean
          readOnly: true
        usable:
          type: boolean
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        user:
          type: string
          readOnly: true
        comment:
          type: string
          readOnly: true
      required:
      - activated
      - comment
      - created_at
      - usable
      - user
    InvoicingAliasCreation:
      type: object
      properties:
        set_as_default:
          type: boolean
          description: If set as True, it will set the new invoicing payment method
            as default for the user.
        user:
          type: string
          description: Customizable field
          maxLength: 256
        comment:
          type: string
          description: Customizable field
          maxLength: 512
    LangEnum:
      enum:
      - de
      - fr
      - en
      - it
      type: string
      description: |-
        * `de` - German
        * `fr` - French
        * `en` - English
        * `it` - Italian
    LinkExtraLargePlan:
      type: object
      properties:
        child_id:
          type: string
          format: uuid
      required:
      - child_id
    ManualValidation:
      type: object
      properties:
        level:
          $ref: '#/components/schemas/ManualValidationLevelEnum'
        audit:
          type: array
          items:
            type: object
            additionalProperties: {}
          readOnly: true
          description: Additional info about how this manual validation was created
      required:
      - audit
    ManualValidationLevelEnum:
      enum:
      - none
      - weak
      - strong
      type: string
      description: |-
        * `none` - None
        * `weak` - Weak
        * `strong` - Strong
    Member:
      type: object
      properties:
        email:
          type: string
          format: email
        send_mail:
          type: boolean
          writeOnly: true
          default: false
        user:
          allOf:
          - $ref: '#/components/schemas/UserCreate'
          writeOnly: true
      required:
      - email
    MemberInfoDetails:
      type: object
      description: Member information. Most of these values come from Keycloak. See
        https://www.keycloak.org/docs-api/15.0/rest-api/index.html for more info.
      properties:
        id:
          type: string
          readOnly: true
        firstName:
          type: string
          readOnly: true
        lastName:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
        fullName:
          type: string
          readOnly: true
        enabled:
          type: boolean
          readOnly: true
        is_service_user:
          type: boolean
          readOnly: true
        displayName:
          type: string
          readOnly: true
        roles:
          type: array
          items:
            $ref: '#/components/schemas/MemberPermissionRole'
          readOnly: true
          description: The list of the roles the user has currently
        rolesHistory:
          type: array
          items:
            $ref: '#/components/schemas/MemberPermissionLog'
          readOnly: true
          description: A history of the roles the user had in the past.
        username:
          type: string
          readOnly: true
        createdTimestamp:
          type: integer
          readOnly: true
        attributes:
          readOnly: true
        totp:
          type: boolean
          readOnly: true
        emailVerified:
          type: boolean
          readOnly: true
        disableableCredentialTypes:
          type: array
          items: {}
          readOnly: true
        requiredActions:
          type: array
          items: {}
          readOnly: true
        federatedIdentities:
          type: array
          items: {}
          readOnly: true
        notBefore:
          type: integer
          readOnly: true
        access:
          readOnly: true
      required:
      - access
      - attributes
      - createdTimestamp
      - disableableCredentialTypes
      - displayName
      - email
      - emailVerified
      - enabled
      - federatedIdentities
      - firstName
      - fullName
      - id
      - is_service_user
      - lastName
      - notBefore
      - requiredActions
      - roles
      - rolesHistory
      - totp
      - username
    MemberInfoListSerializerServiceUser:
      type: object
      description: MemberInfoListSerializer with a call to KC role-mapping API to
        know what are the audience that created the service user.
      properties:
        id:
          type: string
          readOnly: true
        firstName:
          type: string
          readOnly: true
        lastName:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
        fullName:
          type: string
          readOnly: true
        enabled:
          type: boolean
          readOnly: true
        is_service_user:
          type: boolean
          readOnly: true
        displayName:
          type: string
          readOnly: true
        roles:
          type: array
          items:
            $ref: '#/components/schemas/MemberPermissionRole'
          readOnly: true
          description: The list of the roles the user has currently
        rolesHistory:
          type: array
          items:
            $ref: '#/components/schemas/MemberPermissionLog'
          readOnly: true
          description: A history of the roles the user had in the past.
        audiences:
          type: array
          items:
            type: string
          readOnly: true
      required:
      - audiences
      - displayName
      - email
      - enabled
      - firstName
      - fullName
      - id
      - is_service_user
      - lastName
      - roles
      - rolesHistory
    MemberPermissionLog:
      type: object
      properties:
        action_date:
          type: string
          format: date-time
          readOnly: true
          description: The date the action has been done.
        role:
          $ref: '#/components/schemas/MemberPermissionRole'
        action_tag:
          allOf:
          - $ref: '#/components/schemas/ActionTagEnum'
          readOnly: true
          description: |-
            The action the user has done

            * `create` - Create
            * `update` - Update
            * `delete` - Delete
        action_user_uid:
          type: string
          readOnly: true
          nullable: true
          description: The user uuid who has done this action, if any.
        action_user_email:
          type: string
          readOnly: true
          nullable: true
          description: The user email who has done this action, if any
      required:
      - action_date
      - action_tag
      - action_user_email
      - action_user_uid
      - role
    MemberPermissionRole:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        role_code:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
      required:
      - id
      - name
      - role_code
    MobileIdCheck:
      type: object
      properties:
        phone:
          type: string
      required:
      - phone
    MobileIdCheckOutput:
      type: object
      properties:
        valid:
          type: boolean
          description: Is the phone number valid (Switzerland)
        valid_eidas:
          type: boolean
          description: Is the phone number valid (Europe)
      required:
      - valid
      - valid_eidas
    MobilePaymentSubscriberAttributeUUIDItem:
      type: object
      properties:
        value:
          type: string
          format: uuid
      required:
      - value
    MobilePaymentWebhookEvent:
      type: object
      properties:
        app_id:
          type: string
          maxLength: 256
        app_user_id:
          type: string
          format: uuid
        product_id:
          $ref: '#/components/schemas/ProductIdEnum'
        transaction_id:
          type: string
          maxLength: 128
        subscriber_attributes:
          $ref: '#/components/schemas/MobilePaymentWebhookSubscriberAttributes'
      required:
      - app_id
      - app_user_id
      - product_id
      - subscriber_attributes
      - transaction_id
    MobilePaymentWebhookSubscriberAttributes:
      type: object
      properties:
        company_id:
          $ref: '#/components/schemas/MobilePaymentSubscriberAttributeUUIDItem'
      required:
      - company_id
    News:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        category:
          allOf:
          - $ref: '#/components/schemas/NewsCategoryEnum'
          description: |-
            Differentiates different types of notifications

            * `news` - News
        translations:
          type: string
        image_en:
          type: string
          format: uri
          nullable: true
          description: English version of the image.
        image_de:
          type: string
          format: uri
          nullable: true
          description: German version of the image.
        image_fr:
          type: string
          format: uri
          nullable: true
          description: French version of the image.
        image_it:
          type: string
          format: uri
          nullable: true
          description: Italian version of the image.
        display_starts_at:
          type: string
          format: date-time
          description: Earliest date to start displaying a news to the users
        display_ends_at:
          type: string
          format: date-time
          nullable: true
          description: Latest date to display a news to the users
      required:
      - category
      - created_at
      - display_starts_at
      - translations
      - uuid
    NewsCategoryEnum:
      enum:
      - news
      type: string
      description: '* `news` - News'
    Notify:
      type: object
      properties:
        email:
          type: string
          format: email
          writeOnly: true
          description: The recipient email. Either this field or the user_id field
            is required. If both are set only the email field will be used.
        user_id:
          type: string
          format: uuid
          writeOnly: true
          description: The recipient user id. Either this field or the email field
            is required. If both are set only the email field will be used.
        language:
          type: string
          writeOnly: true
          description: Use this field to define the default email language.
        sender_alias:
          type: string
          writeOnly: true
          description: If given, the sender name will be `<sender_alias> via DeepSign`
        sender_company_id:
          type: string
          format: uuid
          writeOnly: true
          description: UID of the company that the email originates from, will be
            used to determine if the sender is verified or not.
        template_name:
          allOf:
          - $ref: '#/components/schemas/NotifyTemplateNameEnum'
          writeOnly: true
          description: |-
            The email template name we want to use.

            * `document_completed` - document_completed
            * `document_withdrawn` - document_withdrawn
            * `document_delete_reminder` - document_delete_reminder
            * `signee_invite` - signee_invite
            * `signee_reject` - signee_reject
            * `signee_reminder` - signee_reminder
            * `observer_invite` - observer_invite
            * `forward_signature_request` - forward_signature_request
            * `add_signer` - add_signer
            * `new_file_added` - new_file_added
        parameters:
          writeOnly: true
          default: {}
          description: Parameters of the email (filename, link, etc.). Depends on
            the template used.
      required:
      - sender_company_id
      - template_name
    NotifyTemplateNameEnum:
      enum:
      - document_completed
      - document_withdrawn
      - document_delete_reminder
      - signee_invite
      - signee_reject
      - signee_reminder
      - observer_invite
      - forward_signature_request
      - add_signer
      - new_file_added
      type: string
      description: |-
        * `document_completed` - document_completed
        * `document_withdrawn` - document_withdrawn
        * `document_delete_reminder` - document_delete_reminder
        * `signee_invite` - signee_invite
        * `signee_reject` - signee_reject
        * `signee_reminder` - signee_reminder
        * `observer_invite` - observer_invite
        * `forward_signature_request` - forward_signature_request
        * `add_signer` - add_signer
        * `new_file_added` - new_file_added
    NullEnum:
      enum:
      - null
    OnboardPOSTResponse:
      type: object
      properties:
        url:
          type: string
          format: uri
          description: URL to redirect the user
        key:
          type: string
          description: Onboarding key
        has_deepbox:
          type: boolean
          description: If the email is associated with a user that has a DeepBox account
        user_exists:
          type: boolean
          description: If the email is associated with a already existing user
      required:
      - has_deepbox
      - key
      - url
      - user_exists
    OnefileSupport:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/TypeF35Enum'
          description: |-
            The type of the user request

            * `support` - Support
            * `feedback` - Feedback
            * `sales` - Sales
        text:
          type: string
          description: The text content of the request
        contact:
          type: string
          description: An optional additionnal contact field given by the user. Can
            be anything (phone number, email, etc.).
          maxLength: 512
        files:
          type: string
          description: Optional files (e.g. screenshot) which shows the issue
      required:
      - text
      - type
    OrganizationNested:
      type: object
      properties:
        group_id:
          type: string
          format: uuid
          readOnly: true
        display_name:
          type: string
          readOnly: true
      required:
      - display_name
      - group_id
    Package:
      type: object
      properties:
        code:
          type: string
          title: Package code
          description: the code is globally unique, not per version
          maxLength: 24
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,7}(?:\.\d{0,4})?$
          title: Package one-off price
        validity:
          $ref: '#/components/schemas/ValidityEnum'
        metadata: {}
        invoice_section:
          type: string
          description: Section of invoice for package costs
          maxLength: 256
        plan_version:
          type: integer
          title: Version
      required:
      - code
      - plan_version
      - price
    PaginatedAddressList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Address'
    PaginatedAddressSwissIDList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AddressSwissID'
    PaginatedCompanySubjectList:
      type: object
      properties:
        count:
          type: integer
          readOnly: true
        next:
          type: string
          format: uri
          readOnly: true
          nullable: true
        previous:
          type: string
          format: uri
          readOnly: true
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/CompanySubject'
      required:
      - count
      - next
      - previous
      - results
    PaginatedCompanyTreeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CompanyTree'
    PaginatedCompanyYapealList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CompanyYapeal'
    PaginatedCustomVoucherList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CustomVoucher'
    PaginatedDiscountList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Discount'
    PaginatedDunningProcessList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/DunningProcess'
    PaginatedEmailNotificationLogList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/EmailNotificationLog'
    PaginatedFeatureList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Feature'
    PaginatedGroupList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Group'
    PaginatedInShareInvitationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/InShareInvitation'
    PaginatedInvitationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Invitation'
    PaginatedInvoiceListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceList'
    PaginatedInvoiceTemplateList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceTemplate'
    PaginatedPartnerAccessBaseResponseList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PartnerAccessBaseResponse'
    PaginatedPartnerAccessUsersList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PartnerAccessUsers'
    PaginatedPaymentMethodList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PaymentMethod'
    PaginatedPermissionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
    PaginatedPlanList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Plan'
    PaginatedPlanListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PlanList'
    PaginatedServiceList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Service'
    PaginatedShareInvitationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ShareInvitation'
    PaginatedSubscriptionOptionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionOption'
    PaginatedSubscriptionPackageList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionPackage'
    PaginatedSubscriptionPackageViewList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionPackageView'
    PaginatedUnitList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Unit'
    PaginatedUserFullList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserFull'
    PaginatedUserList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PaginatedUserValidationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserValidation'
    PartnerAccessBaseResponse:
      type: object
      properties:
        client_id:
          type: string
        client_uuid:
          type: string
          format: uuid
        client_name:
          type: string
          default: ''
        client_enabled:
          type: boolean
        client_authentication_method:
          type: string
        client_secret:
          type: string
        client_callback_urls:
          type: array
          items:
            type: string
        standard_flow_enabled:
          type: boolean
        implicit_flow_enabled:
          type: boolean
        direct_access_grant_enabled:
          type: boolean
        service_accounts_enabled:
          type: boolean
        public_client:
          type: boolean
        protocol:
          type: string
        attributes: {}
        authentication_flow_binding_overrides: {}
        default_client_scopes:
          type: array
          items:
            type: string
        optional_client_scopes:
          type: array
          items:
            type: string
        access: {}
      required:
      - access
      - attributes
      - authentication_flow_binding_overrides
      - client_authentication_method
      - client_enabled
      - client_id
      - client_uuid
      - default_client_scopes
      - direct_access_grant_enabled
      - implicit_flow_enabled
      - optional_client_scopes
      - protocol
      - public_client
      - service_accounts_enabled
      - standard_flow_enabled
    PartnerAccessCreate:
      type: object
      properties:
        customer_name:
          type: string
          description: Internal usage to identify which customer uses this partner
            access.
          maxLength: 200
        client_id:
          type: string
          maxLength: 200
          pattern: partner-.*(-dev|-int|-demo|$)
        client_type:
          $ref: '#/components/schemas/ClientTypeEnum'
        client_authorization_method:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ClientAuthorizationMethodEnum'
          - $ref: '#/components/schemas/NullEnum'
        client_credential_retrieval_method:
          $ref: '#/components/schemas/ClientCredentialRetrievalMethodEnum'
        client_callback_urls:
          type: array
          items:
            type: string
            format: uri
            maxLength: 200
        client_jwks_url:
          type: string
          format: uri
          maxLength: 200
        client_jwks:
          description: Public JSON Web Key Set (JWKS) of the client.
        create_service_users_as_admins:
          type: boolean
        client_facing_name:
          type: string
          description: Name of the partner access that will be shown to the end customer,
            for example on the page granting access to the service user.
          maxLength: 255
      required:
      - client_authorization_method
      - client_credential_retrieval_method
      - client_id
      - client_type
      - create_service_users_as_admins
      - customer_name
    PartnerAccessDetailResponse:
      type: object
      properties:
        client_id:
          type: string
        client_uuid:
          type: string
          format: uuid
        client_name:
          type: string
          default: ''
        client_enabled:
          type: boolean
        client_authentication_method:
          type: string
        client_secret:
          type: string
        client_callback_urls:
          type: array
          items:
            type: string
        standard_flow_enabled:
          type: boolean
        implicit_flow_enabled:
          type: boolean
        direct_access_grant_enabled:
          type: boolean
        service_accounts_enabled:
          type: boolean
        public_client:
          type: boolean
        protocol:
          type: string
        attributes: {}
        authentication_flow_binding_overrides: {}
        default_client_scopes:
          type: array
          items:
            type: string
        optional_client_scopes:
          type: array
          items:
            type: string
        access: {}
        allow_third_party_redirect_response:
          type: boolean
        allow_third_party_copy_paste_response:
          type: boolean
        create_service_users_as_admins:
          type: boolean
        allowed_companies:
          type: array
          items:
            type: string
        parametrisation_anomalies: {}
      required:
      - access
      - attributes
      - authentication_flow_binding_overrides
      - client_authentication_method
      - client_enabled
      - client_id
      - client_uuid
      - default_client_scopes
      - direct_access_grant_enabled
      - implicit_flow_enabled
      - optional_client_scopes
      - parametrisation_anomalies
      - protocol
      - public_client
      - service_accounts_enabled
      - standard_flow_enabled
    PartnerAccessResponse:
      type: object
      properties:
        client_id:
          type: string
        client_uuid:
          type: string
          format: uuid
        client_name:
          type: string
          default: ''
        client_enabled:
          type: boolean
        client_authentication_method:
          type: string
        client_secret:
          type: string
        client_callback_urls:
          type: array
          items:
            type: string
        standard_flow_enabled:
          type: boolean
        implicit_flow_enabled:
          type: boolean
        direct_access_grant_enabled:
          type: boolean
        service_accounts_enabled:
          type: boolean
        public_client:
          type: boolean
        protocol:
          type: string
        attributes: {}
        authentication_flow_binding_overrides: {}
        default_client_scopes:
          type: array
          items:
            type: string
        optional_client_scopes:
          type: array
          items:
            type: string
        access: {}
        allow_third_party_redirect_response:
          type: boolean
        allow_third_party_copy_paste_response:
          type: boolean
        create_service_users_as_admins:
          type: boolean
        allowed_companies:
          type: array
          items:
            type: string
      required:
      - access
      - attributes
      - authentication_flow_binding_overrides
      - client_authentication_method
      - client_enabled
      - client_id
      - client_uuid
      - default_client_scopes
      - direct_access_grant_enabled
      - implicit_flow_enabled
      - optional_client_scopes
      - protocol
      - public_client
      - service_accounts_enabled
      - standard_flow_enabled
    PartnerAccessScope:
      type: object
      properties:
        client_scopes:
          type: array
          items:
            type: string
    PartnerAccessUsers:
      type: object
      properties:
        user_id:
          type: string
          format: uuid
        user_role:
          type: string
        group_id:
          type: string
          format: uuid
        company_name:
          type: string
      required:
      - company_name
      - group_id
      - user_id
      - user_role
    Partnership:
      type: object
      properties:
        partnershipIdentityUID:
          type: string
          format: uuid
        iban:
          type: string
        organizationName:
          type: string
        delegateIdentityUID:
          type: string
          format: uuid
          nullable: true
      required:
      - iban
      - organizationName
      - partnershipIdentityUID
    PartnershipRegister:
      type: object
      properties:
        amid:
          type: string
      required:
      - amid
    PatchedAddress:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        street:
          type: string
          nullable: true
          title: Street and number
          maxLength: 256
        street2:
          type: string
          nullable: true
          title: Additional address info (p.o. box, building,...)
          maxLength: 256
        city:
          type: string
          nullable: true
          maxLength: 100
        zipcode:
          type: string
          nullable: true
          title: Postal code
          maxLength: 32
        country:
          $ref: '#/components/schemas/CountryEnum'
        plus_code:
          type: string
          nullable: true
          maxLength: 12
        phone:
          type: string
          nullable: true
          title: Phone number
          maxLength: 128
        email:
          type: string
          format: email
          nullable: true
          title: E-Mail
          maxLength: 254
        preferred_language:
          type: string
          title: Language used in emails
          description: 2, 3 or 5 characters as specified in ISO 639
          maxLength: 5
        address_display:
          type: string
          readOnly: true
        is_user_main:
          type: boolean
          title: Is the main address?
    PatchedCompanyBranding:
      type: object
      description: Company branding Serializer
      properties:
        email_branding_logo:
          type: string
          format: uri
          nullable: true
          description: Used in all custom branded emails.
        email_branding_color:
          type: string
          nullable: true
          description: Used in all custom branded emails.
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          maxLength: 25
    PatchedCustomVoucher:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        unit_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,7}(?:\.\d{0,4})?$
          description: Base CHF amount per unit. Should be a negative number. It is
            the maximum applicable amount, that is, if you put in -100 CHF on a 9
            CHF invoice, it will apply "up to" 100 CHF discount, but never make the
            invoice negative. The given `unit_amount` is recurring for each period
            as long as the voucher is not expired.
        quantity:
          type: integer
          minimum: 1
          description: Quantity of this voucher. This is a theoretical maximum, for
            example, if you have 2 * 9 CHF vouchers on a 9CHF invoice, only 1 will
            be applied.
        start:
          type: string
          format: date-time
          title: Start of validity of the option
        end:
          type: string
          format: date-time
          title: End of validity of the option
        is_renewable:
          type: boolean
          readOnly: true
          title: Will the option be renewed next period?
        name:
          type: string
          description: 'Name of the generated invoice item. Ex.: "Special voucher".'
          maxLength: 255
        feature_filter:
          nullable: true
          description: |-
            If given, the custom voucher will only apply to costs related to this feature code.

            * `ADMIN_COMPANY_USER` - ADMIN_COMPANY_USER
            * `PARTNER_HOOP_CONSTITUTION` - PARTNER_HOOP_CONSTITUTION
            * `SIGN_HASH` - SIGN_HASH
            * `SIGN_SES` - SIGN_SES
            * `SIGN_QES` - SIGN_QES
            * `SIGN_OBSERVER` - SIGN_OBSERVER
            * `DBOX_BOX_ABAIMMO` - DBOX_BOX_ABAIMMO
            * `DEEPO_USER_DEFINED_KEYWORD` - DEEPO_USER_DEFINED_KEYWORD
            * `DEEPO_POSITIONS_RECOGNITION` - DEEPO_POSITIONS_RECOGNITION
            * `STORAGE` - STORAGE
            * `DEEPO_API` - DEEPO_API
            * `DEEPD_API` - DEEPD_API
            * `BEACONS_COUNT` - BEACONS_COUNT
            * `DEEPO_PAGES` - DEEPO_PAGES
            * `DBOX_SBOX` - DBOX_SBOX
            * `DBOX_STORAGE` - DBOX_STORAGE
            * `DBOX_SENDDOC` - DBOX_SENDDOC
            * `DEEPD_API_PLUSCODES` - DEEPD_API_PLUSCODES
            * `DEEPD_API_BUILDINGS` - DEEPD_API_BUILDINGS
            * `DEEPV_PUBLISH_TEAM` - DEEPV_PUBLISH_TEAM
            * `DEEPV_PUBLISH_ENTERPRISE` - DEEPV_PUBLISH_ENTERPRISE
            * `DBOX_BOX_PLUS` - DBOX_BOX_PLUS
            * `DBOX_BOX_SIMPLE` - DBOX_BOX_SIMPLE
            * `DBOX_BOX` - DBOX_BOX
            * `DBOX_DEEPODOC_ADVANCED` - DBOX_DEEPODOC_ADVANCED
            * `SIGN_ANY` - SIGN_ANY
            * `SIGN_SEAL` - SIGN_SEAL
            * `SIGN_AES` - SIGN_AES
            * `DEEPV_PUBLISH` - DEEPV_PUBLISH
            * `SIGN_DELEGATE` - SIGN_DELEGATE
            * `ABABAU_SCAN_DOC` - ABABAU_SCAN_DOC
            * `ABABAU_SCAN_PAGE` - ABABAU_SCAN_PAGE
            * `DBOX_BOX_ABASERVICE` - DBOX_BOX_ABASERVICE
            * `SIGN_APPEARANCE` - SIGN_APPEARANCE
            * `DEEPA` - DEEPA
            * `DBOX_BOX_PER_USE` - DBOX_BOX_PER_USE
            * `ABASERVICE_TICKET` - ABASERVICE_TICKET
            * `DEEPFLOW_FLOW` - DEEPFLOW_FLOW
            * `SIGN_VALIDATION` - SIGN_VALIDATION
            * `DBOX_BOX_NINJA` - DBOX_BOX_NINJA
            * `DBOX_DEEPODOC` - DBOX_DEEPODOC
            * `DBOX_DEEPODOC_FIXED` - DBOX_DEEPODOC_FIXED
            * `ADMIN_PAID_USER` - ADMIN_PAID_USER
            * `CERT_AES` - CERT_AES
            * `CERT_QES` - CERT_QES
            * `CERT_GOV` - CERT_GOV
            * `SEAL_AES` - SEAL_AES
            * `SEAL_QES` - SEAL_QES
            * `SEAL_GOV` - SEAL_GOV
          oneOf:
          - $ref: '#/components/schemas/FeatureFilterEnum'
          - $ref: '#/components/schemas/NullEnum'
        constraints:
          allOf:
          - $ref: '#/components/schemas/CustomVoucherConstraints'
          readOnly: true
          description: A JSON object which describe what and how the voucher is editable.
    PatchedCustomerIDP:
      type: object
      description: |-
        Wraps ModelSerializer to log creations, updates, and retrievals.

        To log list retrievals as well, the extended Serializer inner Meta class should extend LoggingModelSerializer.Meta
        List retrievals do not take into account potential custom log kwargs.

        For detail and list retrievals, the expected log type suffixe is 'retrieved' and the corresponding log descriptor should be defined.

        This serializer needs to be used with a GenericViewSet.
      properties:
        created_at:
          type: string
          format: date-time
          readOnly: true
        openid_configuration_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        alias_uuid:
          type: string
          format: uuid
          readOnly: true
          description: Used in the created IDP on keycloak.
        client_id:
          type: string
          nullable: true
          maxLength: 100
        client_secret:
          type: string
          writeOnly: true
        idp_alias:
          type: string
          readOnly: true
        domain_verification:
          type: integer
        idp_broker_url:
          type: string
          readOnly: true
        is_enabled:
          type: boolean
          description: Is the SSO enabled. All of the fields should have been set.
            Useful to do 'incremental' setup.
        is_user_info_disabled:
          type: boolean
          description: Should the user info endpoint be disabled?
        pk:
          type: string
          readOnly: true
          title: Domain verification
    PatchedDomainVerification:
      type: object
      properties:
        verified_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        domain_name:
          type: string
          pattern: ([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\.?)
          maxLength: 255
        verification_token:
          type: string
          readOnly: true
        verification_type:
          allOf:
          - $ref: '#/components/schemas/VerificationTypeEnum'
          readOnly: true
        groups:
          type: array
          items:
            type: string
            format: uuid
        id:
          type: integer
          readOnly: true
        customer_idp:
          type: integer
          readOnly: true
        auto_add_users:
          type: boolean
    PatchedDomainVerificationSSOGroupMappingCreate:
      type: object
      description: |-
        Wraps ModelSerializer to log creations, updates, and retrievals.

        To log list retrievals as well, the extended Serializer inner Meta class should extend LoggingModelSerializer.Meta
        List retrievals do not take into account potential custom log kwargs.

        For detail and list retrievals, the expected log type suffixe is 'retrieved' and the corresponding log descriptor should be defined.

        This serializer needs to be used with a GenericViewSet.
      properties:
        id:
          type: integer
          readOnly: true
        domain_verification:
          type: integer
          description: Domain verification for which this group mapping applies.
        company:
          type: string
          format: uuid
          description: The company to which the mapping grants access.
        idp_group:
          type: string
          description: The group name as defined on the IDP (e.g. Entra ID).
          maxLength: 255
        role:
          type: integer
          description: The role to grant to the user.
    PatchedGroup:
      type: object
      properties:
        group_id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          format: email
          title: Reference
          description: A unique email address (which could not exist) to reference
            this entity
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        display_name:
          type: string
          maxLength: 255
        description:
          type: string
          maxLength: 1024
        metadata: {}
    PatchedInvoiceTemplate:
      type: object
      properties:
        address:
          type: integer
          nullable: true
          description: Needed for automated payment
        title:
          type: string
          maxLength: 255
        subscriptions:
          type: array
          items:
            type: integer
        pk:
          type: integer
          readOnly: true
          title: ID
        payment_method:
          type: integer
          nullable: true
          description: Needed for automated payment
    PatchedInvoiceUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        company:
          type: string
          format: uuid
          readOnly: true
          nullable: true
          title: Company/Unit
        user:
          type: integer
          readOnly: true
          nullable: true
        address:
          type: integer
          nullable: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
        discount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          readOnly: true
          nullable: true
        issued:
          type: string
          format: date-time
          readOnly: true
          title: Issued time
        currency:
          allOf:
          - $ref: '#/components/schemas/CurrencyEnum'
          readOnly: true
        is_paid:
          type: boolean
          description: |-
            Returns True if the invoice is considered to be paid.

            By default, returns True if the payment has been locked for the customer (pending status),
            but can be configured to check for completed transactions (settled status) using the `settled` input parameter

            By default, returns an up-to-date reading using an API call to the AbaPayment Gateway. But by switching
            `cached` input parameter, the function will check using the invoice model `abapayment_status` field.
            (who could be not up-to-date). Exception : If the last status check from API is older than a day,
            we make a call to the API anyway to have relatively-fresh data.

            The "refresh_if_status" variable can specify a "abapayment_status" to check and if this status is the one in the cache
            we try the refresh from the API.

            TODO: Add a time-based component to the `refresh_if_status` to add for example a `we re-check errors status if they are not too old`
          readOnly: true
        title:
          type: string
          readOnly: true
        payment_method:
          type: integer
          nullable: true
          title: Saved payment method
    PatchedNews:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        category:
          allOf:
          - $ref: '#/components/schemas/NewsCategoryEnum'
          description: |-
            Differentiates different types of notifications

            * `news` - News
        translations:
          type: string
        image_en:
          type: string
          format: uri
          nullable: true
          description: English version of the image.
        image_de:
          type: string
          format: uri
          nullable: true
          description: German version of the image.
        image_fr:
          type: string
          format: uri
          nullable: true
          description: French version of the image.
        image_it:
          type: string
          format: uri
          nullable: true
          description: Italian version of the image.
        display_starts_at:
          type: string
          format: date-time
          description: Earliest date to start displaying a news to the users
        display_ends_at:
          type: string
          format: date-time
          nullable: true
          description: Latest date to display a news to the users
    PatchedPartnerAccessUpdate:
      type: object
      properties:
        client_scopes:
          type: array
          items:
            type: string
    PatchedSSOUserProfileLimited:
      type: object
      properties:
        preferences:
          description: User parameters
    PatchedSubscriptionOption:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        plan:
          type: integer
          description: Only used on creation, never on update. If `plan` is given,
            `plan_code` should not
        amount:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Number of occurence of this option
        start:
          type: string
          format: date-time
          title: Start of validity of the option
        end:
          type: string
          format: date-time
          readOnly: true
          title: End of validity of the option
        is_renewable:
          type: boolean
          readOnly: true
          title: Will the option be renewed next period?
        plan_code:
          type: string
          nullable: true
          title: Plan code
          description: Only used on creation, never on update. If `plan_code` is given,
            `plan` should not
    PaymentMethod:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        masked_cc:
          type: string
          readOnly: true
          nullable: true
          title: Masked credit card
        expiration_month:
          type: integer
          readOnly: true
          nullable: true
          title: Month of expiration
        expiration_year:
          type: integer
          readOnly: true
          nullable: true
          title: Year of expiration
        card_provider:
          type: string
          readOnly: true
          nullable: true
          title: Payment method's card provider
        pk:
          type: integer
          readOnly: true
          title: ID
        type:
          $ref: '#/components/schemas/PaymentMethodTypeEnum'
        display:
          type: string
          description: Display text for alias
        currency:
          allOf:
          - $ref: '#/components/schemas/CurrencyEnum'
          readOnly: true
      required:
      - card_provider
      - created_at
      - currency
      - display
      - expiration_month
      - expiration_year
      - masked_cc
      - pk
      - type
    PaymentMethodRegistration:
      type: object
      properties:
        registration_url:
          type: string
          format: uri
          readOnly: true
          description: A URL to which a user should be redirected to register a new
            payment method.
        return_redirect_url:
          type: string
          format: uri
          writeOnly: true
          description: Redirect URL used once user gets back from Payment Gateway/PSP.
          maxLength: 512
      required:
      - registration_url
      - return_redirect_url
    PaymentMethodTypeEnum:
      enum:
      - card
      - yapeal
      - abaninja
      - free
      - unknown
      type: string
      description: |-
        * `card` - Credit card
        * `yapeal` - YAPEAL
        * `abaninja` - AbaNinja invoices
        * `free` - Costless
        * `unknown` - Unknown
    PeriodAggregationEnum:
      enum:
      - max_value
      - p95_value
      - average_value
      - median_value
      - p5_value
      - min_value
      type: string
      description: |-
        * `max_value` - Maximum
        * `p95_value` - 95th percentile
        * `average_value` - Average
        * `median_value` - Median
        * `p5_value` - 5th percentile
        * `min_value` - Minimum
    PeriodEnum:
      enum:
      - year
      - 6month
      - 4month
      - 3month
      - 2month
      - month
      - 2week
      - week
      - 3day
      - 2day
      - day
      type: string
      description: |-
        * `year` - year
        * `6month` - six months
        * `4month` - four months
        * `3month` - three months
        * `2month` - two months
        * `month` - month
        * `2week` - two weeks
        * `week` - week
        * `3day` - three days
        * `2day` - two days
        * `day` - day
    Permission:
      type: object
      properties:
        user_id:
          type: string
          format: uuid
        role:
          type: integer
        id:
          type: integer
          readOnly: true
        right:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/RightEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        role_code:
          type: string
          readOnly: true
      required:
      - id
      - role_code
      - user_id
    PersonalToken:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        name:
          type: string
          maxLength: 256
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - name
      - pk
    PersonalTokenRights:
      type: object
      properties:
        is_authorized:
          type: boolean
          readOnly: true
      required:
      - is_authorized
    PersonalTokenView:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        name:
          type: string
          readOnly: true
        token:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - name
      - pk
      - token
    Plan:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: string
        base_plan:
          type: integer
          nullable: true
          title: Base Plan (for options)
        options:
          type: array
          items:
            $ref: '#/components/schemas/Plan'
        services:
          type: array
          items:
            $ref: '#/components/schemas/Service'
        one_off_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,7}(?:\.\d{0,4})?$
          title: Base one-off price
        recurring_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,7}(?:\.\d{0,4})?$
          title: Base recurring price
        period:
          $ref: '#/components/schemas/PeriodEnum'
        enable_subcounters:
          type: boolean
          title: Adds dynamic categorical sub-counters
        min_multiple:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: Minimum occurence of this option
        max_multiple:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          title: Maximum occurence of this option
        trial_days:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Number of days in the trial period, before starting to invoice
        version:
          $ref: '#/components/schemas/PlanVersion'
        metadata: {}
        code:
          type: string
          nullable: true
          title: Plan code
          maxLength: 24
        natural_key:
          type: string
          description: |-
            The notion of natural key is used in fixtures
            https://docs.djangoproject.com/en/4.0/topics/serialization/#natural-keys
          readOnly: true
        private:
          type: boolean
          description: A private plan is not visible and can be only subscribed to
            if the `code` is known
        tariffs:
          type: array
          items:
            $ref: '#/components/schemas/Tariff'
        tariff_extras:
          type: array
          items:
            $ref: '#/components/schemas/TariffExtra'
        id:
          type: integer
          readOnly: true
      required:
      - id
      - natural_key
      - one_off_price
      - options
      - recurring_price
      - services
      - tariff_extras
      - tariffs
      - translations
      - version
    PlanList:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        id:
          type: integer
          readOnly: true
        translations:
          type: string
        options:
          type: array
          items:
            type: integer
          readOnly: true
        one_off_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,7}(?:\.\d{0,4})?$
          title: Base one-off price
        recurring_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,7}(?:\.\d{0,4})?$
          title: Base recurring price
        period:
          $ref: '#/components/schemas/PeriodEnum'
        enable_subcounters:
          type: boolean
          title: Adds dynamic categorical sub-counters
        no_ratio:
          type: boolean
          title: Don't bill pro-rata temporis when not on a full period
        min_multiple:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: Minimum occurence of this option
        max_multiple:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          title: Maximum occurence of this option
        trial_days:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Number of days in the trial period, before starting to invoice
        metadata: {}
        code:
          type: string
          nullable: true
          title: Plan code
          maxLength: 24
        private:
          type: boolean
          description: A private plan is not visible and can be only subscribed to
            if the `code` is known
        invoice_section:
          type: string
          description: Section of invoice for options costs
          maxLength: 256
        base_plan:
          type: integer
          nullable: true
          title: Base Plan (for options)
      required:
      - id
      - one_off_price
      - options
      - recurring_price
      - translations
    PlanVersion:
      type: object
      properties:
        version_code:
          type: string
          maxLength: 255
        visible_from:
          type: string
          format: date-time
          title: Start time of visibility
        visible_to:
          type: string
          format: date-time
          nullable: true
          title: End time of visibility
      required:
      - version_code
      - visible_from
    PollClock:
      type: object
      properties:
        clock_id:
          type: string
          maxLength: 255
        organization_uid:
          type: string
          format: uuid
          nullable: true
        link:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        used_at:
          type: string
          format: date-time
          nullable: true
        used_by:
          type: string
          format: uuid
          readOnly: true
          nullable: true
      required:
      - clock_id
      - used_by
    ProductIdEnum:
      enum:
      - swiss.deepcloud.deepsign.signaturePackageSes12.dev
      - swiss.deepcloud.deepsign.signaturePackageSes12.int
      - swiss.deepcloud.deepsign.signaturePackageSes12.demo
      - swiss.deepcloud.deepsign.signaturePackageSes12
      - swiss.deepcloud.android.deepsign_signature.package.v1.12.ses
      - swiss.deepcloud.android.deepsign.int_signature.package.v1.12.ses
      - swiss.deepcloud.android.deepsign.dev_signature.package.v1.12.ses
      - swiss.deepcloud.android.deepsign.demo_signature.package.v1.12.ses
      - swiss.deepcloud.deepsign.signaturePackageSes40.dev
      - swiss.deepcloud.deepsign.signaturePackageSes40.int
      - swiss.deepcloud.deepsign.signaturePackageSes40.demo
      - swiss.deepcloud.deepsign.signaturePackageSes40
      - swiss.deepcloud.android.deepsign_signature.package.v1.40.ses
      - swiss.deepcloud.android.deepsign.int_signature.package.v1.40.ses
      - swiss.deepcloud.android.deepsign.dev_signature.package.v1.40.ses
      - swiss.deepcloud.android.deepsign.demo_signature.package.v1.40.ses
      - swiss.deepcloud.deepsign.signaturePackageQes3.dev
      - swiss.deepcloud.deepsign.signaturePackageQes3.int
      - swiss.deepcloud.deepsign.signaturePackageQes3.demo
      - swiss.deepcloud.deepsign.signaturePackageQes3
      - swiss.deepcloud.android.deepsign_signature.package.v1.3.qes
      - swiss.deepcloud.android.deepsign.int_signature.package.v1.3.qes
      - swiss.deepcloud.android.deepsign.dev_signature.package.v1.3.qes
      - swiss.deepcloud.android.deepsign.demo_signature.package.v1.3.qes
      - swiss.deepcloud.deepsign.signaturePackageQes10.dev
      - swiss.deepcloud.deepsign.signaturePackageQes10.int
      - swiss.deepcloud.deepsign.signaturePackageQes10.demo
      - swiss.deepcloud.deepsign.signaturePackageQes10
      - swiss.deepcloud.android.deepsign_signature.package.v1.10.qes
      - swiss.deepcloud.android.deepsign.int_signature.package.v1.10.qes
      - swiss.deepcloud.android.deepsign.dev_signature.package.v1.10.qes
      - swiss.deepcloud.android.deepsign.demo_signature.package.v1.10.qes
      type: string
      description: |-
        * `swiss.deepcloud.deepsign.signaturePackageSes12.dev` - swiss.deepcloud.deepsign.signaturePackageSes12.dev
        * `swiss.deepcloud.deepsign.signaturePackageSes12.int` - swiss.deepcloud.deepsign.signaturePackageSes12.int
        * `swiss.deepcloud.deepsign.signaturePackageSes12.demo` - swiss.deepcloud.deepsign.signaturePackageSes12.demo
        * `swiss.deepcloud.deepsign.signaturePackageSes12` - swiss.deepcloud.deepsign.signaturePackageSes12
        * `swiss.deepcloud.android.deepsign_signature.package.v1.12.ses` - swiss.deepcloud.android.deepsign_signature.package.v1.12.ses
        * `swiss.deepcloud.android.deepsign.int_signature.package.v1.12.ses` - swiss.deepcloud.android.deepsign.int_signature.package.v1.12.ses
        * `swiss.deepcloud.android.deepsign.dev_signature.package.v1.12.ses` - swiss.deepcloud.android.deepsign.dev_signature.package.v1.12.ses
        * `swiss.deepcloud.android.deepsign.demo_signature.package.v1.12.ses` - swiss.deepcloud.android.deepsign.demo_signature.package.v1.12.ses
        * `swiss.deepcloud.deepsign.signaturePackageSes40.dev` - swiss.deepcloud.deepsign.signaturePackageSes40.dev
        * `swiss.deepcloud.deepsign.signaturePackageSes40.int` - swiss.deepcloud.deepsign.signaturePackageSes40.int
        * `swiss.deepcloud.deepsign.signaturePackageSes40.demo` - swiss.deepcloud.deepsign.signaturePackageSes40.demo
        * `swiss.deepcloud.deepsign.signaturePackageSes40` - swiss.deepcloud.deepsign.signaturePackageSes40
        * `swiss.deepcloud.android.deepsign_signature.package.v1.40.ses` - swiss.deepcloud.android.deepsign_signature.package.v1.40.ses
        * `swiss.deepcloud.android.deepsign.int_signature.package.v1.40.ses` - swiss.deepcloud.android.deepsign.int_signature.package.v1.40.ses
        * `swiss.deepcloud.android.deepsign.dev_signature.package.v1.40.ses` - swiss.deepcloud.android.deepsign.dev_signature.package.v1.40.ses
        * `swiss.deepcloud.android.deepsign.demo_signature.package.v1.40.ses` - swiss.deepcloud.android.deepsign.demo_signature.package.v1.40.ses
        * `swiss.deepcloud.deepsign.signaturePackageQes3.dev` - swiss.deepcloud.deepsign.signaturePackageQes3.dev
        * `swiss.deepcloud.deepsign.signaturePackageQes3.int` - swiss.deepcloud.deepsign.signaturePackageQes3.int
        * `swiss.deepcloud.deepsign.signaturePackageQes3.demo` - swiss.deepcloud.deepsign.signaturePackageQes3.demo
        * `swiss.deepcloud.deepsign.signaturePackageQes3` - swiss.deepcloud.deepsign.signaturePackageQes3
        * `swiss.deepcloud.android.deepsign_signature.package.v1.3.qes` - swiss.deepcloud.android.deepsign_signature.package.v1.3.qes
        * `swiss.deepcloud.android.deepsign.int_signature.package.v1.3.qes` - swiss.deepcloud.android.deepsign.int_signature.package.v1.3.qes
        * `swiss.deepcloud.android.deepsign.dev_signature.package.v1.3.qes` - swiss.deepcloud.android.deepsign.dev_signature.package.v1.3.qes
        * `swiss.deepcloud.android.deepsign.demo_signature.package.v1.3.qes` - swiss.deepcloud.android.deepsign.demo_signature.package.v1.3.qes
        * `swiss.deepcloud.deepsign.signaturePackageQes10.dev` - swiss.deepcloud.deepsign.signaturePackageQes10.dev
        * `swiss.deepcloud.deepsign.signaturePackageQes10.int` - swiss.deepcloud.deepsign.signaturePackageQes10.int
        * `swiss.deepcloud.deepsign.signaturePackageQes10.demo` - swiss.deepcloud.deepsign.signaturePackageQes10.demo
        * `swiss.deepcloud.deepsign.signaturePackageQes10` - swiss.deepcloud.deepsign.signaturePackageQes10
        * `swiss.deepcloud.android.deepsign_signature.package.v1.10.qes` - swiss.deepcloud.android.deepsign_signature.package.v1.10.qes
        * `swiss.deepcloud.android.deepsign.int_signature.package.v1.10.qes` - swiss.deepcloud.android.deepsign.int_signature.package.v1.10.qes
        * `swiss.deepcloud.android.deepsign.dev_signature.package.v1.10.qes` - swiss.deepcloud.android.deepsign.dev_signature.package.v1.10.qes
        * `swiss.deepcloud.android.deepsign.demo_signature.package.v1.10.qes` - swiss.deepcloud.android.deepsign.demo_signature.package.v1.10.qes
    RegisterClockCode:
      type: object
      properties:
        clock_id:
          type: string
          writeOnly: true
        firebase_id:
          type: string
          writeOnly: true
          nullable: true
        link:
          type: string
          readOnly: true
      required:
      - clock_id
      - link
    RegisterPerson:
      type: object
      properties:
        person_ref_id:
          type: string
          format: uuid
        status:
          type: string
          readOnly: true
        organization_uid:
          type: string
          format: uuid
          readOnly: true
          nullable: true
        link:
          type: string
          readOnly: true
        is_ok:
          type: boolean
          nullable: true
          readOnly: true
          description: 'True: the user is linked, False: an error occured, Null: waiting
            on user to scan code'
      required:
      - is_ok
      - link
      - organization_uid
      - person_ref_id
      - status
    RightEnum:
      enum:
      - VIEW_TOKEN
      - ORDER_SUB
      - VIEW_SUB
      - MANAGE_MEMBERS
      - MANAGE_COMPANY
      - VIEW_COMPANY
      - MANAGE_SUB_ACCESS
      - USER_MANAGER
      - MANAGE_BOXES
      type: string
      description: |-
        * `VIEW_TOKEN` - View tokens
        * `ORDER_SUB` - Order subscription
        * `VIEW_SUB` - View subscription details
        * `MANAGE_MEMBERS` - Manage members
        * `MANAGE_COMPANY` - Manage company
        * `VIEW_COMPANY` - View the company details and members
        * `MANAGE_SUB_ACCESS` - Manage accesses to subscription
        * `USER_MANAGER` - Services-level admin
        * `MANAGE_BOXES` - Manages boxes in deepbox
    RoleNested:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
      required:
      - id
      - name
    SSOUserProfileLanguage:
      type: object
      properties:
        lang:
          type: string
          nullable: true
          title: Language
          maxLength: 10
      required:
      - lang
    SSOUserProfileLimited:
      type: object
      properties:
        preferences:
          description: User parameters
    SafetyStatusEnum:
      enum:
      - created
      - submitted
      - safe
      - danger
      - error
      type: string
      description: |-
        * `created` - Created
        * `submitted` - Submitted
        * `safe` - Safe
        * `danger` - Dangerous
        * `error` - Error
    Service:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        id:
          type: integer
          readOnly: true
        translations:
          type: string
        url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        aud:
          type: string
          title: Audience (used in JWT)
          maxLength: 128
        logo:
          type: string
          format: uri
          nullable: true
          title: Service logo
        home_display:
          type: boolean
          title: Display on home page
        internal:
          type: boolean
          description: Indicates that this service is internal and should not be shown
            to the end user.
        broker_url:
          type: string
          nullable: true
          maxLength: 1024
        broker_queue:
          type: string
          nullable: true
          maxLength: 256
        allow_third_party_connection:
          type: boolean
          description: If true, the related keycloak client can use the third party
            connection system. It allows for the `form_post` response mode (mode that
            POSTs the user's username and password to a given `redirect_uri` at the
            end of the third party connection start).
        allow_third_party_redirect_response:
          type: boolean
          title: 'Allow third party connection: redirect response'
          description: If true and `allow_third_party_connection`, this service can
            use the `redirect` response mode (mode that redirects the user at the
            end of the third party connection start).
        allow_third_party_copy_paste_response:
          type: boolean
          title: 'Allow third party connection: copy_paste response mode'
          description: If true and `allow_third_party_connection`, this service can
            use the `copy_paste` response mode (mode that displays the service user
            username and password at the end of the third party connection start).
        create_service_users_as_admins:
          type: boolean
          description: Determines whether new service users should be created as admins
            for this service.
        service_user:
          type: integer
          nullable: true
        default_plan:
          type: integer
          nullable: true
          description: Default plan used to create a subscription to a service
        service_user_allowed_companies:
          type: array
          items:
            type: string
            format: uuid
          description: The list of companies which are allowed to manually create
            a service user for this service.
      required:
      - aud
      - id
      - translations
    ShareInvitation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        inviteEmail:
          type: string
          format: email
        expiry_date:
          type: string
          format: date-time
        current_uses:
          type: integer
          readOnly: true
        creator_id:
          type: integer
          nullable: true
          readOnly: true
        is_valid:
          type: boolean
          readOnly: true
        link:
          type: string
          readOnly: true
        pendingUserId:
          type: string
          format: uuid
          readOnly: true
        shareId:
          type: string
          format: uuid
          writeOnly: true
        shareBoxId:
          type: string
          format: uuid
          writeOnly: true
        shareBoxName:
          type: string
          writeOnly: true
        shareOrganizationId:
          type: string
          format: uuid
          writeOnly: true
        inviteText:
          type: string
          writeOnly: true
        lang:
          allOf:
          - $ref: '#/components/schemas/LangEnum'
          writeOnly: true
          description: |-
            Use this field to force the language of the invitation.

            * `de` - German
            * `fr` - French
            * `en` - English
            * `it` - Italian
      required:
      - creator_id
      - current_uses
      - id
      - inviteEmail
      - is_valid
      - link
      - pendingUserId
      - shareBoxId
      - shareBoxName
      - shareId
      - shareOrganizationId
    SourceEnum:
      enum:
      - deepid
      - yapeal
      - manual
      type: string
      description: |-
        * `deepid` - DeepID
        * `yapeal` - YAPEAL
        * `manual` - Manual
    Status:
      type: object
      description: The status of a subscription
      properties:
        is_valid:
          type: boolean
          title: Can the subscription's services be used ?
        is_billable:
          type: boolean
          title: Are the subscription's services billed ?
        is_trial:
          type: boolean
          title: Is the subscription in trial ?
        is_suspended:
          type: boolean
          title: Is the subscription suspended ?
        is_renewable:
          type: boolean
          title: Does the subscription go through the renewable process ?
        name:
          type: string
          title: Machine-readable name for the status
          maxLength: 32
      required:
      - is_billable
      - is_renewable
      - is_suspended
      - is_trial
      - is_valid
      - name
    StatusEnum:
      enum:
      - available
      - in_use
      - consumed
      type: string
      description: |-
        * `available` - Available
        * `in_use` - In Use
        * `consumed` - Consumed
    StructureEnum:
      enum:
      - nobox
      - unregistered
      - personal
      - soleproprietorship
      - generalpartnership
      - limitedpartnership
      - limited
      - limitedliability
      - cooperative
      - association
      - foundation
      - partnershiplimitedbyshares
      - bodycorporate
      - publicinstitution
      - ownershipundividedshares
      - institute
      - publiccorporationlimitedshares
      - publiccooperative
      - other
      type: string
      description: |-
        * `nobox` - No box
        * `unregistered` - Unregistered
        * `personal` - Personal
        * `soleproprietorship` - Sole Proprietorship
        * `generalpartnership` - General Partnership
        * `limitedpartnership` - Limited Partnership
        * `limited` - Limited Company
        * `limitedliability` - Limited Liability Company
        * `cooperative` - Cooperative Company
        * `association` - Association
        * `foundation` - Foundation
        * `partnershiplimitedbyshares` - Partnership Limited by Shares
        * `bodycorporate` - Body Corporate
        * `publicinstitution` - Public Institution
        * `ownershipundividedshares` - Ownership In Undivided Shares
        * `institute` - Institute
        * `publiccorporationlimitedshares` - Public Corporation Limited by Shares
        * `publiccooperative` - Public Cooperative
        * `other` - Other
    SubjectTypeEnum:
      enum:
      - user
      - service_user
      type: string
      description: |-
        * `user` - User
        * `service_user` - Service user
    SubscriptionAuthDetails:
      type: object
      properties:
        error:
          type: string
          description: Machine parseable error
        status:
          $ref: '#/components/schemas/Status'
        feat:
          type: string
          title: Feature code
        limit:
          type: number
          format: double
        value:
          type: number
          format: double
          title: Value of the counter at this time
        time:
          type: number
          format: double
          title: Timestamp of this value
        min_time:
          type: integer
        max_time:
          type: integer
    SubscriptionAuthJsonCat:
      type: object
      description: Serializer which let the client use a JSON object as a category.
      properties:
        svc:
          type: string
          title: Service
          description: The audience/client-id of the service that is responsible for
            modifying the counters in this request.
          maxLength: 128
          minLength: 1
        cat:
          nullable: true
        feat:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: number
              format: double
              title: Amount
              description: The amount to consume, may be negative.
            title: Timestamp
            description: Each key should be a linux epoch timestamp in seconds, and
              each value should be the amount of the feature to consume at that timestamp.
          title: Features
          description: A map of timestamp and amounts to consume for each feature.
            Each key must be a feature code string.
        transactional:
          type: boolean
          default: true
          description: When transactional is true, no counters are modified if any
            counter modification fails (i.e. passes a limit). Set this to false to
            allow counters to change even if authorise should be false.
        force:
          type: boolean
          default: false
          description: By default, with the force parameter as false, the amounts
            passed to the authorize function are incremental. Set the force parameter
            to true, in order to consider the amounts as absolute instead. Use this
            reset a counter that has gotten out of synchronisation for example.
        check_only:
          type: boolean
          default: false
          description: This flag can be used to check what the authorize call would
            have returned for the given counters increment, without modifying the
            counters. It is however not guaranteed that a later call without the flag
            would return the same result, as the counters might have changed in between.
            (this call doesn't do any reservation)
      required:
      - feat
      - svc
    SubscriptionAuthResponse:
      type: object
      properties:
        authorize:
          type: boolean
          title: Authorization status
        details:
          $ref: '#/components/schemas/SubscriptionAuthDetails'
      required:
      - authorize
    SubscriptionAuthStatus:
      type: object
      properties:
        feat:
          type: string
          title: Feature code
        limit:
          type: number
          format: double
          nullable: true
        time:
          type: number
          format: double
          title: Timestamp of this value
        value:
          type: number
          format: double
          title: Value of the counter at this time
        status:
          $ref: '#/components/schemas/Status'
        params:
          $ref: '#/components/schemas/CounterParameter'
      required:
      - feat
      - params
      - status
      - time
      - value
    SubscriptionAvailableSignatures:
      type: object
      properties:
        SIGN_SES:
          type: integer
          default: 0
        SIGN_AES:
          type: integer
          default: 0
        SIGN_QES:
          type: integer
          default: 0
    SubscriptionDeepBoxCosts:
      type: object
      properties:
        best_subscription_plan:
          $ref: '#/components/schemas/DeepBoxCost'
        best_no_ratio_subscription_plan:
          $ref: '#/components/schemas/DeepBoxCost'
        merged_subscription_plans:
          $ref: '#/components/schemas/DeepBoxCost'
        storage:
          $ref: '#/components/schemas/DeepBoxCost'
        advancedbox:
          $ref: '#/components/schemas/DeepBoxCost'
        abaimmobox:
          $ref: '#/components/schemas/DeepBoxCost'
        deepodoc_included:
          $ref: '#/components/schemas/DeepBoxCost'
        deepodoc_additional:
          $ref: '#/components/schemas/DeepBoxCost'
        position_recognition:
          $ref: '#/components/schemas/DeepBoxCost'
        user_defined_keyword_tariff_high:
          $ref: '#/components/schemas/DeepBoxCost'
        user_defined_keyword_tariff_low:
          $ref: '#/components/schemas/DeepBoxCost'
        advancedbox_voucher:
          $ref: '#/components/schemas/DeepBoxCost'
        deepo_voucher:
          $ref: '#/components/schemas/DeepBoxCost'
        deepo_position_voucher:
          $ref: '#/components/schemas/DeepBoxCost'
        deepo_keyword_voucher:
          $ref: '#/components/schemas/DeepBoxCost'
        deepflow_voucher:
          $ref: '#/components/schemas/DeepBoxCost'
        deepbox_pre_yapeal:
          $ref: '#/components/schemas/DeepBoxCost'
        deepbox_total:
          $ref: '#/components/schemas/DeepBoxCost'
        deepbox_boxes_subtotal:
          $ref: '#/components/schemas/DeepBoxCost'
        deepbox_deepo_subtotal:
          $ref: '#/components/schemas/DeepBoxCost'
        deepv_sub:
          $ref: '#/components/schemas/DeepBoxCost'
        deepv_included_tariff:
          $ref: '#/components/schemas/DeepBoxCost'
        deepv_additional_tariff:
          $ref: '#/components/schemas/DeepBoxCost'
        deepv_total:
          $ref: '#/components/schemas/DeepBoxCost'
        deepv_variable_subtotal:
          $ref: '#/components/schemas/DeepBoxCost'
        hoop:
          $ref: '#/components/schemas/DeepBoxCost'
        apps_total:
          $ref: '#/components/schemas/DeepBoxCost'
        deepsign_packages_ses:
          $ref: '#/components/schemas/DeepBoxCost'
        deepsign_packages_aes:
          $ref: '#/components/schemas/DeepBoxCost'
        deepsign_packages_qes:
          $ref: '#/components/schemas/DeepBoxCost'
        deepsign_sub:
          $ref: '#/components/schemas/DeepBoxCost'
        deepsign_ses_variable:
          $ref: '#/components/schemas/DeepBoxCost'
        deepsign_aes_variable:
          $ref: '#/components/schemas/DeepBoxCost'
        deepsign_voucher:
          $ref: '#/components/schemas/DeepBoxCost'
        deepsign_total:
          $ref: '#/components/schemas/DeepBoxCost'
        deepsign_packages_subtotal:
          $ref: '#/components/schemas/DeepBoxCost'
        deepsign_sign_variable_subtotal:
          $ref: '#/components/schemas/DeepBoxCost'
        deepsign_qes_variable:
          $ref: '#/components/schemas/DeepBoxCost'
        total_pre_vat:
          $ref: '#/components/schemas/DeepBoxCost'
        total_vat:
          $ref: '#/components/schemas/DeepBoxCost'
        total_post_vat:
          $ref: '#/components/schemas/DeepBoxCost'
      required:
      - abaimmobox
      - advancedbox
      - advancedbox_voucher
      - apps_total
      - best_no_ratio_subscription_plan
      - best_subscription_plan
      - deepbox_boxes_subtotal
      - deepbox_deepo_subtotal
      - deepbox_pre_yapeal
      - deepbox_total
      - deepflow_voucher
      - deepo_keyword_voucher
      - deepo_position_voucher
      - deepo_voucher
      - deepodoc_additional
      - deepodoc_included
      - deepsign_aes_variable
      - deepsign_packages_aes
      - deepsign_packages_qes
      - deepsign_packages_ses
      - deepsign_packages_subtotal
      - deepsign_qes_variable
      - deepsign_ses_variable
      - deepsign_sign_variable_subtotal
      - deepsign_sub
      - deepsign_total
      - deepsign_voucher
      - deepv_additional_tariff
      - deepv_included_tariff
      - deepv_sub
      - deepv_total
      - deepv_variable_subtotal
      - hoop
      - merged_subscription_plans
      - position_recognition
      - storage
      - total_post_vat
      - total_pre_vat
      - total_vat
      - user_defined_keyword_tariff_high
      - user_defined_keyword_tariff_low
    SubscriptionDeepBoxStatus:
      type: object
      properties:
        limit:
          type: number
          format: double
        value:
          type: number
          format: double
      required:
      - limit
      - value
    SubscriptionOption:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        plan:
          type: integer
          description: Only used on creation, never on update. If `plan` is given,
            `plan_code` should not
        amount:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Number of occurence of this option
        start:
          type: string
          format: date-time
          title: Start of validity of the option
        end:
          type: string
          format: date-time
          readOnly: true
          title: End of validity of the option
        is_renewable:
          type: boolean
          readOnly: true
          title: Will the option be renewed next period?
        plan_code:
          type: string
          nullable: true
          title: Plan code
          description: Only used on creation, never on update. If `plan_code` is given,
            `plan` should not
      required:
      - amount
      - end
      - id
      - is_renewable
    SubscriptionPackage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        package:
          type: string
          title: Package code
          description: the code is globally unique, not per version
        amount:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Number of occurence of this package
        start:
          type: string
          format: date-time
          title: Start of validity of the package
        end:
          type: string
          format: date-time
          title: End of validity of the package
        auto_renew:
          type: boolean
          default: false
          title: Will the package be renewed when used up?
        amounts_remaining:
          type: object
          additionalProperties: {}
          readOnly: true
      required:
      - amounts_remaining
      - id
      - package
      - start
    SubscriptionPackageView:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        package:
          $ref: '#/components/schemas/DisplayPackage'
        amount:
          type: integer
          readOnly: true
          title: Number of occurence of this package
        start:
          type: string
          format: date-time
          readOnly: true
          title: Start of validity of the package
        end:
          type: string
          format: date-time
          readOnly: true
          title: End of validity of the package
        auto_renew:
          type: boolean
          readOnly: true
          default: false
          title: Will the package be renewed when used up?
        amounts_remaining:
          type: object
          additionalProperties: {}
          readOnly: true
      required:
      - amount
      - amounts_remaining
      - auto_renew
      - end
      - id
      - package
      - start
    Support:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/TypeF35Enum'
          description: |-
            The type of the user request

            * `support` - Support
            * `feedback` - Feedback
            * `sales` - Sales
        text:
          type: string
          description: The text content of the request
        contact:
          type: string
          description: An optional additionnal contact field given by the user. Can
            be anything (phone number, email, etc.).
          maxLength: 512
        files:
          type: array
          items:
            type: string
            description: Optional files (e.g. screenshot) which shows the issue
      required:
      - text
      - type
    Tariff:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        parameters:
          $ref: '#/components/schemas/CounterParameter'
        feature_id:
          type: integer
          readOnly: true
        feature_code:
          type: string
          title: Codename
          readOnly: true
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,7}(?:\.\d{0,4})?$
        per_unit:
          type: number
          format: double
          title: Number of units for the price
        value_from:
          type: number
          format: double
          title: Lowerbound for the applicability of the tariff
        value_to:
          type: number
          format: double
          nullable: true
          title: Upperbound for the applicability of the tariff
        is_threshold:
          type: boolean
          title: Consider the upperbound as a blocking threshold?
        aggregation:
          nullable: true
          title: Aggregation function used to group periods
          oneOf:
          - $ref: '#/components/schemas/AggregationEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
      required:
      - feature_code
      - feature_id
      - id
      - parameters
      - price
      - value_from
    TariffExtra:
      type: object
      properties:
        value:
          type: number
          format: double
          nullable: true
          title: If the option is multipliable, this is added to all existing bounds
        auto_addable:
          type: boolean
          title: Is this extra used for auto-add feature?
        tariff:
          type: integer
          title: Tariff threshold to increase
      required:
      - tariff
    TeleportResult:
      type: object
      properties:
        result: {}
    TypeF35Enum:
      enum:
      - support
      - feedback
      - sales
      type: string
      description: |-
        * `support` - Support
        * `feedback` - Feedback
        * `sales` - Sales
    Unit:
      type: object
      description: |-
        Simple Unit Serializer with no tree/children/parent crawling capabilities
        To be extended for use in more specialized actions
      properties:
        group_id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          format: email
          title: Reference
          description: A unique email address (which could not exist) to reference
            this entity
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        parent:
          type: string
          format: uuid
          nullable: true
        display_name:
          type: string
          maxLength: 255
        default_address:
          allOf:
          - $ref: '#/components/schemas/Address'
          readOnly: true
        metadata:
          readOnly: true
        logo:
          type: string
          format: uri
          nullable: true
          description: For reading, it returns the URL. For writing you need to provide
            the image base64 encoded, like "data:image/png;base64,<BASE64_DATA>".
        company_id:
          type: string
          format: uuid
          readOnly: true
      required:
      - company_id
      - created_at
      - default_address
      - display_name
      - group_id
      - metadata
    UnitRoles:
      type: object
      description: |-
        Simple Unit Serializer with no tree/children/parent crawling capabilities
        To be extended for use in more specialized actions
      properties:
        group_id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          format: email
          title: Reference
          description: A unique email address (which could not exist) to reference
            this entity
          maxLength: 255
        display_name:
          type: string
          maxLength: 255
        default_address:
          allOf:
          - $ref: '#/components/schemas/Address'
          readOnly: true
        metadata:
          readOnly: true
        logo:
          type: string
          format: uri
          nullable: true
          description: For reading, it returns the URL. For writing you need to provide
            the image base64 encoded, like "data:image/png;base64,<BASE64_DATA>".
        roles:
          type: array
          items:
            type: string
          readOnly: true
      required:
      - default_address
      - display_name
      - group_id
      - metadata
      - roles
    UnitTree:
      type: object
      description: |-
        Unit Serializer with downward crawling capabilities (display unit children recursively)
        In addition, will add the permissions of the user ID passed in serializer context (if there is one)
      properties:
        group_id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          format: email
          title: Reference
          description: A unique email address (which could not exist) to reference
            this entity
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        display_name:
          type: string
          maxLength: 255
        default_address:
          allOf:
          - $ref: '#/components/schemas/Address'
          readOnly: true
        units:
          type: string
          readOnly: true
        user_unit_roles:
          type: array
          items:
            type: string
          readOnly: true
          deprecated: true
        user_roles:
          type: array
          items:
            $ref: '#/components/schemas/MemberPermissionRole'
          readOnly: true
          description: Get the roles of the current user. This only display the main
            roles.
        metadata:
          readOnly: true
        logo:
          type: string
          format: uri
          nullable: true
          description: For reading, it returns the URL. For writing you need to provide
            the image base64 encoded, like "data:image/png;base64,<BASE64_DATA>".
      required:
      - created_at
      - default_address
      - display_name
      - group_id
      - metadata
      - units
      - user_roles
      - user_unit_roles
    User:
      type: object
      properties:
        email:
          type: string
          format: email
        firstname:
          type: string
        lastname:
          type: string
        id:
          type: string
          format: uuid
        enabled:
          type: boolean
        pending:
          type: boolean
          readOnly: true
        verified:
          type: boolean
          readOnly: true
        lang:
          type: string
          readOnly: true
        display_name:
          type: string
          readOnly: true
        identity_uid:
          type: string
          format: uuid
          readOnly: true
        identities:
          type: object
          additionalProperties: {}
          readOnly: true
      required:
      - display_name
      - email
      - id
      - identities
      - identity_uid
      - lang
      - pending
      - verified
    UserCreate:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 254
        firstName:
          type: string
          maxLength: 150
        lastName:
          type: string
          maxLength: 150
        lang:
          type: string
        password:
          type: string
        client_id:
          type: string
        redirect_uri:
          type: string
        accept_terms:
          type: boolean
        no_login:
          type: boolean
        update_profile:
          type: boolean
      required:
      - email
      - firstName
      - lastName
    UserDetail:
      type: object
      properties:
        id:
          type: string
          format: uuid
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        enabled:
          type: boolean
        is_service_user:
          type: boolean
        lang:
          type: string
        title:
          type: string
        display_name:
          type: string
        country:
          oneOf:
          - $ref: '#/components/schemas/CountryEnum'
          - $ref: '#/components/schemas/BlankEnum'
        phonenumber:
          type: string
          nullable: true
        username:
          type: string
        createdTimestamp:
          type: integer
        attributes: {}
        totp:
          type: boolean
        emailVerified:
          type: boolean
        disableableCredentialTypes:
          type: array
          items: {}
        requiredActions:
          type: array
          items: {}
        federatedIdentities:
          type: array
          items: {}
        notBefore:
          type: integer
        access: {}
      required:
      - email
    UserFeature:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        code:
          type: string
          title: Codename
          maxLength: 32
        value_type: {}
        invoice_section:
          type: string
          description: Section of invoice for variable costs
          maxLength: 256
        translations:
          type: string
      required:
      - code
      - translations
      - value_type
    UserFull:
      type: object
      properties:
        email:
          type: string
          format: email
        firstname:
          type: string
        lastname:
          type: string
        id:
          type: string
          format: uuid
        groups:
          type: array
          items:
            $ref: '#/components/schemas/GroupRoles'
          readOnly: true
        companies:
          type: array
          items:
            $ref: '#/components/schemas/CompanyRoles'
          readOnly: true
        units:
          type: array
          items:
            $ref: '#/components/schemas/UnitRoles'
          readOnly: true
        pending:
          type: boolean
          readOnly: true
        pending_invitations:
          type: array
          items:
            $ref: '#/components/schemas/Invitation'
          readOnly: true
        lang:
          type: string
          readOnly: true
        display_name:
          type: string
          readOnly: true
      required:
      - companies
      - display_name
      - email
      - groups
      - id
      - lang
      - pending
      - pending_invitations
      - units
    UserGroup:
      oneOf:
      - $ref: '#/components/schemas/Company'
      - $ref: '#/components/schemas/BasicUnit'
      - $ref: '#/components/schemas/Group'
    UserListFromAPI:
      type: object
      properties:
        id:
          type: string
          format: uuid
        firstname:
          type: string
        lastname:
          type: string
        email:
          type: string
          format: email
        enabled:
          type: boolean
        attributes: {}
      required:
      - email
      - enabled
      - id
    UserNotify:
      type: object
      properties:
        client_id:
          type: string
        redirect_uri:
          type: string
    UserPasswordReset:
      type: object
      properties:
        temporary_password:
          type: string
      required:
      - temporary_password
    UserValidation:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        valid:
          type: boolean
          description: Has the user been validated
        created_at:
          type: string
          format: date-time
          readOnly: true
        edited_at:
          type: string
          format: date-time
          readOnly: true
        nationality:
          type: string
          readOnly: true
        first_names:
          type: string
          title: First name
          description: and other middle names
          maxLength: 256
        last_name:
          type: string
          maxLength: 256
        birthdate:
          type: string
          format: date
          nullable: true
        source:
          $ref: '#/components/schemas/SourceEnum'
        source_info:
          nullable: true
      required:
      - created_at
      - edited_at
      - first_names
      - last_name
      - nationality
      - pk
    UserWithIdentity:
      type: object
      properties:
        email:
          type: string
          format: email
        firstname:
          type: string
        lastname:
          type: string
        id:
          type: string
          format: uuid
        enabled:
          type: boolean
        pending:
          type: boolean
          readOnly: true
        verified:
          type: boolean
          readOnly: true
        lang:
          type: string
          readOnly: true
        display_name:
          type: string
          readOnly: true
        identity_uid:
          type: string
          format: uuid
          readOnly: true
        identities:
          type: object
          additionalProperties: {}
          readOnly: true
        authentication_method:
          allOf:
          - $ref: '#/components/schemas/AuthenticationMethodEnum'
          readOnly: true
          description: 'possible values: SSO, 2FA, Password'
      required:
      - authentication_method
      - display_name
      - email
      - id
      - identities
      - identity_uid
      - lang
      - pending
      - verified
    ValidityEnum:
      enum:
      - 100year
      - 5year
      - year
      - 6month
      - 4month
      - 3month
      - 2month
      - month
      - 2week
      - week
      - 3day
      - 2day
      - day
      type: string
      description: |-
        * `100year` - hundred years
        * `5year` - five years
        * `year` - one year
        * `6month` - six months
        * `4month` - four months
        * `3month` - three months
        * `2month` - two months
        * `month` - one month
        * `2week` - two weeks
        * `week` - one week
        * `3day` - three days
        * `2day` - two days
        * `day` - one day
    VerificationProcessStatusEnum:
      enum:
      - in_progress
      - started
      type: string
    VerificationStateEnum:
      enum:
      - strong
      - weak
      - none
      type: string
    VerificationTypeEnum:
      enum:
      - dns_txt
      - manual
      type: string
      description: |-
        * `dns_txt` - DNS TXT record
        * `manual` - Manual verification
    Verify:
      type: object
      properties:
        level:
          allOf:
          - $ref: '#/components/schemas/VerifyLevelEnum'
          default: strong
    VerifyLevelEnum:
      enum:
      - weak
      - strong
      type: string
      description: |-
        * `weak` - Weak
        * `strong` - Strong
    YapealIban:
      type: object
      properties:
        iban:
          type: string
      required:
      - iban
    YapealIbanResponse:
      type: object
      properties:
        iban_link:
          type: string
      required:
      - iban_link
  securitySchemes:
    JWTTokenAuthentication:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: ''
          tokenUrl: ''
          scopes: {}
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: http
      scheme: bearer
